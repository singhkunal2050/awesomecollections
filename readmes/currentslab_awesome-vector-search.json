{
  "repo_name": "currentslab_awesome-vector-search",
  "readme_content": "## Awesome Vector Search Engine\n\n\n> A curated list of awesome vector search framework/engine, library, cloud service and research papers to vector similarity search\n\n\n### Standalone Service\n- [Qdrant -  Vector Similarity Search Engine with extended filtering support](https://github.com/qdrant/qdrant)\n- [Vald - A Highly Scalable Distributed Vector Search Engine](https://github.com/vdaas/vald)\n- [Milvus - A cloud-native vector database with high-performance and high scalability.](https://github.com/milvus-io/milvus)\n- [Weaviate - A cloud-native, real-time vector search engine](https://github.com/semi-technologies/weaviate)\n- [OpenDistro Elasticsearch KNN - A machine learning plugin which supports an approximate k-NN search algorithm for Open Distro for Elasticsearch](https://github.com/opendistro-for-elasticsearch/k-NN)\n- [Elastiknn - Elasticsearch plugin for nearest neighbor search](https://github.com/alexklibisz/elastiknn)\n- [Vearch - A scalable distributed system for efficient similarity search of deep learning vectors](https://github.com/vearch/vearch)\n- [pgANN - Fast Approximate Nearest Neighbor (ANN) searches with a PostgreSQL database](https://github.com/netrasys/pgANN)\n- [Jina - Jina allows you to build deep learning-powered search-as-a-service.](https://github.com/jina-ai/jina)\n- [Aquila DB - Distribution focused k-NN search algorithm](https://github.com/Aquila-Network/AquilaDB)\n- [Redis HNSW - A redis module for similarity search based on HNSW](https://github.com/zhao-lang/redis_hnsw)\n- [Marqo - A semantic search engine which supports tensor search (sequence of vectors)](https://github.com/marqo-ai/marqo)\n- [txtai - Build semantic search applications and workflows](https://github.com/neuml/txtai)\n- [VQLite - Simple and Lightweight Vector Search Engine](https://github.com/VQLite/VQLite)\n\n### Library\n- [Faiss - A library for efficient similarity search and clustering of dense vectors](https://github.com/facebookresearch/faiss)\n- [Distributed Faiss - Work with FAISS indexes which don't fit into a single server memory](https://github.com/facebookresearch/distributed-faiss)\n- [Autofaiss - Automatically create Faiss knn indices](https://github.com/criteo/autofaiss)\n- [ScaNN - A library efficient vector similarity search at scale. ](https://github.com/google-research/google-research/tree/master/scann)\n- [NMSLIB - Non-Metric Space Library, an efficient similarity search library for generic non-metric spaces](https://github.com/nmslib/nmslib)\n- [Annoy - C++ library with Python bindings to search for points](https://github.com/spotify/annoy)\n- [FLANN - Library written in C++ and contains bindings for the following languages: C, MATLAB, Python, and Ruby](http://www.cs.ubc.ca/research/flann/)\n- [MRPT - Fast nearest neighbor search with random projection](https://github.com/teemupitkanen/mrpt)\n- [RPForest - Python library for approximate nearest neighbours search](https://github.com/lyst/rpforest)\n- [pgvector - Open-source vector similarity search extension for Postgres](https://github.com/pgvector/pgvector)\n- [PASE - Ultra-High-Dimensional approximate nearest neighbor search extension for Postgres](https://github.com/alipay/PASE)\n- [Pyserini - Toolkit for reproducible information retrieval research with sparse and dense representations](https://github.com/castorini/pyserini)\n- [NGT - Provides commands and a library for performing high-speed approximate nearest neighbor ](https://github.com/yahoojapan/NGT)\n- [NearPy - Approximate search using different locality-sensitive hashing methods](http://pixelogik.github.io/NearPy/)\n- [TOROS N2 - lightweight approximate Nearest Neighbor library](https://github.com/kakao/n2)\n- [PUFFINN - Parameterless and Universal Fast FInding of Nearest Neighbors](https://github.com/puffinn/puffinn)\n- [SPTAG - A distributed approximate nearest neighborhood search (ANN) library ](https://github.com/microsoft/SPTAG)\n- [PyNNDescent - A python nearest neighbor descent for approximate k nearest neighbors](https://github.com/lmcinnes/pynndescent)\n- [TarsosLSH - A Java library implementing practical nearest neighbour search algorithm for multidimensional vectors ](https://github.com/JorenSix/TarsosLSH)\n- [TorchPQ - Efficient implementations of Product Quantization and its variants using Pytorch and CUDA](https://github.com/DeMoriarty/TorchPQ)\n- [Granne  - Graph-based retrieval of approximate nearest neighbors witten in rust ](https://github.com/granne/granne)\n- [Embeddinghub - A database built for machine learning embeddings](https://github.com/featureform/embeddinghub)\n- [Hora - Efficient approximate nearest neighbor search algorithm collections library written in Rust](https://github.com/hora-search/hora)\n- [Voy - A WASM vector similarity search engine written in Rust](https://github.com/tantaraio/voy)\n- [Chroma - The open-source embedding database for building LLM apps in Python or JavaScript with memory](https://github.com/chroma-core/chroma)\n- [USearch - Smaller & Faster Vector Search Engine for C++, Python, JavaScript, Rust, Java, GoLang, Wolfram](https://github.com/unum-cloud/usearch)\n\n### Cloud Service\n\n- [Zilliz Cloud - Cloud-native service for Milvus](https://zilliz.com/cloud)\n- [Relevance AI - Vector Platform From Experimentation To Deployment](https://relevance.ai/vectors/)\n- [Pinecone - Managed vector search with filtering, live index updates, horizontal scaling, and a lot more](https://www.pinecone.io)\n- [MyScale - A managed vector database based on ClickHouse](https://myscale.com)\n\n### Research Papers\n\nList of methods on how approximate vector search algorithm can be implemented more effciently.\n\n- [SPANN: Highly-efficient Billion-scale Approximate Nearest Neighborhood Search - NEURIPS 2021](https://proceedings.neurips.cc/paper/2021/hash/299dc35e747eb77177d9cea10a802da2-Abstract.html)\n- [Revisiting the Inverted Indices for Billion-Scale Approximate Nearest Neighbors - ECCV 2018](https://openaccess.thecvf.com/content_ECCV_2018/html/Dmitry_Baranchuk_Revisiting_the_Inverted_ECCV_2018_paper.html)\n- [Accelerating Large-Scale Inference with Anisotropic Vector Quantization](https://arxiv.org/abs/1908.10396)\n- [Billion-scale similarity search with GPUs](https://arxiv.org/abs/1702.08734)\n- [Efficient and robust approximate nearest neighbor search using Hierarchical Navigable Small World graphs](https://arxiv.org/abs/1603.09320)\n- [Optimization of Indexing Based on k-Nearest Neighbor Graph for Proximity Search in High-dimensional Data](https://arxiv.org/abs/1810.07355)\n- [On Approximately Searching for Similar Word Embeddings - ACL 2016](https://www.aclweb.org/anthology/P16-1214.pdf)\n\n[![CC0](https://i.creativecommons.org/p/zero/1.0/88x31.png)](https://creativecommons.org/publicdomain/zero/1.0/)\n"
}
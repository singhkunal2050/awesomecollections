{
  "repo_name": "chentsulin_awesome-graphql",
  "readme_content": "# awesome-graphql [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\n> Awesome list of GraphQL\n\nIf you want to contribute to this list (please do), send me a pull request.\n\n## Table of Contents\n\n<!-- MarkdownTOC depth=4 -->\n\n- [awesome-graphql ](#awesome-graphql-)\n  - [Table of Contents](#table-of-contents)\n  - [Specifications](#specifications)\n  - [Foundations](#foundations)\n  - [Communities](#communities)\n  - [Meetups](#meetups)\n  - [Implementations](#implementations)\n    - [JavaScript/TypeScript](#javascripttypescript)\n      - [Clients](#clients)\n        - [Frontend Framework Integrations](#frontend-framework-integrations)\n          - [React](#react)\n      - [Servers](#servers)\n        - [Databases \\& ORMs](#databases--orms)\n        - [PubSub](#pubsub)\n      - [Custom Scalars](#custom-scalars)\n      - [Type](#type)\n      - [Miscellaneous](#miscellaneous)\n      - [JavaScript Examples](#javascript-examples)\n      - [TypeScript Examples](#typescript-examples)\n    - [Ruby](#ruby)\n      - [Ruby Examples](#ruby-examples)\n    - [PHP](#php)\n      - [PHP Examples](#php-examples)\n    - [Python](#python)\n      - [Python Examples](#python-examples)\n    - [Java](#java)\n      - [Custom Scalars](#custom-scalars-1)\n      - [Java Examples](#java-examples)\n    - [Kotlin](#kotlin)\n      - [Kotlin Examples](#kotlin-examples)\n    - [C/C++](#cc)\n    - [Go](#go)\n      - [Go Examples](#go-examples)\n    - [Scala](#scala)\n      - [Scala Examples](#scala-examples)\n    - [.NET](#net)\n      - [.NET Examples](#net-examples)\n    - [Elixir](#elixir)\n      - [Elixir Examples](#elixir-examples)\n    - [Haskell](#haskell)\n    - [SQL](#sql)\n    - [Lua](#lua)\n    - [Elm](#elm)\n    - [Clojure](#clojure)\n      - [Clojure Examples](#clojure-examples)\n    - [Swift](#swift)\n    - [OCaml](#ocaml)\n    - [Android](#android)\n      - [Android Examples](#android-examples)\n    - [iOS](#ios)\n      - [iOS Examples](#ios-examples)\n    - [ClojureScript](#clojurescript)\n    - [ReasonML](#reasonml)\n    - [Dart](#dart)\n    - [Rust](#rust)\n      - [Rust Examples](#rust-examples)\n    - [D (dlang)](#d-dlang)\n    - [R (Rstat)](#r-rstat)\n    - [Julia](#julia)\n    - [Crystal](#crystal)\n    - [Ballerina](#ballerina)\n  - [Tools](#tools)\n    - [Tools - Editors \\& IDEs \\& Explorers](#tools---editors--ides--explorers)\n    - [Tools - Testing](#tools---testing)\n    - [Tools - Security](#tools---security)\n    - [Tools - Browser Extensions](#tools---browser-extensions)\n    - [Tools - Prototyping](#tools---prototyping)\n    - [Tools - Docs](#tools---docs)\n    - [Tools - Editor Plugins](#tools---editor-plugins)\n    - [Tools - Miscellaneous](#tools---miscellaneous)\n  - [Databases](#databases)\n  - [Services](#services)\n    - [CDN](#cdn)\n    - [CMS](#cms)\n  - [Books](#books)\n  - [Videos](#videos)\n  - [Podcasts](#podcasts)\n  - [Style Guides](#style-guides)\n  - [Blogs](#blogs)\n    - [Blogs - Security](#blogs---security)\n  - [Posts](#posts)\n  - [Tutorials](#tutorials)\n  - [License](#license)\n\n<!-- /MarkdownTOC -->\n\n<a name=\"spec\" />\n\n## Specifications\n\n- [GraphQL](https://github.com/graphql/graphql-spec) - Working draft of the specification for GraphQL.\n- [GraphQL over HTTP](https://github.com/graphql/graphql-over-http) - Working draft of \"GraphQL over HTTP\" specification.\n- [GraphQL Relay](https://relay.dev/docs/guides/graphql-server-specification/) - Relay-compliant GraphQL server specification.\n- [OpenCRUD](https://github.com/opencrud/opencrud) - OpenCRUD is a GraphQL CRUD API specification for databases.\n- [Apollo Federation](https://www.apollographql.com/docs/federation/federation-spec/) - Apollo Federation specification\n- [GraphQXL](https://gabotechs.github.io/graphqxl/) - GraphQXL is an extension of the GraphQL language with some additional features that help creating big and scalable server-side schemas.\n- [GraphQL Scalars](https://www.graphql-scalars.com/) - hosts community defined custom Scalar specifications for use with @specifiedBy.\n\n<a name=\"foundation\" />\n\n## Foundations\n\n- [GraphQL Foundation](https://graphql.org/foundation/) - GraphQL Foundation under the Linux Foundation\n\n<a name=\"community\" />\n\n## Communities\n\n- [Discord - GraphQL](https://discord.graphql.org/) - Official GraphQL.org discord channel.\n- [GraphQL Weekly](https://www.graphqlweekly.com/) - A weekly newsletter highlighting resources and news from the GraphQL community.\n- [Apollo GraphQL Community](https://community.apollographql.com/) - Connect with other developers and share knowledge about every part of the Apollo GraphQL platform.\n- [Discord - Reactiflux](http://join.reactiflux.com/) - Join `#help-graphql` on the Reactiflux Discord server.\n- [Facebook](https://www.facebook.com/groups/795330550572866/) - Group for discussions, articles and knowledge sharing.\n- [Twitter](https://twitter.com/search?q=%23GraphQL) - Use the hashtag `#graphql`.\n- [StackOverflow](https://stackoverflow.com/questions/tagged/graphql) - Questions and answers. Use the tag `graphql`.\n- [GraphQL APIs](https://github.com/APIs-guru/graphql-apis) - A collective list of public GraphQL APIs.\n- [/r/GraphQL](https://old.reddit.com/r/graphql/) - A Subreddit for interesting and informative GraphQL content and discussions.\n- [GraphQL Jobs](https://graphql.jobs) - A list of GraphQL-based jobs in startups all over the world.\n- [Codever](https://www.codever.land/search?q=graphql) - Dev bookmarks. Use the tag [graphql](https://www.codever.land/bookmarks/t/graphql).\n\n<a name=\"meetup\" />\n\n## Meetups\n\n- [Relay Meetup](https://relaymeetup.com/) - A global, online meetup on Relay, the GraphQL client.\n- [Amsterdam](https://www.meetup.com/Amsterdam-GraphQL-Meetup/)\n- [Bangalore](https://www.meetup.com/graphql-bangalore/)\n- [Berlin](https://www.meetup.com/graphql-berlin/)\n- [Buenos Aires](https://www.meetup.com/es-ES/GraphQL-BA/)\n- [Copenhagen](https://www.meetup.com/Copenhagen-GraphQL-Meetup-Group/)\n- [Dallas-Fort Worth](https://www.meetup.com/DFW-GraphQL-Meetup/)\n- [Hamburg](https://www.meetup.com/GraphQL-Hamburg/)\n- [London](https://www.meetup.com/GraphQL-London/)\n- [Melbourne](https://www.meetup.com/GraphQL-Melbourne/)\n- [Munich](https://www.meetup.com/GraphQL-Munich/)\n- [New York City](https://www.meetup.com/GraphQL-NYC/)\n- [San Francisco](https://www.meetup.com/GraphQL-SF/)\n- [Seattle](https://www.meetup.com/Seattle-GraphQL/)\n- [Sydney](https://www.meetup.com/GraphQL-Sydney/)\n- [Tel Aviv](https://www.meetup.com/GraphQL-TLV/)\n- [Wroc\u0142aw](https://www.meetup.com/GraphQL-Wroclaw/)\n- [Singapore](https://www.meetup.com/GraphQL-SG/)\n- [Zurich](https://www.meetup.com/GraphQL-Zurich/)\n\n<a name=\"impl\" />\n\n## Implementations\n\n<a name=\"js\" />\n\n### JavaScript/TypeScript\n\n- [graphql-js](https://github.com/graphql/graphql-js) - A reference implementation of GraphQL for JavaScript.\n- [graphql-jit](https://github.com/zalando-incubator/graphql-jit) - GraphQL execution using a JIT compiler.\n\n#### Clients\n\n- [apollo-client](https://github.com/apollographql/apollo-client) - A fully-featured, production ready caching GraphQL client for every UI framework and GraphQL server.\n- [graphql-request](https://github.com/prisma-labs/graphql-request) - A minimal GraphQL client for Node and browsers.\n- [typescript-graphql-request](https://graphql-code-generator.com/docs/plugins/typescript-graphql-request) - Use GraphQL Request as a fully typed SDK.\n- [graphql-zeus](https://github.com/graphql-editor/graphql-zeus) - GraphQL Zeus creates autocomplete client library for `JavaScript` or `TypeScript` which provides autocompletion for strongly typed queries.\n- [graphqurl](https://github.com/hasura/graphqurl) - curl for GraphQL with autocomplete, subscriptions and GraphiQL. Also a dead-simple universal javascript GraphQL client.\n- [aws-amplify](https://github.com/aws-amplify/amplify-js) - A client library developed by Amazon for caching, analytics and more that includes a way to fetch GraphQL queries.\n- [gqty](https://github.com/gqty-dev/gqty) - A No GraphQL client for TypeScript\n\n##### Frontend Framework Integrations\n\n- [vue-apollo](https://github.com/vuejs/vue-apollo) - Apollo/GraphQL integration for VueJS.\n- [apollo-angular](https://github.com/kamilkisiela/apollo-angular) - A fully-featured, production ready caching GraphQL client for Angular and every GraphQL server.\n- [svelte-apollo](https://github.com/timhall/svelte-apollo) - Svelte integration for Apollo GraphQL.\n- [ember-apollo-client](https://github.com/ember-graphql/ember-apollo-client) - An ember-cli addon for Apollo Client and GraphQL.\n- [apollo-elements](https://github.com/apollo-elements/apollo-elements) - GraphQL web components that work in any frontend framework.\n- [sveltekit-kitql](https://github.com/jycouet/kitql) - A set of tools, helping you building efficient apps in a fast way with SvelteKit and GraphQL.\n\n###### React\n\n- [react-apollo](https://www.apollographql.com/docs/react/) - The core @apollo/client library provides built-in integration with React.\n- [relay](https://github.com/facebook/relay) - Relay is a JavaScript framework for building data-driven React applications.\n- [urql](https://github.com/FormidableLabs/urql) - A simple caching GraphQL client for React.\n- [graphql-hooks](https://github.com/nearform/graphql-hooks) - Minimal hooks-first GraphQL client with caching and server-side rendering support.\n- [mst-gql](https://github.com/mobxjs/mst-gql) - Bindings for mobx-state-tree and GraphQL.\n- [micro-graphql-react](https://github.com/arackaf/micro-graphql-react) - A lightweight utility for adding GraphQL to React. components. Includes simple caching and uses GET requests that could additionally be cached through a service-worker.\n- [@gqty/react](https://github.com/gqty-dev/gqty) - A No GraphQL client for TypeScript\n\n#### Servers\n\n- [apollo-server](https://github.com/apollographql/apollo-server) - Spec-compliant and production ready JavaScript GraphQL server that lets you develop in a schema-first way. Built for Express, Connect, Hapi, Koa, and more.\n- [hapi-graphql](https://github.com/SimonDegraeve/hapi-graphql) - Create a GraphQL HTTP server with Hapi.\n- [hapi-plugin-graphiql](https://github.com/rse/hapi-plugin-graphiql) - HAPI plugin for GraphiQL integration.\n- [graphql-api-koa](https://github.com/jaydenseric/graphql-api-koa) - GraphQL Koa middleware that implements GraphQL.js from scratch and supports native ESM.\n- [koa-graphql](https://github.com/chentsulin/koa-graphql) - GraphQL Koa Middleware.\n- [graphql-koa-scripts](https://github.com/ryanhs/graphql-koa-scripts) - GraphQL Koa 1 file simplified. usefull for quick test\n- [gql](https://github.com/deno-libs/gql) - Universal GraphQL HTTP middleware for Deno.\n- [mercurius](https://github.com/mercurius-js/mercurius) - GraphQL plugin for Fastify.\n- [graphql-yoga](https://github.com/prisma-labs/graphql-yoga) - Fully-featured GraphQL Server with focus on easy setup, performance and great developer experience.\n- [graphitejs](https://github.com/graphitejs/server) - Framework NodeJS for GraphQL.\n- [graphql-helix](https://github.com/contrawork/graphql-helix) - A highly evolved GraphQL HTTP Server.\n\n##### Databases & ORMs\n\n- [graphql-sequelize](https://github.com/mickhansen/graphql-sequelize) - Sequelize helpers for GraphQL.\n- [graphql-bookshelf](https://github.com/brysgo/graphql-bookshelf) - Some help defining GraphQL schema around BookshelfJS models.\n- [join-monster](https://github.com/acarl005/join-monster) - A GraphQL-to-SQL query execution layer for batch data fetching.\n\n##### PubSub\n\n- [graphql-ably-pubsub](https://www.npmjs.com/package/graphql-ably-pubsub) - Ably PubSub implementation for GraphQL to publish mutation updates and subscribe to the result through a subscription query.\n\n#### Custom Scalars\n\n- [graphql-scalars](https://github.com/Urigo/graphql-scalars) - A library of custom GraphQL Scalars for creating precise type-safe GraphQL schemas.\n\n#### Type\n\n- [type-graphql](https://github.com/19majkel94/type-graphql) - Create GraphQL schema and resolvers with TypeScript, using classes and decorators!\n- [graphql-nexus](https://github.com/graphql-nexus/nexus) - Code-First, Type-Safe, GraphQL Schema Construction.\n- [graphql-code-generator](https://github.com/dotansimha/graphql-code-generator): GraphQL code generator with flexible support for custom plugins and templates like TypeScript (frontend and backend), React Hooks, resolvers signatures and more.\n- [pothos](https://github.com/hayes/pothos) - Pothos is a plugin based GraphQL schema builder for typescript. It makes building graphql schemas in typescript easy, fast and enjoyable.\n- [fast-graphql](https://github.com/idurar/fast-graphql) - Graphql Tools to Strucutre , Combine Resolvers and Merge Schema Definitions for Node.js, Next.Js and Graphql Apollo server\n- [graphql-to-type](https://github.com/lkster/graphql-to-type) - GraphQL query parser written entirely in TypeScript's type system for creating interfaces based on provided query\n\n#### Miscellaneous\n\n- [graphql-tools](https://github.com/apollographql/graphql-tools) - Tool library for building and maintaining GraphQL-JS servers.\n- [graphql-tag](https://github.com/apollographql/graphql-tag) - A JavaScript template literal tag that parses GraphQL queries.\n- [load-gql](https://github.com/KunalSin9h/load-gql) - A tiny, zero dependency GraphQL schema loader from files and folders.\n- [graphql-compose](https://github.com/graphql-compose/graphql-compose) - Tool which allows you to construct flexible graphql schema from different data sources via plugins.\n- [graphql-modules](https://github.com/Urigo/graphql-modules) - Separate GraphQL server into smaller, reusable parts by modules or features.\n- [graphql-shield](https://github.com/maticzav/graphql-shield) - A library that helps creating a permission layer for a graphql api.\n- [graphql-shield-generator](https://github.com/omar-dulaimi/graphql-shield-generator) - Emits a GraphQL Shield from your GraphQL schema.\n- [graphqlgate](https://github.com/oslabs-beta/GraphQL-Gate) - A GraphQL rate-limiting library with query complexity analysis for Node.js\n- [graphql-let](https://github.com/piglovesyou/graphql-let) - A webpack loader to import type-protected codegen results directly from GraphQL documents\n- [graphql-config](https://github.com/kamilkisiela/graphql-config) - One configuration for all your GraphQL tools (supported by most tools, editors & IDEs).\n- [graphql-cli](https://github.com/urigo/graphql-cli) - A command line tool for common GraphQL development workflows.\n- [graphql-toolkit](https://github.com/ardatan/graphql-toolkit) - A set of utils for faster development of GraphQL tools (Schema and documents loading, Schema merging and more).\n- [graphql-mesh](https://github.com/urigo/graphql-mesh) - use GraphQL query language to access data in remote APIs that don't run GraphQL (and also ones that do run GraphQL).\n- [sofa](https://github.com/Urigo/sofa) - Generate REST API from your GraphQL API.\n- [graphback](https://github.com/aerogear/graphback) - Framework and CLI to add a GraphQLCRUD API layer to a GraphQL server using data models.\n- [graphql-middleware](https://github.com/maticzav/graphql-middleware) - Split up your GraphQL resolvers in middleware functions.\n- [graphql-relay-js](https://github.com/graphql/graphql-relay-js) - A library to help construct a graphql-js server supporting react-relay.\n- [graphql-normalizr](https://github.com/monojack/graphql-normalizr) - Normalize GraphQL responses for persisting in the client cache/state.\n- [babel-plugin-graphql](https://github.com/ooflorent/babel-plugin-graphql) - Babel plugin that compile GraphQL tagged template strings.\n- [eslint-plugin-graphql](https://github.com/apollographql/eslint-plugin-graphql) - An ESLint plugin that checks your GraphQL strings against a schema.\n- [graphql-ws](https://github.com/enisdenjo/graphql-ws) - Coherent, zero-dependency, lazy, simple, GraphQL over WebSocket Protocol compliant server and client.\n- [graphql-live-query](https://github.com/n1ru4l/graphql-live-query) - Realtime GraphQL Live Queries with JavaScript.\n- [GraphVinci](https://github.com/Comcast/graphvinci) - An interactive schema visualizer for GraphQL APIs.\n- [supertest-graphql](https://github.com/alexstrat/supertest-graphql) - Extends [supertest](https://github.com/visionmedia/supertest) to easily test a GraphQL endpoint\n- [schemathesis](https://github.com/schemathesis/schemathesis) - Runs arbitrary queries matching a GraphQL schema to find server errors.\n- [microfiber](https://github.com/anvilco/graphql-introspection-tools) - Query and manipulate GraphQL introspection query results in useful ways.\n- [graphql-armor](https://github.com/Escape-Technologies/graphql-armor) - An instant security layer for production GraphQL Endpoints.\n- [goctopus](https://github.com/Escape-Technologies/goctopus) - an incredibly fast GraphQL discovery & fingerprinting toolbox.\n- [GraphQL Constraint Directive](https://github.com/confuser/graphql-constraint-directive) - Allows using @constraint as a directive to validate input data. Inspired by Constraints Directives RFC and OpenAPI\n- [Validator.js Wrapper Directive](https://github.com/ktutnik/graphql-directive/tree/master/packages/validator) - A comprehensive list of validator directive wraps Validator.js functionalities\n\n<a name=\"js-example\" />\n\n#### JavaScript Examples\n\n- [React Starter Kit](https://github.com/kriasoft/react-starter-kit) - front-end starter kit using React, Relay, GraphQL, and JAM stack architecture.\n- [SWAPI GraphQL Wrapper](https://github.com/graphql/swapi-graphql) - A GraphQL schema and server wrapping SWAPI.\n- [Relay TodoMVC](https://github.com/taion/relay-todomvc) - Relay TodoMVC with routing.\n- [Apollo Client documentation](https://www.apollographql.com/docs/react) - Documentation and example for building GraphQL apps using apollo client.\n- [Apollo Server tools documentation](https://www.apollographql.com/docs/apollo-server/) - Documentation, tutorial and examples for building GraphQL server and connecting to SQL, MongoDB and REST endpoints.\n- [F8 App 2017](https://github.com/fbsamples/f8app) - Source code of the official F8 app of 2016, powered by React Native and other Facebook open source projects.\n- [Apollo React example for Github GraphQL API](https://github.com/katopz/react-apollo-graphql-github-example) - Usage Examples Apollo React for Github GraphQL API with create-react-app.\n- [Next.js TypeScript and GraphQL Example](https://github.com/zeit/next.js/tree/canary/examples/with-typescript-graphql) - A type-protected GraphQL example on Next.js running [graphql-codegen](https://graphql-code-generator.com/) under the hood\n- [GraphQL StackBlitz Starter](https://stackblitz.com/fork/graphql) \u2013 A live, editable demo spinning up in about 2 seconds and running in a browser.\n- [NAPERG](https://github.com/alan345/naperg) - Fullstack Boilerplate GraphQL. Made with React & Prisma + authentication & roles.\n- [VulcanJS](http://vulcanjs.org) - The full-stack React+GraphQL framework\n- [RAN Toolkit](https://github.com/sly777/ran) - Production-ready toolkit/boilerplate with support for GraphQL, SSR, Hot-reload, CSS-in-JS, caching, and more.\n\n<a name=\"ts-example\" />\n\n#### TypeScript Examples\n\n- [Node.js API Starter](https://github.com/kriasoft/nodejs-api-starter) - Yarn v2 based monorepo template (code-first GraphQL API, PostgreSQL, PnP, Zero-install, serverless).\n- [Next.js Apollo TypeScript Starter](https://github.com/borisowsky/nextjs-apollo-ts-starter) - Next.js starter project focused on developer experience.\n- [GraphQL Starter](https://github.com/cerino-ligutom/GraphQL-Starter) - A boilerplate for TypeScript + Node Express + Apollo GraphQL APIs.\n- [Mocked Managed Federation - Apollo Server 3](https://github.com/setchy/apollo-server-3-mocked-federation) - An example of how to mock a managed federation Supgraph using Apollo Server 3.x\n- [Mocked Managed Federation - Apollo Server 4](https://github.com/setchy/apollo-server-4-mocked-federation) - An example of how to mock a managed federation Supgraph using Apollo Server 4.x\n- [Next.js Advanced Graphql Crud MongoDB Starter](https://github.com/idurar/starter-advanced-graphql-crud-next-js-mongodb) - Starter Generic CRUD with Advanced Apollo Graphql server with Next.js and Mongodb (TypeScript)\n\n<a name=\"rb\" />\n\n### Ruby\n\n- [graphql-ruby](https://github.com/rmosolgo/graphql-ruby) - Ruby implementation of Facebook's GraphQL.\n- [graphql-client](https://github.com/github/graphql-client) - A Ruby library for declaring, composing and executing GraphQL queries.\n- [graphql-batch](https://github.com/Shopify/graphql-batch) - A query batching executor for the graphql gem.\n- [graphql-auth](https://github.com/o2web/graphql-auth) - A JWT auth wrapper working with devise.\n- [agoo](https://github.com/ohler55/agoo) - Ruby web server that implements Facebook's GraphQL.\n- [GQLi](https://github.com/contentful-labs/gqli.rb) - A GraphQL client and DSL. Allowing to write queries in native Ruby.\n\n<a name=\"rb-example\" />\n\n#### Ruby Examples\n\n- [graphql-ruby-demo](https://github.com/rmosolgo/graphql-ruby-demo) - Use graphql-ruby to expose a Rails app.\n- [github-graphql-rails-example](https://github.com/github/github-graphql-rails-example) - Example Rails app using GitHub's GraphQL API.\n- [relay-on-rails](https://github.com/nethsix/relay-on-rails) - Barebones starter kit for Relay application with Rails GraphQL server.\n- [relay-rails-blog](https://github.com/gauravtiwari/relay-rails-blog) - A graphql, relay and standard rails application powered demo weblog.\n- [to_eat_app](https://github.com/jcdavison/to_eat_app) - A sample graphql/rails/relay application with a related 3-part article series.\n- [agoo-demo](https://github.com/ohler55/agoo/tree/develop/example/graphql) - Use of the Agoo server to demonstrate a simple GraphQL application.\n- [rails-devise-graphql](https://github.com/zauberware/rails-devise-graphql) - A rails 6 boilerplate with devise, graphql & JWT auth.\n\n<a name=\"php\" />\n\n### PHP\n\n- [graphql-php](https://github.com/webonyx/graphql-php) - A PHP port of GraphQL reference implementation.\n- [graphql-relay-php](https://github.com/ivome/graphql-relay-php) - Relay helpers for webonyx/graphql-php implementation of GraphQL.\n- [lighthouse](https://github.com/nuwave/lighthouse) - A PHP package that allows to serve a GraphQL endpoint from your Laravel application.\n- [graphql-laravel](https://github.com/rebing/graphql-laravel) - Laravel wrapper for Facebook's GraphQL.\n- [overblog/graphql-bundle](https://github.com/overblog/GraphQLBundle) - This bundle provides tools to build a complete GraphQL server in your Symfony App. Supports react-relay.\n- [wp-graphql](https://github.com/wp-graphql/wp-graphql) - GraphQL API for WordPress.\n- [graphqlite](https://github.com/thecodingmachine/graphqlite) - Framework agnostic library that allows you to write GraphQL server by annotating your PHP classes.\n- [siler](https://github.com/leocavalcante/siler) - Plain-old functions providing a declarative API for GraphQL servers with Subscriptions support.\n- [graphql-request-builder](https://github.com/dpauli/php-graphql-request-builder) - Builds request payload in GraphQL structure.\n- [drupal/graphql](https://www.drupal.org/project/graphql) - Craft and expose a GraphQL schema for Drupal 8+.\n\n<a name=\"php-example\" />\n\n#### PHP Examples\n\n- [siler-graphgl](https://github.com/leocavalcante/siler/tree/main/examples/graphql) - An example GraphQL server written with Siler.\n\n<a name=\"py\" />\n\n### Python\n\n- [graphql-parser](https://github.com/tryolabs/graphql-parser) - GraphQL parser for Python.\n- [graphql-core](https://github.com/graphql-python/graphql-core) - GraphQL implementation for Python based on GraphQL.js v16.3.0 reference implementation\n- [graphql-relay-py](https://github.com/graphql-python/graphql-relay-py) - A library to help construct a graphql-py server supporting react-relay.\n- [graphql-parser-python](https://github.com/tallstreet/graphql-parser-python) - A python wrapper around libgraphqlparser.\n- [graphene](https://github.com/graphql-python/graphene) - A package for creating GraphQL schemas/types in a Pythonic easy way.\n- [graphene-gae](https://github.com/graphql-python/graphene-gae) - Adds GraphQL support to Google AppEngine (GAE).\n- [django-graphiql](https://github.com/GraphQL-python-archive/django-graphiql) - Integrate GraphiQL easily into your Django project.\n- [flask-graphql](https://github.com/graphql-python/flask-graphql) - Adds GraphQL support to your Flask application.\n- [python-graphql-client](https://github.com/prisma/python-graphql-client) - Simple GraphQL client for Python 2.7+\n- [python-graphjoiner](https://github.com/healx/python-graphjoiner) - Create GraphQL APIs using joins, SQL or otherwise.\n- [graphene-django](https://github.com/graphql-python/graphene-django) - A Django integration for Graphene.\n- [Flask-GraphQL-Auth](https://github.com/callsign-viper/Flask-GraphQL-Auth) - An authentication library for Flask inspired from flask-jwt-extended.\n- [tartiflette](https://github.com/dailymotion/tartiflette) - GraphQL Implementation, SDL First, for python 3.6+ / asyncio.\n- [tartiflette-aiohttp](https://github.com/dailymotion/tartiflette-aiohttp) - Wrapper of Tartiflette to expose GraphQL API over HTTP based on aiohttp / 3.6+ / asyncio, [official tutorial available on tartiflette.io](https://tartiflette.io/docs/tutorial/getting-started).\n- [Ariadne](https://github.com/mirumee/ariadne) - library for implementing GraphQL servers using schema-first approach. Asynchronous query execution, batteries included for ASGI, WSGI and popular webframeworks, [fully documented](https://ariadnegraphql.org).\n- [django-graphql-auth](https://github.com/PedroBern/django-graphql-auth) - Django registration and authentication with GraphQL.\n- [strawberry](https://github.com/strawberry-graphql/strawberry) - A new GraphQL library for Python.\n- [turms](https://github.com/jhnnsrs/turms) - A pythonic graphql codegenerator built around graphql-core and pydantic\n- [rath](https://github.com/jhnnsrs/rath) - An apollo like graphql client with async and sync interface\n- [sgqlc](https://github.com/profusion/sgqlc) - Simple GraphQL Client makes working with GraphQL API responses easier in Python.\n\n<a name=\"py-example\" />\n\n#### Python Examples\n\n- [swapi-graphene](https://github.com/graphql-python/swapi-graphene) - A GraphQL schema and server using [Graphene](https://graphene-python.org).\n- [Python Backend Tutorial](https://hasura.io/learn/graphql/backend-stack/languages/python/) - A tutorial on creating a GraphQL server with [Strawberry](https://strawberry.rocks/) and a client with [Qlient](https://qlient-org.github.io/python-qlient/site/).\n\n<a name=\"java\" />\n\n### Java\n\n- [graphql-java](https://github.com/graphql-java/graphql-java) - GraphQL Java implementation.\n- [DGS Framework](https://github.com/Netflix/dgs-framework) - A GraphQL server framework for Spring Boot, developed by Netflix.\n- [graphql-java-generator](https://github.com/graphql-java-generator) - A [Maven plugin](https://github.com/graphql-java-generator/graphql-maven-plugin-project) and a [Gradle plugin](https://github.com/graphql-java-generator/graphql-gradle-plugin-project) that can generate both the **Client** and the **Server** (POJOs and utility classes). The server part is based on graphql-java, and hides all its boilerplate codes.\n- [gaphql-java-type-generator](https://github.com/graphql-java/graphql-java-type-generator) - Auto-generates types for use with GraphQL Java\n- [schemagen-graphql](https://github.com/bpatters/schemagen-graphql) - Schema generation and execution package that turns POJO's into a GraphQL Java queryable set of objects. Enables exposing any service as a GraphQL service using Annotations.\n- [graphql-java-annotations](https://github.com/Enigmatis/graphql-java-annotations) - Provides annotations-based syntax for schema definition with GraphQL Java.\n- [graphql-java-tools](https://github.com/graphql-java-kickstart/graphql-java-tools) - Schema-first graphql-java convenience library that makes it easy to bring your own implementations as data resolvers. Inspired by [graphql-tools](https://github.com/apollographql/graphql-tools) for JS.\n- [graphql-java-codegen-maven-plugin](https://github.com/kobylynskyi/graphql-java-codegen-maven-plugin) - Schema-first maven plugin for generating Java types and Resolver interfaces. Works perfectly in conjunction with graphql-java-tools. Inspired by [swagger-codegen-maven-plugin](https://github.com/swagger-api/swagger-codegen/tree/master/modules/swagger-codegen-maven-plugin).\n- [graphql-java-codegen-gradle-plugin](https://github.com/kobylynskyi/graphql-java-codegen-gradle-plugin) - Schema-first gradle plugin for generating Java types and Resolver interfaces. Works perfectly in conjunction with graphql-java-tools. Inspired by [gradle-swagger-generator-plugin](https://github.com/int128/gradle-swagger-generator-plugin).\n- [graphql-java-servlet](https://github.com/graphql-java-kickstart/graphql-java-servlet) - A framework-agnostic java servlet for exposing graphql-java query endpoints with GET, POST, and multipart uploads.\n- [manifold-graphql](https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-graphql) - Comprehensive GraphQL client use. Schema-first. Type-safe GraphQL types, queries, and results, no code generators, no POJOs, no annotations. Excellent [IDE support](http://manifold.systems/images/graphql.mp4) with IntelliJ IDEA and Android Studio. See the [Java example](#example-java) below.\n- [spring-graphql-common](https://github.com/oembedler/spring-graphql-common) - Spring Framework GraphQL Library.\n- [graphql-spring-boot](https://github.com/graphql-java-kickstart/graphql-spring-boot) - GraphQL and GraphiQL Spring Framework Boot Starters.\n- [vertx-graphql-service-discovery](https://github.com/engagingspaces/vertx-graphql-service-discovery) - Asynchronous GraphQL service discovery and querying for your microservices.\n- [vertx-dataloader](https://github.com/engagingspaces/vertx-dataloader) - Port of Facebook DataLoader for efficient, asynchronous batching and caching in clustered GraphQL environments.\n- [graphql-spqr](https://github.com/leangen/GraphQL-SPQR) - Java 8+ API for rapid development of GraphQL services.\n- [Light Java GraphQL](https://github.com/networknt/light-graphql-4j): A lightweight, fast microservices framework with all cross-cutting concerns addressed and ready to plug in GraphQL schema.\n- [Elide](https://elide.io): A Java library that can expose a JPA annotated data model as a GraphQL service over any relational database.\n- [federation-jvm](https://github.com/apollographql/federation-jvm) - Apollo Federation on the JVM.\n- [graphql-orchestrator-java](https://github.com/graph-quilt/graphql-orchestrator-java) GraphQL Orchestrator/Gateway library that supports Schema Stitching and Apollo Federation directives to combine schema from multiple GraphQL microservices into a single unified schema.\n- [graphql-java-extended-validation](https://github.com/graphql-java/graphql-java-extended-validation) - Provides extended validation of fields and field arguments for graphql-java.\n- [dgs-extended-formatters](https://github.com/setchy/dgs-extended-formatters) - An experimental set of DGS Directives for common formatting use-cases.\n\n#### Custom Scalars\n\n- [graphql-java-datetime](https://github.com/donbeave/graphql-java-datetime) - GraphQL ISO Date is a set of RFC 3339 compliant date/time scalar types to be used with graphql-java.\n- [graphql-java-extended-scalars](https://github.com/graphql-java/graphql-java-extended-scalars) - Extended scalars for graphql-java.\n\n<a name=\"java-example\" />\n\n#### Java Examples\n\n- [light-java-graphql examples](https://github.com/networknt/light-example-4j/tree/master/graphql) - Examples of Light Java GraphQL and tutorials.\n- [graphql-spqr-samples](https://github.com/leangen/graphql-spqr-samples) - An example GraphQL server written with Spring MVC and GraphQL-SPQR.\n- [manifold-graphql sample](https://github.com/manifold-systems/manifold-sample-graphql-app) - A simple application, both client and server, demonstrating the Manifold GraphQL library.\n- [graphql-java-kickstart_samples](https://github.com/graphql-java-kickstart/samples) - Samples for using the GraphQL Java Kickstart projects.\n- [graphql-java-kickstart-federation-example](https://github.com/setchy/graphql-java-kickstart-federation-example) - A GraphQL Java Kickstart federation example.\n- [dgs-federation-example](https://github.com/Netflix/dgs-federation-example) - A Netflix DGS federation example.\n- [Spring Boot backend tutorial](https://hasura.io/learn/graphql/backend-stack/languages/java/) - A tutorial creating a GraphQL server and client using Spring Boot and Netflix DGS.\n\n<a name=\"kotlin\" />\n\n### Kotlin\n\n- [graphql-kotlin](https://github.com/ExpediaGroup/graphql-kotlin) - GraphQL Kotlin implementation.\n- [manifold-graphql](https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-graphql) - Comprehensive GraphQL client use. Schema-first. Type-safe GraphQL types, queries, and results, no code generators, no POJOs, no annotations. Excellent [IDE support](http://manifold.systems/images/graphql.mp4) with IntelliJ IDEA and Android Studio. See the [Kotlin example](#example-kotlin) below.\n- [KGraphQL](https://github.com/aPureBase/KGraphQL): Pure Kotlin implementation to setup a GraphQL server.\n- [Kobby](https://github.com/ermadmi78/kobby) - Codegen plugin of [Kotlin DSL Client](https://blog.kotlin-academy.com/how-to-generate-kotlin-dsl-client-by-graphql-schema-707fd0c55284) by GraphQL schema. The generated DSL supports execution of complex GraphQL queries, mutation and subscriptions in Kotlin with syntax similar to native GraphQL syntax.\n- [Graphkt](https://github.com/cufyorg/graphkt) - A DSL based graphql server library for kotlin, backed by graphql-java.\n\n<a name=\"kotlin-example\" />\n\n#### Kotlin Examples\n\n- [manifold-graphql sample](https://github.com/manifold-systems/manifold-sample-kotlin-app) - A simple GraphQL application, both client and server, demonstrating the Manifold GraphQL library with Kotlin.\n\n<a name=\"c\" />\n\n### C/C++\n\n- [libgraphqlparser](https://github.com/graphql/libgraphqlparser) - A GraphQL query parser in C++ with C and C++ APIs.\n- [agoo-c](https://github.com/ohler55/agoo-c) - A high performance GraphQL server written in C. [benchmarks](https://github.com/the-benchmarker/graphql-benchmarks)\n- [cppgraphqlgen](https://github.com/Microsoft/cppgraphqlgen) - C++ GraphQL schema service generator.\n- [CaffQL](https://github.com/caffeinetv/CaffQL) - Generates C++ client types and request/response serialization from a GraphQL introspection query.\n\n<a name=\"go\" />\n\n### Go\n\n- [graphql](https://github.com/graphql-go/graphql) - An implementation of GraphQL for Go follows graphql-js\n- [graphql-go](https://github.com/graph-gophers/graphql-go) - GraphQL server with a focus on ease of use.\n- [gqlgen](https://github.com/99designs/gqlgen) - Go generate based graphql server library.\n- [graphql-relay-go](https://github.com/graphql-go/relay) - A Go/Golang library to help construct a server supporting react-relay.\n- [graphjin](https://github.com/dosco/graphjin): Build APIs in 5 minutes with GraphQL. An instant GraphQL to SQL compiler.\n\n<a name=\"go-example\" />\n\n#### Go Examples\n\n- [golang-relay-starter-kit](https://github.com/sogko/golang-relay-starter-kit) - Barebones starting point for a Relay application with Golang GraphQL server.\n- [todomvc-relay-go](https://github.com/sogko/todomvc-relay-go) - Port of the React/Relay TodoMVC app, driven by a Golang GraphQL backend.\n- [go-graphql-subscription-example](https://github.com/ccamel/go-graphql-subscription-example) - A GraphQL schema and server that demonstrates GraphQL [subscriptions](https://github.com/apollographql/subscriptions-transport-ws/blob/v0.9.4/PROTOCOL.md) (over Websocket) to consume [Apache Kafka](https://kafka.apache.org/) messages.\n- [Go Backend Tutorial](https://hasura.io/learn/graphql/backend-stack/languages/go/) - A tutorial showing how to make a Go GraphQL server and client using code generation.\n\n<a name=\"scala\" />\n\n### Scala\n\n- [sangria](https://github.com/sangria-graphql/sangria) - Scala GraphQL server implementation.\n- [sangria-relay](https://github.com/sangria-graphql/sangria-relay) - Sangria Relay Support.\n- [caliban](https://github.com/ghostdogpr/caliban) - Caliban is a purely functional library for creating GraphQL backends in Scala.\n\n<a name=\"scala-example\" />\n\n#### Scala Examples\n\n- [sangria-akka-http-example](https://github.com/sangria-graphql/sangria-akka-http-example) - An example GraphQL server written with akka-http and [sangria](https://sangria-graphql.github.io/)\n- [sangria-playground](https://github.com/sangria-graphql/sangria-playground) - An example of GraphQL server written with Play and sangria.\n\n<a name=\"dotnet\" />\n\n### .NET\n\n- [graphql-dotnet](https://github.com/graphql-dotnet/graphql-dotnet) - GraphQL for .NET.\n- [graphql-net](https://github.com/ckimes89/graphql-net) - GraphQL to IQueryable for .NET.\n- [Hot Chocolate](https://github.com/ChilliCream/hotchocolate) - GraphQL server for .Net Core and .NET Framework.\n- [Snowflaqe](https://github.com/Zaid-Ajaj/Snowflaqe) - Type-safe GraphQL code generator for F# and [Fable](https://github.com/fable-compiler/Fable)\n- [EntityGraphQL](https://github.com/EntityGraphQL/EntityGraphQL) - library to build a GraphQL API on top of data model with the extensibility to bring multiple data sources together in the single GraphQL schema.\n- [ZeroQL](https://github.com/byme8/ZeroQL) - type-safe GraphQL client with Linq-like interface for C#\n\n<a name=\"net-example\" />\n\n#### .NET Examples\n\n- [.NET backend tutorial](https://hasura.io/learn/graphql/backend-stack/languages/dotnet/) - A tutorial creating a GraphQL server and client with .NET.\n\n<a name=\"elixir\" />\n\n### Elixir\n\n- [absinthe-graphql](https://github.com/absinthe-graphql/absinthe) - Fully Featured Elixir GraphQL Library.\n- [graphql-elixir](https://github.com/graphql-elixir/graphql) - GraphQL Elixir. (No longer maintained)\n- [plug_graphql](https://github.com/graphql-elixir/plug_graphql) - Plug integration for GraphQL Elixir.\n- [graphql_relay](https://github.com/graphql-elixir/graphql_relay) - Relay helpers for GraphQL Elixir.\n- [graphql_parser](https://github.com/graphql-elixir/graphql_parser) - Elixir bindings for [libgraphqlparser](https://github.com/graphql/libgraphqlparser)\n- [graphql](https://github.com/asonge/graphql) - Elixir GraphQL parser.\n- [plot](https://github.com/peburrows/plot) - GraphQL parser and resolver for Elixir.\n\n<a name=\"elixir-example\" />\n\n#### Elixir Examples\n\n- [hello_graphql_phoenix](https://github.com/graphql-elixir/hello_graphql_phoenix) - Examples of GraphQL Elixir Plug endpoints mounted in Phoenix\n\n<a name=\"haskell\" />\n\n### Haskell\n\n- [graphql-haskell](https://github.com/jdnavarro/graphql-haskell) - GraphQL AST and parser for Haskell.\n- [morpheus-graphql](https://github.com/morpheusgraphql/morpheus-graphql) - Haskell GraphQL Api, Client and Tools.\n\n<a name=\"sql\" />\n\n### SQL\n\n- [GraphpostgresQL](https://github.com/solidsnack/GraphpostgresQL) - GraphQL for Postgres.\n- [sql-to-graphql](https://github.com/rexxars/sql-to-graphql) - Generate a GraphQL API based on your SQL database structure.\n- [PostGraphile](https://github.com/graphile/postgraphile) - Lightning-fast GraphQL APIs for PostgreSQL: highly customisable; extensible via plugins; realtime.\n- [Hasura](https://github.com/hasura/graphql-engine) - Hasura gives Instant Realtime GraphQL APIs over PostgreSQL. Works with an existing database too.\n- [subZero](https://subzero.cloud/) - GraphQL & REST API for your database\n\n<a name=\"lua\" />\n\n### Lua\n\n- [graphql-lua](https://github.com/bjornbytes/graphql-lua) - GraphQL for Lua.\n\n<a name=\"elm\" />\n\n### Elm\n\n- [elm-graphql](https://github.com/dillonkearns/elm-graphql) - GraphQL for Elm.\n\n<a name=\"clojure\" />\n\n### Clojure\n\n- [graphql-clj](https://github.com/tendant/graphql-clj) - A Clojure library designed to provide GraphQL implementation.\n- [Lacinia](https://github.com/walmartlabs/lacinia) - GraphQL implementation in pure Clojure.\n- [graphql-query](https://github.com/district0x/graphql-query) - Clojure(Script) GraphQL query generation.\n\n<a name=\"clojure-example\" />\n\n#### Clojure Examples\n\n- [Clojure Game Geek](https://github.com/walmartlabs/clojure-game-geek) - Example code for the Lacinia GraphQL framework tutorial.\n\n<a name=\"swift\" />\n\n### Swift\n\n- [GraphQL](https://github.com/GraphQLSwift/GraphQL) - The Swift implementation for GraphQL.\n\n<a name=\"ocaml\" />\n\n### OCaml\n\n- [ocaml-graphql-server](https://github.com/andreas/ocaml-graphql-server) - GraphQL servers in OCaml.\n\n<a name=\"android\" />\n\n### Android\n\n- [apollo-android](https://github.com/apollographql/apollo-android) - \ud83d\udcdf A strongly-typed, caching GraphQL client for Android, written in Java.\n- [manifold-graphql](https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-graphql) - Comprehensive GraphQL client use. Schema-first. Type-safe GraphQL types, queries, and results, no code generators, no POJOs, no annotations. Excellent [IDE support](http://manifold.systems/images/graphql.mp4) with IntelliJ IDEA and Android Studio. See the [Java example](#example-java) below.\n\n<a name=\"android-example\" />\n\n#### Android Examples\n\n- [apollo-frontpage-android-app](https://github.com/rnitame/apollo-frontpage-android-app) - \ud83d\udcc4 Apollo \"hello world\" app, for Android.\n\n<a name=\"ios\" />\n\n### iOS\n\n- [apollo-ios](https://github.com/apollographql/apollo-ios) - \ud83d\udcf1 A strongly-typed, caching GraphQL client for iOS, written in Swift.\n- [ApolloDeveloperKit](https://github.com/manicmaniac/ApolloDeveloperKit) - Apollo Client Devtools bridge for [Apollo iOS].\n- [Graphaello](https://github.com/nerdsupremacist/Graphaello) - Type Safe GraphQL directly from SwiftUI.\n- [GQLite iOS SDK](https://graphqlite.com/sdk-ios) - GQLite iOS SDK is a toolkit to work with GraphQL servers easily.\n\n<a name=\"ios-example\" />\n\n#### iOS Examples\n\n- [frontpage-ios-app](https://github.com/apollographql/frontpage-ios-app) - \ud83d\udcc4 Apollo \"hello world\" app, for iOS.\n\n<a name=\"clojurescript\" />\n\n### ClojureScript\n\n- [re-graph](https://github.com/oliyh/re-graph) - A GraphQL client for ClojureScript with bindings for re-frame applications.\n- [graphql-query](https://github.com/district0x/graphql-query) - Clojure(Script) GraphQL query generation.\n\n<a name=\"reasonml\" />\n\n### ReasonML\n\n- [reason-apollo](https://github.com/apollographql/reason-apollo) - ReasonML binding for Apollo Client.\n- [ReasonQL](https://github.com/sainthkh/reasonql) - Type-safe and simple GraphQL Client for ReasonML developers.\n- [reason-urql](https://github.com/FormidableLabs/reason-urql) - ReasonML binding for urql Client.\n\n<a name=\"dart\" />\n\n### Dart\n\n- [graphql-flutter](https://github.com/zino-app/graphql-flutter) - A GraphQL client for Flutter.\n- [Artemis](https://github.com/comigor/artemis) - A GraphQL type and query generator for Dart/Flutter.\n\n<a name=\"rust\" />\n\n### Rust\n\n- [async-graphql](https://github.com/async-graphql/async-graphql) - High-performance server-side library that supports all GraphQL specifications.\n- [juniper](https://github.com/graphql-rust/juniper) - GraphQL server library for Rust.\n- [graphql-client](https://github.com/tomhoule/graphql-client) - GraphQL client library for Rust with WebAssembly (wasm) support.\n- [graphql-parser](https://github.com/graphql-rust/graphql-parser) - A parser, formatter and AST for the GraphQL query and schema definition language for Rust.\n\n<a name=\"rust-example\" />\n\n#### Rust Examples\n\n- [Warp GraphQL Juniper](https://graphql-rust.github.io/)\n\n<a name=\"d\" />\n\n### D (dlang)\n\n- [graphqld](https://github.com/burner/graphqld) - GraphQL server library for D.\n\n<a name=\"r\" />\n\n### R (Rstat)\n\n- [ghql](https://github.com/ropensci/ghql) - General purpose GraphQL R client.\n- [graphql](https://github.com/ropensci/graphql) - Bindings to the 'libgraphqlparser' C++ library. Parses GraphQL syntax and exports the AST in JSON format.\n- [gqlr](https://github.com/schloerke/gqlr) - R GraphQL Implementation.\n\n<a name=\"julia\" />\n\n### Julia\n\n- [Diana.jl](https://github.com/codeneomatrix/Diana.jl) - A Julia GraphQL client/server implementation.\n- [GraphQLClient.jl](https://github.com/DeloitteDigitalAPAC/GraphQLClient.jl) - A Julia GraphQL client for seamless integration with a server.\n\n<a name=\"crystal\" />\n\n### Crystal\n\n- [graphql](https://github.com/graphql-crystal/graphql) - GraphQL server library.\n- [graphql-crystal](https://github.com/ziprandom/graphql-crystal) - library inspired by [graphql-ruby](https://github.com/rmosolgo/graphql-ruby) & [go-graphql](https://github.com/playlyfe/go-graphql) & [graphql-parser](https://github.com/graphql-dotnet/parser).\n- [crystal-gql](https://github.com/itsezc/crystal-gql) - GraphQL client shard inspired by Apollo client.\n- [graphql.cr](https://github.com/garymardell/graphql.cr) - GraphQL shard.\n\n### Ballerina\n\n- [graphql](https://github.com/ballerina-platform/module-ballerina-graphql) - Ballerina standard library for GraphQL. This library provides a GraphQL client and server implementations including builtin support for GraphQL subscriptions.\n- [graphql CLI](https://github.com/ballerina-platform/graphql-tools) - A CLI tool to generate Ballerina code from GraphQL schema and GraphQL schema from Ballerina code. It also provides functionality to generate usage-specific GraphQL clients using GraphQL schemas and documents.\n\n#### Ballerina Samples\n\n- [Ballerina GraphQL Examples](https://github.com/ballerina-platform/module-ballerina-graphql/tree/master/examples)\n- [Convert Weather REST API to GraphQL API](https://github.com/ThisaruGuruge/weather-rest-api-to-graphql)\n\n<a name=\"tools\" />\n\n## Tools\n\n### Tools - Editors & IDEs & Explorers\n\n- [GraphiQL](https://github.com/graphql/graphiql) - An in-browser IDE for exploring GraphQL.\n- [GraphQL Editor](https://github.com/graphql-editor/graphql-editor) - Visual Editor & GraphQL IDE.\n- [GraphQL Voyager](https://github.com/APIs-guru/graphql-voyager) - Represent any GraphQL API as an interactive graph.\n- [Altair GraphQL Client](https://github.com/altair-graphql/altair) - A beautiful feature-rich GraphQL Client for all platforms.\n- [Brangr](https://github.com/networkimprov/brangr) - A unique, user-friendly data browser/viewer for any GraphQL service, with attractive result layouts.\n- [Insomnia](https://insomnia.rest/) -\u00a0A full-featured API client with first-party GraphQL query editor.\n- [Postman](https://learning.postman.com/docs/sending-requests/supported-api-frameworks/graphql/) - An HTTP Client that supports editing GraphQL queries.\n- [Escape GraphMan](https://github.com/Escape-Technologies/graphman) - Generate a complete Postman collection from a GraphQL endpoint.\n- [Apollo Sandbox](https://sandbox.apollo.dev/) - The quickest way to navigate and test your GraphQL endpoints.\n- [GraphQL Birdseye](https://github.com/Novvum/graphql-birdseye) \u2013 View any GraphQL schema as a dynamic and interactive graph.\n- [AST Explorer](https://astexplorer.net/) - Select \"GraphQL\" at the top, explore the GraphQL AST and highlight different parts by clicking in the query.\n- [Firecamp - GraphQL Playground](https://firecamp.io/graphql) - The fastest collaborative GraphQL playground.\n- [CraftQL](https://github.com/yamafaktory/craftql) - A CLI tool to visualize GraphQL schemas and to output a graph data structure as a graphviz .dot format.\n- [gqt](https://github.com/eerimoq/gqt) - Build and execute GraphQL queries in the terminal.\n- [Graph Proxy](https://graphproxy.com/) - Graph Proxy detects and displays all GraphQL network traffic.\n\n<a name=\"tool-testing\" />\n\n### Tools - Testing\n\n- [Step CI](https://stepci.com) - Open-Source API Testing and Monitoring with GraphQL support\n- [graphql-to-karate](https://github.com/wbaldoumas/graphql-to-karate) - Generate Karate API tests from your GraphQL schemas\n\n<a name=\"tool-security\" />\n\n### Tools - Security\n\n- [GraphCrawler - The all-in-one GraphQL Security toolkit](https://github.com/gsmith257-cyber/GraphCrawler) - The all-in-one automated penetration tester toolkit for GraphQL, written in Python\n- [Escape - The GraphQL Security Scanner](https://graphql.security/) - One-click security scan of your GraphQL endpoints. Free, no login required.\n- [Escape Graphinder - GraphQL Subdomain Enumeration](https://github.com/Escape-Technologies/graphinder) \u2013 Blazing fast GraphQL endpoints finder using subdomain enumeration, scripts analysis and bruteforce.\n- [StackHawk - GraphQL Vulnerability Scanner](https://www.stackhawk.com/blog/automated-graphql-security-testing) - [StackHawk](https://www.stackhawk.com)\n- [Tinfoil Security - GraphQL Security Scanner](https://www.tinfoilsecurity.com/blog/graphql-security-scanning) - [Tinfoil Security](https://www.tinfoilsecurity.com/solutions/api-scanner)\n- [InQL Scanner](https://github.com/doyensec/inql) - A Burp Extension for GraphQL Security Testing\n- [GraphQL Raider](https://portswigger.net/bappstore/4841f0d78a554ca381c65b26d48207e6) [BurpSuite](https://portswigger.net/burp)\n- [WAF for graphQL](https://lab.wallarm.com/api-security-solution/) - Web Application Firewall for graphQL APIs\n- [GraphQL Intruder](https://github.com/davinerd/gql_intruder) - Plugin based python script to perform GraphQL vulnerability assessment.\n- [GraphQL Cop](https://github.com/dolevf/graphql-cop) - Security Audit Utility for GraphQL\n- [GraphQLer](https://github.com/omar2535/GraphQLer) - Dependency-aware dynamic GraphQL testing tool\n\n### Tools - Browser Extensions\n\n- [Apollo Client Developer Tools](https://github.com/apollographql/apollo-client-devtools) - GraphQL debugging tools for Apollo Client in the Chrome developer console\n- [GraphQL Network Inspector](https://chrome.google.com/webstore/detail/graphql-network-inspector/ndlbedplllcgconngcnfmkadhokfaaln) - A simple and clean chrome dev-tools extension for GraphQL network inspection.\n\n### Tools - Prototyping\n\n- [GraphQL Faker](https://github.com/APIs-guru/graphql-faker) - \ud83c\udfb2 Mock or extend your GraphQL API with faked data. No coding required.\n- [GraphQL Designer](http://graphqldesigner.com/) - A developer's web-app tool to rapidly prototype a full stack CRUD implementation of GraphQL with React.\n\n### Tools - Docs\n\n- [graphdoc](https://github.com/2fd/graphdoc) - Static page generator for documenting GraphQL Schema.\n- [gqldoc](https://github.com/Code-Hex/gqldoc) - The easiest way to make API documents for GraphQL.\n- [spectaql](https://github.com/anvilco/spectaql) - Autogenerate static GraphQL API documentation.\n- [graphql-markdown](https://graphql-markdown.github.io/) - Flexible documentation for GraphQL powered with Docusaurus.\n\n### Tools - Editor Plugins\n\n- [Apollo GraphQL VSCode Extension](https://marketplace.visualstudio.com/items?itemName=apollographql.vscode-apollo) - Rich editor support for GraphQL client and server development that seamlessly integrates with the Apollo platform\n- [js-graphql-intellij-plugin](https://github.com/jimkyndemeyer/js-graphql-intellij-plugin/) - GraphQL language support for IntelliJ IDEA and WebStorm, including Relay.QL tagged templates in JavaScript and TypeScript.\n- [vim-graphql](https://github.com/jparise/vim-graphql) - A Vim plugin that provides GraphQL file detection and syntax highlighting.\n- [Apollo Workbench](https://marketplace.visualstudio.com/items?itemName=apollographql.apollo-workbench) - Tooling to help you develop and mock federated schemas using Apollo Federation.\n- [graphql-autocomplete](https://github.com/orionsoft/atom-graphql-autocomplete) - Autocomplete and lint from a GraphQL endpoint in Atom.\n\n### Tools - Miscellaneous\n\n- [graphql-code-generator](https://github.com/dotansimha/graphql-code-generator) - GraphQL code generator based on schema and documents.\n- [swagger-to-graphql](https://github.com/yarax/swagger-to-graphql) - GraphQL types builder based on REST API described in Swagger. Allows to migrate to GraphQL from REST for 5 minutes\n- [ts-graphql-plugin](https://github.com/Quramy/ts-graphql-plugin) - A language service plugin complete and validate GraphQL query in TypeScript template strings.\n- [apollo-tracing](https://github.com/apollographql/apollo-tracing) - GraphQL extension that enables you to easily get resolver-level performance information as part of a GraphQL response.\n- [json-graphql-server](https://github.com/marmelab/json-graphql-server) - Get a full fake GraphQL API with zero coding in less than 30 seconds, based on a JSON data file.\n- [Prisma](https://github.com/prisma/prisma) - Turn your database into a GraphQL API. Prisma lets you design your data model and have a production ready GraphQL API online in minutes.\n- [Typetta](https://github.com/twinlogix/typetta) - Node.js ORM written in TypeScript for type lovers. Typetta is the perfect ORM for the GraphQL + NodeJS + Typescript stack.\n- [tuql](https://github.com/bradleyboy/tuql) - Automatically create a GraphQL server from any sqlite database.\n- [Bit](https://github.com/teambit/bit) - Organize GraphQL API as components to be consumed with NPM or modified from any project, [example-explanation](https://hackernoon.com/make-your-graphql-api-easier-to-adopt-through-components-74b022f195c1)).\n- [openapi-to-graphql](https://github.com/ibm/openapi-to-graphql) - Take any OpenAPI Specification (OAS) or swagger and create a GraphQL interface - Two minute video and resources [here](https://developer.ibm.com/open/projects/openapi-to-graphql/)\n- [Retool](https://retool.com/) \u2013 Internal tools builder on top of your GraphQL APIs + GraphQL IDE with a schema explorer.\n- [dataloader-codegen](https://github.com/Yelp/dataloader-codegen) - An opinionated JavaScript library for automatically generating predictable, type safe DataLoaders over a set of resources (e.g. HTTP endpoints).\n- [raphql-inspector](https://github.com/kamilkisiela/graphql-inspector): alidate schema, get schema change notifications, validate operations, find breaking changes, look for similar types, schema coverage.\n- [amplication](https://github.com/amplication/amplication): Amplication is an open\u2011source low code development tool. It builds database applications with REST API and GraphQL for CRUD with relations, sorting, filtering, pagination.\n- [Blendbase](https://github.com/blendbase/blendbase): Single open-source GraphQL API to connect CRMs to your SaaS. Query any customer CRM system (Salesforce, Hubspot and more) with a single API query from your SaaS app.\n- [microfiber](https://github.com/anvilco/graphql-introspection-tools) - Query and manipulate GraphQL introspection query results in useful ways.\n- [ILLA Cloud](https://www.illacloud.com/) \u2013 Open-source low-code tool building platform provides an easy way to integrate with GraphQL with minimal configurations\n- [DronaHQ](https://www.dronahq.com/) - Build internal tools, dashboards, admin panel on top of GraphQL data in minutes\n- [Dynaboard](https://dynaboard.com) - Generate low-code web apps from any GraphQL API using AI.\n  <a name=\"databases\" />\n\n## Databases\n\n- [Cube](https://cube.dev) - [Headless BI](https://cube.dev/blog/headless-bi) for building data applications with SQL, REST, and [GraphQL API](https://cube.dev/docs/backend/graphql). Connect any database or data warehouse and instantly get a GraphQL API with sub-second latency on top of it. - [Source Code](https://github.com/cube-js/cube.js)\n- [Dgraph](https://dgraph.io/) - Scalable, distributed, low latency, high throughput Graph database with GraphQL as the query language\n- [EdgeDB](https://edgedb.com/) - The next generation object-relational database with native GraphQL support.\n- [FaunaDB](https://fauna.com) - Relational NoSQL database with [GraphQL schema import.](https://fauna.com/blog/getting-started-with-graphql-part-1-importing-and-querying-your-schema) Supports joins, indexes, and multi-region ACID transactions with serverless pay-per-use pricing.\n- [ArangoDB](https://arangodb.com/) - Native multi-model database with [GraphQL integration](https://www.arangodb.com/docs/3.4/foxx-reference-modules-graph-ql.html) via the built-in [Foxx Microservices Framework](https://www.arangodb.com/docs/stable/foxx.html).\n- [Weaviate](https://github.com/semi-technologies/weaviate) - Weaviate is a cloud-native, modular, real-time vector search engine with a [GraphQL interface](https://weaviate.io/developers/weaviate/api/graphql) built to scale your machine learning models.\n- [LunaSec](https://www.lunasec.io/) - Key-Value Database for encrypting/tokenizing sensitive data with [GraphQL support](https://www.lunasec.io/docs/pages/getting-started/dedicated-tokenizer/graphql/) to authorize requests. - [Source Code](https://github.com/lunasec-io/lunasec)\n\n<a name=\"services\" />\n\n## Services\n\n- [AWS AppSync](https://aws.amazon.com/appsync/) - Scalable managed GraphQL service with subscriptions for building real-time and offline-first apps\n- [FakeQL](https://fakeql.com/) - GraphQL API mocking as a service ... because GraphQL API mocking should be easy!\n- [Moesif API Analytics](https://www.moesif.com/features/graphql-analytics) - A GraphQL analaytics and monitoring service to find functional and performance issues.\n- [Booster framework](https://booster.cloud/) - An open-source framework that makes you _completely_ forget about infrastructure and allows you to focus exclusively on your business logic. It autogenerates a GraphQL API for your models, supporting mutations, queries, and subscriptions.\n- [Hypi](https://hypi.io/) - Low-code, scalable, serverless backend as a service. Your GraphQL & REST over GraphQL backend in minutes.\n- [Nhost](https://nhost.io/) - Open source Firebase alternative with GraphQL\n- [Saleor](https://github.com/mirumee/saleor/) - GraphQL-first headless e-commerce platform.\n- [Stargate](https://stargate.io/docs/latest/quickstart/qs-graphql-cql-first.html) - Open source data gateway currently supporting Apache Cassandra&reg; and DataStax Enterprise.\n- [Grafbase](https://grafbase.com) - Instant GraphQL APIs for any data source.\n\n### CDN\n\n- [GraphCDN](https://graphcdn.io/) - GraphQL CDN for caching GraphQL APIs.\n\n### CMS\n\n- [DatoCMS](https://www.datocms.com/) - CDN-based GraphQL based Headless Content Management System.\n- [Apito](https://apito.io/) - A Cloud Based Headless CMS with CDN, Webhooks, Team Collaborations, Content Revision, Cloud Functions.\n- [Hygraph](https://hygraph.com/) - Build Scalable Content Experiences.\n- [Cosmic](https://www.cosmicjs.com/) - GraphQL-powered Headless CMS and API toolkit.\n- [Graphweaver](https://graphweaver.com/) - Turn multiple datasources into a single GraphQL API.\n\n<a name=\"book\" />\n\n## Books\n\n- [The GraphQL Guide](https://graphql.guide) by John Resig and Loren Sands-Ramshaw\n- [Craft GraphQL APIs in Elixir with Absinthe](https://pragprog.com/book/wwgraphql/craft-graphql-apis-in-elixir-with-absinthe) by Bruce Williams and Ben Wilson\n- [The Road to GraphQL](https://www.roadtographql.com/)\n- [Learning GraphQL and Relay](https://www.packtpub.com/web-development/learning-graphql-and-relay) by Samer Buna\n- [Practical GraphQL](https://leanpub.com/book-graphql) by Daniel Schmitz\n- [Production Ready GraphQL](https://book.productionreadygraphql.com) by Marc-Andr\u00e9 Giroux\n- [Full Stack GraphQL Applications](https://www.manning.com/books/fullstack-graphql-applications) by William Lyon\n\n<a name=\"video\" />\n\n## Videos\n\n- [GraphQL: The Documentary](https://www.youtube.com/watch?v=783ccP__No8)\n- [Zero to GraphQL in 30 Minutes](https://www.youtube.com/embed/UBGzsb2UkeY)\n- [Data fetching for React applications at Facebook](https://www.youtube.com/watch?v=9sc8Pyc51uU)\n- [React Native & Relay: Bringing Modern Web Techniques to Mobile](https://www.youtube.com/watch?v=X6YbAKiLCLU)\n- [Exploring GraphQL](https://www.youtube.com/watch?v=WQLzZf34FJ8)\n- [Creating a GraphQL Server](https://www.youtube.com/watch?v=gY48GW87Feo)\n- [GraphQL at The Financial Times](https://www.youtube.com/watch?v=S0s935RKKB4)\n- [Relay: An Application Framework For React](https://www.youtube.com/watch?v=IrgHurBjQbg)\n- [Building and Deploying Relay with Facebook](https://www.youtube.com/watch?t=643&v=Pxdgu2XIAAg)\n- [Introduction to GraphQL](https://vimeo.com/144817545)\n- [Exploring GraphQL@Scale](https://www.youtube.com/watch?v=_9RgHXqH8J0)\n- [What's Next for Phoenix by Chris McCord](https://www.youtube.com/watch?v=IMUpYOc9z3c&feature=youtu.be)\n- [GraphQL with Nick Schrock](https://www.youtube.com/watch?v=Ed6oJXKt3-M)\n- [Build a GraphQL server for Node.js using PostgreSQL/MySQL](https://www.youtube.com/watch?v=DNPVqK_woRQ)\n- [GraphQL server tutorial for Node.js with SQL, MongoDB and REST](https://www.youtube.com/watch?v=PHabPhgRUuU)\n- [JavaScript Air Episode 023: Transitioning from REST to GraphQL](https://www.youtube.com/watch?v=ENqDNIp1Nd8)\n- [GraphQL Future at react-europe 2016](https://www.youtube.com/watch?v=ViXL0YQnioU)\n- [GraphQL at Facebook at react-europe 2016](https://www.youtube.com/watch?v=etax3aEe2dA)\n- [Building native mobile apps with GraphQL at react-europe 2016](https://www.youtube.com/watch?v=z5rz3saDPJ8)\n- [Build a GraphQL Server](https://www.youtube.com/watch?v=PEcJxkylcRM&list=PLillGF-RfqbYZty73_PHBqKRDnv7ikh68)\n- [GraphQL Tutorial](https://www.youtube.com/watch?v=Y0lDGjwRYKw&list=PL4cUxeGkcC9iK6Qhn-QLcXCXPQUov1U7f)\n- [Five years of GraphQL](https://www.youtube.com/watch?v=s8meG38iZAM)\n- [GraphQL is for Everyone by Moon Highway](https://moonhighway.teachable.com/p/graphql-is-for-everyone)\n\n<a name=\"podcast\" />\n\n## Podcasts\n\n- [GraphQL.FM](https://podcasts.google.com/feed/aHR0cHM6Ly9hbmNob3IuZm0vcy8zNjE5NmViMC9wb2RjYXN0L3Jzcw==) by Marc-Andre Giroux and Tony Ghita.\n\n<a name=\"style-guide\" />\n\n## Style Guides\n\n- [Shopify GraphQL Design Tutorial](https://github.com/Shopify/graphql-design-tutorial) - This tutorial was originally created by Shopify for internal purposes. It's based on lessons learned from creating and evolving production schemas at Shopify over almost 3 years.\n- [GitLab GraphQL API Style Guide](https://docs.gitlab.com/ee/development/api_graphql_styleguide.html) - This document outlines the style guide for the GitLab GraphQL API.\n- [Yelp GraphQL Guidelines](https://yelp.github.io/graphql-guidelines/) - This repo contains documentation and guidelines for a standardized and mostly reasonable approach to GraphQL (at Yelp).\n- [Principled GraphQL](https://principledgraphql.com/) - Apollo's 10 GraphQL Principles, broken out into three categories, in a format inspired by the Twelve Factor App.\n\n<a name=\"blogs\" />\n\n## Blogs\n\n- [Official GraphQL blog](https://graphql.org/blog/)\n- [Building Apollo](https://blog.apollographql.com/)\n- [The Guild blog](https://medium.com/the-guild)\n- [Production Ready GraphQL blog](https://productionreadygraphql.com)\n\n<a name=\"security-blog\" />\n\n### Blogs - Security\n\n- [Escape - The GraphQL Security Blog](https://blog.escape.tech) - Learn about GraphQL security, performance, testing and building production-ready APIs with the latest tools and best practices of the GraphQL ecosystem.\n- [9 GraphQL Security Best Practices](https://blog.escape.tech/9-graphql-security-best-practices/)\n- [Discovering GraphQL Endpoints and SQLi Vulnerabilities](https://medium.com/@localh0t/discovering-graphql-endpoints-and-sqli-vulnerabilities-5d39f26cea2e)\n- [Securing GraphQL API](https://lab.wallarm.com/securing-graphql-api/)\n- [Security Points to Consider Before Implementing GraphQL](https://nordicapis.com/security-points-to-consider-before-implementing-graphql/)\n- [GraphQL for Pentesters](https://www.acceis.fr/graphql-for-pentesters/) - Introduction to Basic Concepts, Security Considerations & Reconnaissance, Vulnerabilities and Attacks, Offensive Tools.\n\n<a name=\"post\" />\n\n## Posts\n\n- [GraphQL federation example with Apollo Federation and Apollo GraphOS](https://cube.dev/blog/graphql-federation-example-with-apollo-federation-and-apollo-graphos)\n- [GraphQL federation with Hasura GraphQL Engine and Cube](https://cube.dev/blog/graphql-federation-with-hasura-graphql-engine)\n- [Using DataLoader to batch GraphQL requests](https://medium.com/@gajus/using-dataloader-to-batch-requests-c345f4b23433)\n- [Introducing Relay and GraphQL](https://reactjs.org/blog/2015/02/20/introducing-relay-and-graphql.html)\n- [GraphQL Introduction](https://reactjs.org/blog/2015/05/01/graphql-introduction.html)\n- [Unofficial Relay FAQ](https://gist.github.com/wincent/598fa75e22bdfa44cf47)\n- [Your First GraphQL Server](https://medium.com/the-graphqlhub/your-first-graphql-server-3c766ab4f0a2)\n- [GraphQL Overview - Getting Started with GraphQL and Node.js](https://blog.risingstack.com/graphql-overview-getting-started-with-graphql-and-nodejs/)\n- [4 Reasons you should try out GraphQL](https://medium.freecodecamp.org/introduction-to-graphql-1d8011b80159)\n- [Moving from REST to GraphQL](https://medium.com/@frikille/moving-from-rest-to-graphql-e3650b6f5247)\n- [Writing a Basic API with GraphQL](http://davidandsuzi.com/writing-a-basic-api-with-graphql/)\n- [Building a GraphQL Server with Node.js and SQL](https://www.reindex.io/blog/building-a-graphql-server-with-node-js-and-sql/)\n- [GraphQL at The Financial Times](https://www.slideshare.net/LondonReact/graph-ql)\n- [From REST to GraphQL](https://jacobwgillespie.com/2015-10-09-from-rest-to-graphql)\n- [GraphQL: A data query language](https://graphql.org/blog/graphql-a-query-language/)\n- [Subscriptions in GraphQL and Relay](https://graphql.org/blog/subscriptions-in-graphql-and-relay/)\n- [Relay 101: Building A Hacker News Client](https://medium.com/@clayallsopp/relay-101-building-a-hacker-news-client-bb8b2bdc76e6)\n- [GraphQL Shorthand Notation Cheatsheet](https://wehavefaces.net/graphql-shorthand-notation-cheatsheet-17cd715861b6)\n- [The GitHub GraphQL API](https://githubengineering.com/the-github-graphql-api/)\n- [Github GraphQL API React Example](https://medium.com/@katopz/github-graphql-api-react-example-eace824d7b61)\n- [Testing a GraphQL Server using Jest](https://medium.com/entria/testing-a-graphql-server-using-jest-4e00d0e4980e)\n- [How to implement viewerCanSee in GraphQL](https://medium.com/entria/how-to-implement-viewercansee-in-graphql-78cc48de7464)\n- [Preventing traversal attacks on your GraphQL API](https://blog.morethancode.dev/preventing-traversal-attacks-in-your-graphql-api/)\n- [Mock your GraphQL server realistically with faker.js](https://dev.to/yvonnickfrin/mock-your-graphql-server-realistically-with-faker-js-25oo)\n- [Create an infinite loading list with React and GraphQL](https://dev.to/yvonnickfrin/create-an-infinite-loading-list-with-react-and-graphql-19hh)\n- [REST vs GraphQL](https://www.moesif.com/blog/technical/graphql/REST-vs-GraphQL-APIs-the-good-the-bad-the-ugly/)\n- [Authentication and Authorization for GraphQL APIs](https://www.moesif.com/blog/technical/api-design/Steps-to-Building-Authentication-and-Authorization-For-GraphQL-APIs/)\n- [Build a GraphQL API with Siler on top of Swoole](https://www.swoole.co.uk/article/Build-a-GraphQL-API-on-top-of-Swoole)\n- [Fluent GraphQL clients: how to write queries like a boss](https://hasura.io/blog/fluent-graphql-clients-how-to-write-queries-like-a-boss/)\n- [Level up your serverless game with a GraphQL data-as-a-service layer](https://hasura.io/blog/level-up-your-serverless-game-with-a-graphql-data-as-a-service-layer/)\n- [A deep-dive into Relay, the friendly & opinionated GraphQL client](https://hasura.io/blog/deep-dive-into-relay-graphql-client/)\n- [make your graphql api easier to adopt through components](https://hackernoon.com/make-your-graphql-api-easier-to-adopt-through-components-74b022f195c1)\n- [Undocumented: keeping parts of your GraphQL schema hidden from introspection](https://www.useanvil.com/blog/engineering/undocumented-directive/)\n- [GraphQL Subscriptions with Apache Kafka in Ballerina](https://medium.com/ballerina-techblog/graphql-subscriptions-with-apache-kafka-in-ballerina-b3c296d333cd)\n- [How to Test your GraphQL Endpoints](https://escape.tech/blog/8-most-common-graphql-vulnerabilities/)\n- [Why Automatic Persisted Queries Don't Scale](https://blog.tailcall.run/the-truth-about-scaling-automatic-persisted-queries/)\n\n\n\n<a name=\"tutorials\" />\n\n## Tutorials\n\n- [How to GraphQL](https://www.howtographql.com) - Fullstack Tutorial Website with Tracks for all Major Frameworks & Languages including React, Apollo, Relay, JavaScript, Ruby, Java, Elixir and many more.\n- [Apollo Odyssey](https://odyssey.apollographql.com/) - Apollo's free interactive learning platform.\n- [learning-graphql](https://github.com/mugli/learning-graphql) - An attempt to learn GraphQL.\n- [GraphQL Roadmap](https://roadmap.sh/graphql/) - Step by step guide to learn GraphQL.\n- [GraphQL Security Academy](https://escape.tech/academy/) - a free and interactive platform to learn GraphQL security: how to find, exploit and fix GraphQL vulnerabilities.\n\n## License\n\n[![CC0](https://licensebuttons.net/p/zero/1.0/88x31.png)](https://creativecommons.org/publicdomain/zero/1.0/)\n\nTo the extent possible under law, [Chen-Tsu Lin](https://github.com/chentsulin) has waived all copyright and related or neighboring rights to this work.\n"
}
{
  "repo_name": "veelenga_awesome-crystal",
  "readme_content": "[![SWUbanner](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct.svg)](https://github.com/vshymanskyy/StandWithUkraine/blob/main/docs/README.md)\n\n<p align=\"center\"><img src=\"logo/logotype_horizontal.jpg\" alt=\"awesome-crystal\"></p>\n\n# Awesome Crystal\n[![Awesome](https://awesome.re/badge.svg)](https://awesome.re)\n\nA curated list of awesome Crystal code and resources. Inspired by [awesome](https://github.com/sindresorhus/awesome) and [awesome-awesomeness](https://github.com/bayandin/awesome-awesomeness).\nThe goal is to have projects mostly stable and useful for the community.\n\nSearch shards at [shards.info](https://shards.info) or follow announcements [Crystal [ANN]](https://crystal-ann.com) for more.\n\nContributions are welcome. Please take a quick look at the [contribution guidelines](https://github.com/veelenga/awesome-crystal/blob/master/.github/CONTRIBUTING.md) first.\n\n* [Awesome Crystal](#awesome-crystal)\n  * [Algorithms and Data structures](#algorithms-and-data-structures)\n  * [Blockchain](#blockchain)\n  * [C Bindings](#c-bindings)\n  * [Caching](#caching)\n  * [CLI Builders](#cli-builders)\n  * [CLI Utils](#cli-utils)\n  * [Code Analysis and Metrics](#code-analysis-and-metrics)\n  * [Compression](#compression)\n  * [Configuration](#configuration)\n  * [Converters](#converters)\n  * [Cryptography](#cryptography)\n  * [Data Formats](#data-formats)\n  * [Data Generators](#data-generators)\n  * [Database Drivers/Clients](#database-driversclients)\n  * [Database Tools](#database-tools)\n  * [Debugging](#debugging)\n  * [Dependency Injection](#dependency-injection)\n  * [Email](#email)\n  * [Environment Management](#environment-management)\n  * [Examples and funny stuff](#examples-and-funny-stuff)\n  * [Framework Components](#framework-components)\n  * [Game Development](#game-development)\n  * [GUI Development](#gui-development)\n  * [HTML Builders](#html-builders)\n  * [HTML/XML parsing](#htmlxml-parsing)\n  * [HTTP](#http)\n  * [Image Processing](#image-processing)\n  * [Implementations/Compilers](#implementationscompilers)\n  * [Internationalization](#internationalization)\n  * [Logging and monitoring](#logging-and-monitoring)\n  * [Machine Learning](#machine-learning)\n  * [Markdown/Text Processors](#markdowntext-processors)\n  * [Misc](#misc)\n  * [Network Protocols](#network-protocols)\n  * [Networking](#networking)\n  * [ORM/ODM Extensions](#ormodm-extensions)\n  * [Package Management](#package-management)\n  * [Processes and Threads](#processes-and-threads)\n  * [Project Generators](#project-generators)\n  * [Queues and Messaging](#queues-and-messaging)\n  * [Routing](#routing)\n  * [Scheduling](#scheduling)\n  * [Science and Data analysis](#science-and-data-analysis)\n  * [Search](#search)\n  * [Serverless Computing](#serverless-computing)\n  * [System](#system)\n  * [Task management](#task-management)\n  * [Template Engine](#template-engine)\n  * [Testing](#testing)\n  * [Third-party APIs](#third-party-apis)\n  * [Validation](#validation)\n  * [Web Frameworks](#web-frameworks)\n* [Community](#community)\n  * [Unofficial](#unofficial)\n* [Resources](#resources)\n  * [Official Documentation Translations](#official-documentation-translations)\n* [Services and Apps](#services-and-apps)\n* [Tools](#tools)\n  * [DevOps](#devops)\n  * [Editor Plugins](#editor-plugins)\n  * [LSP Language Server Protocol Implementations](#lsp-language-server-protocol-implementations)\n  * [Shell Plugins](#shell-plugins)\n\n## Algorithms and Data structures\n * [bisect](https://github.com/spider-gazelle/bisect) - Inserting values into a sorted array\n * [blurhash.cr](https://github.com/Sija/blurhash.cr) - [BlurHash](https://github.com/woltapp/blurhash) implementation\n * [crie](https://github.com/c910335/crie) - Compile-time Trie\n * [CrOTP](https://github.com/philnash/crotp) - HOTP and TOTP implementation for two factor authentication\n * [crystal-linked-list](https://github.com/abvdasker/crystal-linked-list) - Implementation of Linked List\n * [crystaledge](https://github.com/unn4m3d/crystaledge) - A pure Vector Math library\n * [crystalg](https://github.com/tobyapi/crystalg) - A Generic Algorithm Library\n * [crystalline](https://github.com/jtomschroeder/crystalline) - A collection of containers and algorithms\n * [csuuid](https://github.com/wyhaines/csuuid.cr) - A Chronologically Sortable UUID\n * [edits.cr](https://github.com/tcrouch/edits.cr) - Collection of edit distance algorithms\n * [fzy](https://github.com/hugopl/fzy) - A Crystal port of awesome Fzy project fuzzy finder algorithm\n * [Goban](https://github.com/soya-daizu/goban) - A fast and efficient QR Code implementation\n * [graphlb](https://github.com/mettuaditya/graphlb) - Collection of graph datastructure and algorithms\n * [haversine](https://github.com/geocrystal/haversine) - An Implementation of the Haversine formula\n * [kd_tree](https://github.com/geocrystal/kd_tree) - An implementation of \"K-Dimensional Tree\" and \"N-Nearest Neighbors\"\n * [ksuid.cr](https://github.com/Sija/ksuid.cr) - K-Sortable Globally Unique IDs\n * [markov](https://github.com/mccallofthewild/markov) - Build Markov Chains and run Markov Processes\n * [multiset.cr](https://github.com/tcrouch/multiset.cr) - Implementation of a multiset\n * [qr-code](https://github.com/spider-gazelle/qr-code) - QR Code generator\n * [radix](https://github.com/luislavena/radix) - Radix Tree implementation\n * [s2_cells](https://github.com/spider-gazelle/s2_cells) - [S2 Geometry](https://s2geometry.io/devguide/s2cell_hierarchy.html) for spatial indexing\n * [secure-remote-password](https://github.com/spider-gazelle/secure-remote-password) - SRP-6a protocol for authentication over an insecure network\n * [splay_tree_map](https://github.com/wyhaines/splay_tree_map.cr) - Splay Tree implementation that conforms to the Hash ducktype\n\n## Blockchain\n * [Axentro](https://github.com/Axentro/Axentro) - A custom blockchain platform\n * [Cocol](https://github.com/cocol-project/cocol) - A minimal blockchain testbed\n * [secp256k1.cr](https://github.com/q9f/secp256k1.cr) - Elliptic curve used in the public-private-key cryptography\n\n## C bindings\n * [augeas.cr](https://github.com/fernandes/augeas.cr) - Bindings for [Augeas](https://augeas.net/)\n * [clang.cr](https://github.com/crystal-lang/clang.cr) - Libclang bindings\n * [crt.cr](https://github.com/maiha/crt.cr) - Bindings for libncursesw and crt\n * [crystal-gsl](https://github.com/konovod/crystal-gsl) - Bindings for [GNU Scientific Library](https://www.gnu.org/software/gsl/)\n * [crystal-hunspell](https://github.com/mamantoha/crystal-hunspell) - Bindings for [Hunspell](https://hunspell.github.io/)\n * [duktape.cr](https://github.com/jessedoyle/duktape.cr) - Bindings for the [Duktape](https://github.com/svaarala/duktape) javascript engine\n * [fftw.cr](https://github.com/firejox/fftw.cr) - Bindings for [FFTW](https://fftw.org/) library\n * [gphoto2.cr](https://github.com/Sija/gphoto2.cr) - Bindings for the [libgphoto2](http://www.gphoto.org/) library\n * [icu.cr](https://github.com/olbat/icu.cr) - Bindings for the [ICU](http://site.icu-project.org/) library\n * [libnotify.cr](https://github.com/splattael/libnotify.cr) - Bindings for Libnotify\n * [nlopt.cr](https://github.com/konovod/nlopt.cr) - Bindings for [NLOpt](https://nlopt.readthedocs.io/en/latest/)\n * [pcap.cr](https://github.com/maiha/pcap.cr) - Bindings for libpcap\n * [pledge.cr](https://github.com/chris-huxtable/pledge.cr) - Bindings for OpenBSD's `pledge(2)`\n * [ssh2.cr](https://github.com/spider-gazelle/ssh2.cr) - Bindings for libssh2 library\n * [syslog.cr](https://github.com/chris-huxtable/syslog.cr) - Bindings for `syslog`\n * [v4l2.cr](https://github.com/spider-gazelle/v4l2.cr) - Bindings for [Video4Linux2](https://en.wikipedia.org/wiki/Video4Linux)\n * [wasmer-crystal](https://github.com/naqvis/wasmer-crystal) - Bindings for the `wasmer` WebAssembly runtime\n * [win32cr](https://github.com/mjblack/win32cr) - Bindings for Win32 API\n * [x_do.cr](https://github.com/woodruffw/x_do.cr) - Bindings for libxdo ([`xdotool`](https://github.com/jordansissel/xdotool))\n\n## Caching\n * [crystal-memcached](https://github.com/comandeo/crystal-memcached) - Implementation of a memcached client\n\n## CLI Builders\n * [admiral](https://github.com/jwaldrip/admiral.cr) - A robust DSL for writing command line interfaces\n * [Athena Console](https://github.com/athena-framework/console) - Allows for the creation of CLI based commands\n * [clicr](https://github.com/j8r/clicr) -  A simple declarative command line interface builder\n * [clim](https://github.com/at-grandpa/clim) - Slim command line interface builder\n * [Cling](https://github.com/devnote-dev/cling) - A modular, non-macro-based command line interface library\n * [commander](https://github.com/mrrooijen/commander) - Command-line interface builder\n * [Keimeno](https://github.com/robacarp/keimeno) -  A lightweight text user interface library in Crystal\n * [OptionParser](https://crystal-lang.org/api/OptionParser.html) - command-line options processing (Crystal stdlib)\n * [Phreak](https://github.com/shinzlet/phreak) - A highly flexible Crystal CLI builder in the style of OptionParser\n\n## CLI Utils\n * [climate](https://github.com/Sija/climate.cr) - Tiny tool to make your CLI output \ud83c\udf08  coloured\n * [coin](https://github.com/caian-org/coin) - Command-line application that performs currency conversion via the [Fixer API](https://fixer.io)\n * [cride](https://github.com/j8r/cride) - A light CLI text editor/IDE\n * [git-repository](https://github.com/place-labs/git-repository) - A git cli wrapper querying and cloning remote repositories with minimal data transfer\n * [hetzner-k3s](https://github.com/vitobotta/hetzner-k3s) - A CLI tool to quickly create and manage Kubernetes clusters in Hetzner Cloud\n * [lff](https://github.com/mkdika/lff-cr) - Simple and straightforward large files finder utility in command line\n * [meet](https://github.com/ryanprior/meet) - Start a jitsi meeting quickly from the comfort of your command line\n * [oq](https://github.com/Blacksmoke16/oq) - A performant, and portable jq wrapper to facilitate the consumption and output of formats other than JSON; using [jq](https://github.com/stedolan/jq) filters to transform the data\n * [progress_bar.cr](https://github.com/TPei/progress_bar.cr) - A simple and customizable progress bar\n * [tablo](https://github.com/hutou/tablo) - A flexible terminal table generator\n * [tallboy](https://github.com/epoch/tallboy) - Generate ASCII character tables with support for spanning cells over multiple columns\n\n## Code Analysis and Metrics\n * [ameba](https://github.com/crystal-ameba/ameba) - A static code analysis tool\n * [linguist.cr](https://github.com/microgit-com/linguist.cr) - Using multiple ways to find programming language used in files, based on Github's Linguist\n\n## Compression\n * [Crystar](https://github.com/naqvis/crystar) - Readers and writers of Tar archive format\n * [Gzip](https://crystal-lang.org/api/Compress/Gzip.html) - readers and writers of gzip format (Crystal stdlib)\n * [polylines.cr](https://github.com/BuonOmo/polylines.cr) \u2014 compression of series of coordinates\n * [snappy](https://github.com/naqvis/snappy) -  Snappy compression format reader/writer for Crystal\n * [Zip](https://crystal-lang.org/api/Compress/Zip.html) - readers and writers of zip format (Crystal stdlib)\n * [Zlib](https://crystal-lang.org/api/Compress/Zlib.html) - readers and writers of zlib format (Crystal stdlib)\n * [zstd.cr](https://github.com/didactic-drunk/zstd.cr) - Bindings for [Zstandard](https://github.com/facebook/zstd) compression library\n\n## Configuration\n * [cr-dotenv](https://github.com/gdotdesign/cr-dotenv) - Loads .env file\n * [Envy](https://github.com/grottopress/envy) - Load environment variables from YAML\n * [envyable](https://github.com/philnash/envyable.cr) -  A simple YAML to ENV config loader\n * [habitat](https://github.com/luckyframework/habitat) - Type safe configuration for your classes and modules\n * [totem](https://github.com/icyleaf/totem) - Load and parse a configuration in JSON, YAML, dotenv formats\n\n## Converters\n * [base62.cr](https://github.com/Sija/base62.cr) - Base62 encoder/decoder, well suited for url-shortening\n * [crunits](https://github.com/spider-gazelle/crunits) - Tool for converting units of measure (miles to kilometers, celsius to fahrenheit etc)\n * [money](https://github.com/crystal-money/money) - Handling money and currency conversion with ease (almost complete port of [RubyMoney](https://github.com/RubyMoney/money))\n * [sass.cr](https://github.com/straight-shoota/sass.cr) - Compile SASS/SCSS to CSS ([libsass](https://github.com/sass/libsass/) binding)\n\n## Cryptography\n * [cmac](https://github.com/spider-gazelle/cmac) - Crystal implementation of Cipher-based Message Authentication Code (CMAC)\n * [ed25519](https://github.com/spider-gazelle/ed25519) - the Ed25519 elliptic curve public-key signature system\ndescribed in [RFC 8032]\n * [monocypher.cr](https://github.com/konovod/monocypher.cr) - Crystal wrapper for the Monocypher crypto library\n * [sodium.cr](https://github.com/didactic-drunk/sodium.cr) - Crystal wrapper for the libsodium crypto API\n\n## Data Formats\n * [BinData](https://github.com/spider-gazelle/bindata) - Binary data parser helper with an [ASN.1](https://en.wikipedia.org/wiki/Abstract_Syntax_Notation_One) parser\n * [config.cr](https://github.com/chris-huxtable/config.cr) - Easy to use configuration format parser\n * [crinder](https://github.com/c910335/crinder) - Class based json renderer\n * [Crystalizer](https://github.com/j8r/crystalizer) - (De)serialize any Crystal object; supporting JSON, YAML, and Byte formats out of the box\n * [CSV](https://crystal-lang.org/api/CSV.html) - parsing and generating for comma-separated values (Crystal stdlib)\n * [front_matter.cr](https://github.com/chris-huxtable/front_matter.cr) - Separates a files front matter from its content\n * [geoip2.cr](https://github.com/delef/geoip2.cr) - GeoIP2 reader\n * [HAR](https://github.com/NeuraLegion/har) - HAR (HTTP Archive) parser\n * [INI](https://crystal-lang.org/api/INI.html) - INI file parser (Crystal stdlib)\n * [JSON](https://crystal-lang.org/api/JSON.html) - parsing and generating JSON documents (Crystal stdlib)\n * [json-schema](https://github.com/spider-gazelle/json-schema) - convert JSON serializable classes into a [JSON Schema](https://json-schema.org/) representation\n * [JSON::OnSteroids](https://github.com/anykeyh/json_on_steroids) - handle and mutate JSON document easily\n * [maxminddb.cr](https://github.com/delef/maxminddb.cr) - MaxMindDB reader\n * [toml.cr](https://github.com/crystal-community/toml.cr) - TOML parser\n * [XML](https://crystal-lang.org/api/XML.html) - parsing and generating XML documents (Crystal stdlib)\n * [YAML](https://crystal-lang.org/api/YAML.html) - parsing and generating YAML documents (Crystal stdlib)\n\n## Data Generators\n * [faker](https://github.com/askn/faker) - A library for generating fake data\n * [hashids.cr](https://github.com/splattael/hashids.cr) - A library to generate YouTube-like ids from one or many numbers\n * [prime](https://github.com/wontruefree/prime) - A prime number generator\n\n## Database Drivers/Clients\n * [couchdb.cr](https://github.com/TechMagister/couchdb.cr) - CouchDB client\n * [cryomongo](https://github.com/elbywan/cryomongo) - MongoDB driver\n * [crystal-db](https://github.com/crystal-lang/crystal-db) - Common db api\n * [crystal-ldap](https://github.com/spider-gazelle/crystal-ldap) - LDAP client\n * [crystal-mysql](https://github.com/crystal-lang/crystal-mysql) - MySQL connector for Crystal\n * [crystal-pg](https://github.com/will/crystal-pg) - A Postgres driver\n * [crystal-redis](https://github.com/stefanwille/crystal-redis) - Full featured Redis client\n * [crystal-rethinkdb](https://github.com/kingsleyh/crystal-rethinkdb) - Driver for RethinkDB / RebirthDB\n * [crystal-sqlite3](https://github.com/crystal-lang/crystal-sqlite3) - SQLite3 bindings\n * [leveldb](https://github.com/crystal-community/leveldb) - Crystal bindings for LevelDB\n * [rocksdb.cr](https://github.com/maiha/rocksdb.cr) - RocksDB client\n * [surrealdb.cr](https://github.com/yorci/surrealdb.cr) - Unoffical SurrealDB HTTP & Websocket Client\n\n## Database Tools\n * [migrate](https://github.com/vladfaust/migrate.cr) - A simpler database migration tool with transactions\n\n## Debugging\n* [backtracer.cr](https://github.com/Sija/backtracer.cr) - Shard aiming to assist with parsing backtraces into a structured form\n* [debug.cr](https://github.com/Sija/debug.cr) - `debug!(\u2026)` macro for `pp`-style debugging\n\n## Dependency Injection\n * [Athena Dependency Injection](https://github.com/athena-framework/dependency-injection) - Robust dependency injection service container framework\n * [Crystal-DI](https://github.com/funk-yourself/crystal-di) - Lightweight DI Container\n * [HardWire](https://github.com/jerometwell/hardwire) - A compile-time non-intrusive dependency injection system\n * [syringe](https://github.com/Bonemind/syringe) - A simple and basic dependency injection shard for crystal\n\n## Email\n * [carbon](https://github.com/luckyframework/carbon) - Fun, testable, and adapter-based email library\n * [crystal-email](https://github.com/arcage/crystal-email) - Simple e-mail sending library\n * [CrystalEmail](https://git.sceptique.eu/Sceptique/CrystalEmail) - A RFC compliant Email validator\n * [sendgrid.cr](https://github.com/dlanileonardo/sendgrid.cr) - Simple Sendgrid Client\n\n## Environment Management\n * [asdf-crystal](https://github.com/marciogm/asdf-crystal) - Plugin for asdf version manager\n * [crenv](https://github.com/crenv/crenv) - Crystal version manager\n * [rcm.cr](https://github.com/maiha/rcm.cr) - Redis Cluster Manager\n\n## Examples and funny stuff\n * [blackjack-cr](https://github.com/gdonald/blackjack-cr) - Console Blackjack\n * [crystal-patterns](https://github.com/crystal-community/crystal-patterns) - Examples of GOF patters\n * [crystalworld](https://github.com/vladfaust/crystalworld) - [realworld.io](https://realworld.io) back-end API implementation\n * [exercism-crystal](https://github.com/exercism/crystal) - Exercism exercises\n * [try.cr](https://github.com/maiha/try.cr) - Try monad\n\n## Framework Components\n * [Athena Event Dispatcher](https://github.com/athena-framework/event-dispatcher) - A Mediator and Observer pattern event library\n * [Athena Negotiation](https://github.com/athena-framework/negotiation) - Framework agnostic content negotiation library\n * [device_detector](https://github.com/creadone/device_detector) - Shard for detect device by user agent string\n * [Exception Page](https://github.com/crystal-loot/exception_page) - An exceptional exception page for Crystal web libraries and frameworks\n * [graphql](https://github.com/graphql-crystal/graphql) - Type-safe [GraphQL](http://graphql.org) server implementation\n * [graphql-crystal](https://github.com/ziprandom/graphql-crystal) - [GraphQL](http://graphql.org) implementation\n * [kemal-session](https://github.com/kemalcr/kemal-session) - Session handler for Kemal\n * [mochi](https://github.com/awcrotwell/mochi) - Authentication shard inspired by Devise supporting: Authenticable, Confirmable, Invitable & more\n * [motion.cr](https://github.com/awcrotwell/motion.cr) - Object oriented frontend library for Amber\n * [multi-auth](https://github.com/msa7/multi_auth) - Standardized multi-provider OAuth2 authentication (inspired by omniauth)\n * [praetorian](https://github.com/ilanusse/praetorian) - Minimalist authorization library inspired by Pundit\n * [Shield](https://github.com/grottopress/shield) - Comprehensive security for *Lucky* framework\n * [shrine.cr](https://github.com/jetrockets/shrine.cr) - File Attachment toolkit for Crystal applications. Heavily inspired by Shrine for Ruby\n * [tourmaline](https://github.com/protoncr/tourmaline) - Telegram bot framework with an API loosely based on [telegraf.js](https://telegraf.js.org/)\n\n## Game Development\n * [CrSFML](https://github.com/oprypin/crsfml) - Bindings to [SFML](https://www.sfml-dev.org/) multimedia/game library\n * [crystal-chipmunk](https://github.com/oprypin/crystal-chipmunk) - Bindings to [Chipmunk](http://chipmunk-physics.net/), a fast and lightweight 2D game physics library\n * [crystal-imgui-sfml](https://github.com/oprypin/crystal-imgui-sfml) - Bindings to integrate [Dear ImGui](https://github.com/ocornut/imgui) into an [SFML](https://www.sfml-dev.org/) project\n * [entitas.cr](https://github.com/spoved/entitas.cr) - A Entity Component System Framework for Crystal\n * [MyECS](https://github.com/konovod/myecs) - A Sparse Entity Component System Framework for Crystal\n * [Raylib-cr](https://github.com/sol-vin/raylib-cr) - Direct bindings to [Raylib](https://raylib.com), which supports Linux, Windows, and Mac\n * [SDL-Crystal-Bindings](https://github.com/Hadeweka/SDL-Crystal-Bindings) - Direct (unsafe) bindings to [SDL2](https://www.libsdl.org/), intended for writing own game libraries\n\n## GUI Development\n * [crystal-imgui](https://github.com/oprypin/crystal-imgui) - Bindings to [Dear ImGui](https://github.com/ocornut/imgui), an immediate-mode graphical UI library\n * [GTK4.cr](https://github.com/hugopl/gtk4.cr) - Bindings for [GTK4](https://docs.gtk.org/gtk4/overview.html) with Crystalized API\n * [Iu](https://github.com/grkek/iu) - UI framework based on the [Fusion/libui.cr](https://github.com/Fusion/libui.cr) library, with custom elements and modified bindings from [hedron-crystal/hedron](https://github.com/hedron-crystal/hedron)\n * [Ultimate GTK4 Crystal Guide](https://ultimate-gtk4-crystal-guide.geopjr.dev/) - Learn how to create premium GTK4 apps in Crystal\n\n## HTML Builders\n * [blueprint](https://github.com/gunbolt/blueprint) - Write reusable and testable HTML templates in plain Crystal\n * [form_builder.cr](https://github.com/westonganger/form_builder.cr) - Dead simple HTML form builder for Crystal with built-in support for many popular UI libraries such as Bootstrap\n * [to_html](https://github.com/sbsoftware/to_html.cr) - The fastest HTML builder engine for Crystal\n * [Water](https://github.com/shootingfly/water) - A library for writing HTML in plain Crystal\n\n## HTML/XML Parsing\n * [docx_cr_converter](https://github.com/aristotelesbr/docx_cr_converter) - parse DOCX Word\n * [myhtml](https://github.com/kostya/myhtml) - Fast HTML5 Parser that includes CSS selectors\n\n## HTTP\n * [Cable](https://github.com/cable-cr/cable) - An ActionCable \"port\" to Crystal, framework agnostic, 100% compatible with the ActionCable JS Client\n * [cossack](https://github.com/crystal-community/cossack) - Simple flexible HTTP client\n * [crest](https://github.com/mamantoha/crest) - Simple HTTP and REST client, inspired by the Ruby's RestClient gem\n * [crul](https://github.com/porras/crul) - Command line HTTP client\n * [digest-auth](https://github.com/spider-gazelle/digest-auth) - Digest authentication\n * [halite](https://github.com/icyleaf/halite) - Crystal HTTP Requests with a chainable REST API, built-in sessions and loggers\n * [http-multiserver.cr](https://github.com/vladfaust/http-multiserver.cr) - Mounting multiple servers via routes (a.k.a. URL mapping)\n * [http-params-serializable](https://github.com/vladfaust/http-params-serializable) - HTTP params (de)serialization, applicable to URL queries and URL-encoded forms\n * [http-protection](https://github.com/rogeriozambon/http-protection) - Protection against typical web attacks\n * [http2](https://github.com/ysbaddaden/http2) - HTTP/2 Protocol Implementation\n * [HTTP::Client](https://crystal-lang.org/api/HTTP/Client.html) - HTTP client (Crystal stdlib)\n * [HTTP::Server](https://crystal-lang.org/api/HTTP/Server.html) - HTTP server (Crystal stdlib)\n * [HTTP::WebSocket](https://crystal-lang.org/api/HTTP/WebSocket.html) - HTTP WebSocket client (Crystal stdlib)\n * [link-header](https://github.com/spider-gazelle/link-header) - HTTP Link Header Parser\n * [ntlm](https://github.com/spider-gazelle/ntlm) - NTLM authentication\n * [proxy-fetcher.cr](https://github.com/nbulaj/proxy-fetcher.cr) - Proxy lists fetching & validating library\n * [sse.cr](https://github.com/y2k2mt/sse.cr) - [Server-Sent Events](https://html.spec.whatwg.org/multipage/server-sent-events.html) client\n## Image processing\n * [celestine](https://github.com/celestinecr/celestine) - Create SVG images using a DSL\n * [ffmpeg](https://github.com/spider-gazelle/ffmpeg) - FFmpeg bindings that works with StumpyPNG to extract frames\n * [Pluto](https://github.com/phenopolis/pluto) - A fast and convenient image processing library\n * [stumpy_png](https://github.com/stumpycr/stumpy_png) - Read and write PNG images\n\n## Implementations/Compilers\n * [charly](https://github.com/charly-lang) - Charly Programming Language\n * [cltk](https://github.com/ziprandom/cltk) - A crystal port of the Ruby Language Toolkit\n * [crisp](https://github.com/rhysd/Crisp) - Lisp dialect implemented with Crystal\n * [LinCAS-lang](https://github.com/LinCAS-lang) - A programming language for scientific computation\n * [mint-lang](https://github.com/mint-lang/mint) - A refreshing programming language for the front-end web\n * [myst-lang](https://github.com/myst-lang/) - A practical, dynamic language designed to be written and understood as easily and efficiently as possible\n * [novika](https://github.com/novika-lang/novika) - A free-form, moldable, interpreted programming language\n * [runic-lang](https://github.com/runic-lang) - In-design toy language\n\n## Internationalization\n\n * [crystal-i18n](https://github.com/crystal-i18n/i18n) - An internationalization library inspired by Ruby-I18n\n * [i18n.cr](https://github.com/vladfaust/i18n.cr) - Internationalization shard\n * [Lens](https://github.com/syeopite/lens) - A multiformat internationalization (i18n) shard for Crystal. Supports Gettext, Ruby YAML, etc.\n * [Rosetta](https://github.com/wout/rosetta) - A blazing fast internationalization (i18n) library with compile-time key lookup supporting YAML and JSON formats\n\n## Logging and monitoring\n * [crafana](https://github.com/spoved/crafana.cr) - A [Grafana](https://grafana.com/) library to help autogenerate dashboards\n * [fiber_metrics.cr](https://github.com/didactic-drunk/fiber_metrics.cr) - Track run time, wait time, or memory allocations per `Fiber`, method or block\n * [Log](https://crystal-lang.org/api/Log.html) - logging utility (Crystal stdlib)\n * [statsd.cr](https://github.com/miketheman/statsd.cr) - [Statsd](https://github.com/etsy/statsd) client library\n\n## Machine Learning\n * [ai4cr](https://github.com/drhuffman12/ai4cr) - Artificial Intelligence (based on https://github.com/SergioFierens/ai4r)\n * [Cadmium](https://github.com/cadmiumcr/cadmium) - NLP library based heavily on [natural](https://github.com/NaturalNode/natural)\n * [crystal-fann](https://github.com/NeuraLegion/crystal-fann) - FANN (Fast Artifical Neural Network) binding\n * [mxnet.cr](https://github.com/toddsundsted/mxnet.cr) - Bindings for [MXNet](https://mxnet.incubator.apache.org/)\n * [shainet](https://github.com/NeuraLegion/shainet) - SHAInet (Neural Network in pure crystal)\n\n## Markdown/Text Processors\n * [markd](https://github.com/icyleaf/markd) - Yet another markdown parser built for speed, Compliant to CommonMark specification\n\n## Misc\n * [aasm.cr](https://github.com/veelenga/aasm.cr) - Easy to use finite state machine for Crystal classes\n * [any_hash.cr](https://github.com/Sija/any_hash.cr) - Recursive Hash with better JSON::Any included\n * [anyolite](https://github.com/Anyolite/anyolite) - Full mruby interpreter with simple bindings, allowing for easy scripting support in projects\n * [burocracia.cr](https://github.com/vinibrsl/burocracia.cr) - burocracia.cr the dependecyless shard to validate, generate and format Brazilian burocracias such as CPF, CNPJ and CEP\n * [callbacks](https://github.com/vladfaust/callbacks.cr) - Expressive callbacks module\n * [circuit_breaker](https://github.com/TPei/circuit_breaker) - Implementation of the circuit breaker pattern\n * [CrSignals](https://github.com/firejox/CrSignals) - Signals/slots notification library\n * [crystal-binary_parser](https://github.com/DanSnow/crystal-binary_parser) - Binary parser\n * [crystal-web-framework-stars](https://github.com/isaced/crystal-web-framework-stars) - Web frameworks for Crystal, most starred on Github\n * [crz](https://github.com/dhruvrajvanshi/crz) - Functional programming library\n * [defined](https://github.com/wyhaines/defined.cr) - macros for conditional compilation based on constant definitions, version requirements, or environment variable settings\n * [emoji.cr](https://github.com/veelenga/emoji.cr) - Emoji library\n * [gphoto2-web.cr](https://github.com/Sija/gphoto2-web.cr) - Web API for libgphoto2\n * [immutable](https://github.com/lucaong/immutable) - Implementation of thread-safe, persistent, immutable collections\n * [iterm2](https://github.com/toddsundsted/iterm2) - Display images within the terminal using the ITerm2 Inline Images Protocol\n * [monads](https://github.com/alex-lairan/monads) - Monad implementation\n * [observable](https://github.com/TPei/observable) - Implementation of the observer pattern\n * [pinger](https://github.com/spider-gazelle/pinger) - Ping IP addresses and DNS entries without requiring sudo\n * [port_midi](https://github.com/jimm/crystal_port_midi) - Crystal C bindings for the PortMIDI cross-platform MIDI I/O library\n * [retriable.cr](https://github.com/Sija/retriable.cr) - Simple DSL to retry failed code blocks\n * [serf-handler.cr](https://github.com/wyhaines/serf-handler.cr) - Framework for building Serf handlers, with a suite of useful builtin capabilities\n * [simple_retry](https://github.com/spider-gazelle/simple_retry) - Simple tool for retrying failed code blocks\n * [sslscan.cr](https://github.com/NeuraLegion/sslscan.cr) - Crystal shard wrapping the rbsec/sslscan utility\n * [version_tools](https://github.com/anicholson/crystal-version-tools) - Version-dependent behaviour, specified at compile-time\n * [wafalyzer](https://github.com/NeuraLegion/wafalyzer) - Web Application Firewall (WAF) Detector - shard + cli\n * [zaru_crystal](https://github.com/szTheory/zaru_crystal) - Filename sanitization\n\n## Network Protocols\n * [amqp-client.cr](https://github.com/cloudamqp/amqp-client.cr) - AMQP 0-9.1, a messaging protocol, implemented by eg. RabbitMQ\n * [connect-proxy](https://github.com/spider-gazelle/connect-proxy) - Connect method style of HTTP tunnelling / HTTP proxy\n * [cr-xmpp](https://github.com/naqvis/cr-xmpp) - XMPP/Jabber Library\n * [Crirc](https://github.com/Meoowww/Crirc) - IRC protocol implementation (Client, Server, Bots)\n * [crystal-bacnet](https://github.com/spider-gazelle/crystal-bacnet) - BACnet protocol implementation with BACnet/IP client\n * [crystal-dns](https://gitlab.com/jgillich/crystal-dns) - DNS protocol implementation and resolver\n * [crystal-json-socket](https://github.com/foi/crystal-json-socket) - JSON-socket client & server implementation. Inspired by and compatible with [node-json-socket](https://github.com/sebastianseilund/node-json-socket/) and [ruby-json-socket](https://github.com/foi/ruby-json-socket)\n * [crystal-mqtt](https://github.com/spider-gazelle/crystal-mqtt) - A MQTT client\n * [crystal-snmp](https://github.com/spider-gazelle/crystal-snmp) - An SNMP implementation with version 1, 2c and 3 support\n * [fast_irc.cr](https://github.com/RX14/fast_irc.cr) - Fast IRC parser/generator\n * [jwt](https://github.com/crystal-community/jwt) - Implementation of JWT (JSON Web Token)\n * [mDNS](https://github.com/spider-gazelle/mdns) - DNS Service Discovery and multicast DNS\n * [mqtt-client.cr](https://github.com/84codes/mqtt-client.cr) - A fast and lightweight MQTT client\n * [msgpack-crystal](https://github.com/crystal-community/msgpack-crystal) - MessagePack library\n * [OAuth](https://crystal-lang.org/api/OAuth.html) - OAuth consumer (Crystal stdlib)\n * [OAuth2](https://crystal-lang.org/api/OAuth2.html) - OAuth2 client (Crystal stdlib)\n * [OpenSSL](https://crystal-lang.org/api/OpenSSL.html) - bindings to libssl (Crystal stdlib)\n * [simple_rpc](https://github.com/kostya/simple_rpc) - RPC Server and Client for Crystal. Implements msgpack-rpc protocol\n * [stomp](https://github.com/spider-gazelle/stomp) - STOMP protocol\n * [telnet.cr](https://github.com/spider-gazelle/telnet.cr) - Telnet protocol\n * [transfer_more](https://git.sceptique.eu/Sceptique/transfer_more) - Clone of transfer.sh to uploads files\n\n## Networking\n * [ipaddress.cr](https://github.com/Sija/ipaddress.cr) - Library to handle IPv4 and IPv6 addresses\n * [mac-address](https://github.com/automatico/mac-address) - Library for working with MAC addresses\n\n## ORM/ODM Extensions\n * [avram](https://github.com/luckyframework/avram) - A database wrapper for reading, writing, and migrating Postgres databases\n * [clear](https://github.com/anykeyh/clear) - ORM specialized to PostgreSQL only but with advanced features\n * [crecto](https://github.com/Crecto/crecto) - Database wrapper, based on Ecto\n * [granite](https://github.com/amberframework/granite) - ORM for Postgres, Mysql, Sqlite\n * [jennifer.cr](https://github.com/imdrasil/jennifer.cr) - Active Record pattern implementation with flexible query chainable builder and migration system\n * [rethinkdb-orm](https://github.com/spider-gazelle/rethinkdb-orm) - ORM for RethinkDB / RebirthDB\n\n## Package Management\n * [shards](https://github.com/crystal-lang/shards) - Dependency manager for the Crystal\n\n## Processes and Threads\n * [await_async](https://github.com/anykeyh/await_async) - Add keywords await & async in Crystal Lang\n * [concurrent.cr](https://github.com/didactic-drunk/concurrent.cr) - Simplified concurrency using streams/pipelines, waitgroups, semaphores, smores and more\n * [neph](https://github.com/tbrand/neph) - A modern command line job processor that can execute jobs concurrently\n * [promise](https://github.com/spider-gazelle/promise) - A Promise implementation with type inference\n * [werk](https://github.com/marghidanu/werk) - Dead simple task runner with concurrent support, ideal for local CI\n\n## Project Generators\n * [crystal_lib](https://github.com/crystal-lang/crystal_lib) - Automatic binding generator for native libraries\n * [fez](https://github.com/jwoertink/fez) - A Kemal application generator\n * [libgen](https://github.com/olbat/libgen) - Automatic bindings generator configured using JSON/YAML files\n\n## Queues and Messaging\n * [mosquito](https://github.com/mosquito-cr/mosquito/) - Redis backed periodic and ad hoc job processing\n * [NATS.io](https://github.com/nats-io/nats.cr) - NATS client\n * [sidekiq.cr](https://github.com/mperham/sidekiq.cr) - Simple, efficient job processing\n\n## Routing\n * [orion](https://github.com/obsidian/orion) - A minimal, rails-esque routing library\n * [router.cr](https://github.com/tbrand/router.cr) - Minimum but powerful http router for HTTP::Server\n\n## Scheduling\n * [crystime](https://gitlab.com/crystallabs/crystime) - Advanced time, calendar, schedule, and remind library\n * [schedule.cr](https://github.com/hugoabonizio/schedule.cr) - Run periodic tasks\n * [tasker](https://github.com/spider-gazelle/tasker) - A high precision scheduler including timezone aware cron jobs\n\n## Science and Data analysis\n * [alea](https://github.com/nin93/alea) - Repeatable sampling, CDF and other utilities to work with probability distributions\n * [ishi](https://github.com/toddsundsted/ishi) - Graph plotting package with a small API and sensible defaults powered by gnuplot\n * [linalg](https://github.com/konovod/linalg) - Linear algebra library inspired by MATLAB and SciPy.linalg\n * [num.cr](https://github.com/crystal-data/num.cr) - Numerical computing library supporting N-Dimensional data\n * [predict.cr](https://github.com/RX14/predict.cr) - Satellite prediction library using the sgp4 model\n * [quartz](https://github.com/RomainFranceschini/quartz) - Modeling and simulation framework\n\n## Search\n * [hermes](https://github.com/imdrasil/hermes.cr) - Data Mapper pattern implementation for ElastiSearch\n\n## Serverless Computing\n * [crystal_openfaas](https://github.com/TPei/crystal_openfaas/) - Template to enable crystal as first class citizens in OpenFaaS\n * [secrets-env](https://github.com/spider-gazelle/secrets-env) - Extends ENV module to read values injected by docker / kubernetes secrets and other orchestration tools\n\n## System\n * [baked_file_system](https://github.com/schovi/baked_file_system) - Virtual file system implementation\n * [hardware](https://github.com/crystal-community/hardware) - Get CPU, Memory and Network informations of the running OS and its processes\n\n## Task management\n * [cake](https://github.com/axvm/cake) - Production-ready Make-like utility tool\n * [sam](https://github.com/imdrasil/sam.cr) - Another one Rake-like task manager with namespacing and arguments system\n\n## Template Engine\n * [crinja](https://github.com/straight-shoota/crinja) - An implementation of the [Jinja2 template engine](http://jinja.pocoo.org/)\n * [crustache](https://github.com/MakeNowJust/crustache) - [{{Mustache}}](https://mustache.github.io) for Crystal\n * [ECR (Embedded Crystal)](https://crystal-lang.org/api/ECR.html) - compile time template language which uses plain crystal expressions (Crystal stdlib)\n * [Jbuilder](https://github.com/shootingfly/jbuilder) - Generate JSON objects with a Builder-style DSL, inspired by jbuilder\n * [Kilt](https://github.com/jeromegn/kilt) - Abstraction layer for template engines\n * [Slang](https://github.com/jeromegn/slang) - Lightweight, terse, templating language inspired by Ruby's Slim\n * [teeplate](https://github.com/mosop/teeplate) - A library for rendering multiple template files\n\n## Testing\n * [Athena Spec](https://github.com/athena-framework/spec) - Common/helpful [Spec](https://crystal-lang.org/api/Spec.html) compliant testing utilities\n * [crotest](https://github.com/emancu/crotest) - A tiny and simple test framework\n * [crytic](https://github.com/hanneskaeufler/crytic) - Mutation testing framework\n * [hashr](https://github.com/crystal-china/hashr) - A tiny class makes test on JSON response easier\n * [LuckyFlow](https://github.com/luckyframework/lucky_flow) - Automated browser tests similar to Capybara\n * [mass-spec](https://github.com/c910335/mass-spec) - Web API testing library\n * [microtest](https://github.com/Ragmaanir/microtest) - Small opinionated testing library focusing on power asserts\n * [minitest.cr](https://github.com/ysbaddaden/minitest.cr) - Library for unit tests and assertions\n * [mocks.cr](https://github.com/waterlink/mocks.cr) - Mocking library for Crystal\n * [Spec](https://crystal-lang.org/api/Spec.html) - spec framework (Crystal stdlib)\n * [spectator](https://gitlab.com/arctic-fox/spectator) - Feature rich spec framework that uses the modern expect syntax\n * [timecop.cr](https://github.com/crystal-community/timecop.cr) - Library for mocking with `Time.now`. Inspired by the [timecop ruby gem](https://github.com/travisjeffery/timecop)\n * [vcr](https://github.com/spoved/vcr.cr) - A HTTP capture and replay implementation for crystal\n * [webdriver_pump](https://github.com/bwilczek/webdriver_pump) - Page Object library. Inspired by Ruby's [WatirPump](https://github.com/bwilczek/watir_pump)\n * [webmock.cr](https://github.com/manastech/webmock.cr) - Library for stubbing `HTTP::Client` requests\n\n## Third-party APIs\n * [amazonite](https://github.com/rjnienaber/amazonite) - An unofficial SDK supporting popular AWS APIs\n * [aws-signer.cr](https://github.com/beanieboi/aws-signer.cr) - This library signs your HTTP requests using AWS v4\n * [awscr-s3](https://github.com/taylorfinnell/awscr-s3) - AWS S3 interface\n * [awscr-signer](https://github.com/taylorfinnell/awscr-signer) - Sign HTTP::Request objects and generate presigned post forms\n * [crystal-consul](https://github.com/rogerwelin/crystal-consul) - Consul API client\n * [crystal-darksky](https://github.com/sb89/crystal-darksky) - Wrapper for the [Dark Sky](https://darksky.net) API\n * [crystal-swapi](https://github.com/sb89/crystal-swapi) - Star Wars API (SWAPI) wrapper\n * [crystal_slack](https://github.com/manastech/crystal_slack) - A tool that parses Slack slash commands or send incoming web hooks\n * [GDAX](https://github.com/mccallofthewild/gdax) - GDAX REST and WebSocket API Wrapper with request signing\n * [gitlab.cr](https://github.com/icyleaf/gitlab.cr) - GitLab API wrapper\n * [google](https://github.com/PlaceOS/google) - Google API wrapper\n * [host_meta](https://github.com/toddsundsted/host_meta) - A Web Host Metadata (https://tools.ietf.org/html/rfc6415) client\n * [kube-client.cr](https://github.com/spoved/kube-client.cr) - Kubernetes API Client\n * [mixpanel-crystal](https://github.com/petoem/mixpanel-crystal) - A library for sending events to Mixpanel\n * [mollie.cr](https://github.com/wout/mollie.cr) - [Mollie](https://www.mollie.com/en/) Payments API wrapper (Creditcard, PayPal, Apple Pay, Sofort, Klarna, ...)\n * [office365](https://github.com/PlaceOS/office365) - Microsoft Graph API wrapper\n * [pinboard.cr](https://github.com/oz/pinboard.cr) - [Pinboard](https://pinboard.in) API\n * [raven.cr](https://github.com/sija/raven.cr) - Raven is a client for [Sentry](https://github.com/getsentry/sentry)\n * [stripe.cr](https://github.com/confact/stripe.cr) - Stripe api wrapper\n * [tmdb.cr](https://github.com/mmacia/tmdb.cr) - The Movie DB (TMDb) api wrapper\n * [twitter-crystal](https://github.com/sferik/twitter-crystal) - A library to access the Twitter API\n * [web_finger](https://github.com/toddsundsted/web_finger) - A WebFinger (https://tools.ietf.org/html/rfc7033) client\n * [ynab.cr](https://github.com/jaredsmithse/ynab.cr) - A library to interact with your YNAB data\n\n## Validation\n * [accord](https://github.com/neovintage/accord) - Shareable validation library for Crystal Objects\n * [Athena Validator](https://github.com/athena-framework/validator) - Robust & flexible validation framework\n * [validations](https://github.com/vladfaust/validations.cr) - Validations mixin\n * [validator](https://github.com/Nicolab/crystal-validator) - Data check and validation\n\n## Web Frameworks\n * [amber](https://github.com/amberframework/amber) - Open source efficient and cohesive web application framework\n * [Athena](https://github.com/athena-framework/athena) - A web framework comprised of reusable, independent components\n * [grip](https://github.com/grip-framework/grip) - The microframework for writing powerful web applications\n * [kemal](https://github.com/kemalcr/kemal) - Lightning Fast, Super Simple web framework. Inspired by Sinatra\n * [lucky](https://github.com/luckyframework/lucky) - Catch bugs early, forget about most performance issues, and spend more time on code instead of debugging and writing tests\n * [marten](https://github.com/martenframework/marten) - A web framework that makes building web applications easy, productive, and fun\n * [runcobo](https://github.com/runcobo/runcobo) - An api framework with simple, intuitive and consistent DSL, using jbuilder to render json\n * [Shivneri](https://github.com/ujjwalguptaofficial/shivneri) - Component based MVC web framework for crystal targeting good code structures, modularity & performance\n * [spider-gazelle](https://github.com/spider-gazelle/spider-gazelle) - A Rails esque web framework with a focus on speed and extensibility\n\n# Community\n * [Chicago Crystal Podcast](https://podcast.chicagocrystal.org)\n * [Chicago Crystal YouTube](https://www.youtube.com/channel/UCI1RvHPG6S9mw4eRoJfH2kA)\n * [Crystal Forum](https://forum.crystal-lang.org/)\n * [Crystal newsletters](https://crystal-lang.org/#newsletter)\n * [Gitter](https://gitter.im/crystal-lang/crystal)\n * [Google Group](https://groups.google.com/forum/?fromgroups#!forum/crystal-lang)\n * [IRC](http://irc.lc/freenode/crystal-lang) - #crystal-lang on Freenode\n * [Reddit](https://www.reddit.com/r/crystal_programming/)\n * [Stackoverflow](https://stackoverflow.com/tags/crystal-lang/info)\n\n## Unofficial\n * [Chinese-speaking Telegram Group](https://t.me/crystal_cn) - \u6765\u5427\uff01TG \u4e2d\u6587\u5708\u7684\u670b\u53cb\u4eec\uff01\n * [Crystal Programming Discord Server](https://discord.gg/YS7YvQy) - Unofficial Discord server dedicated to the Crystal Programming Language\n * [Portuguese-speaking Telegram Group](https://t.me/crystalbrasil) - Bem vindos ao Crystal Brasil!\n * [Russian-speaking Telegram Group](https://t.me/crystal_ru) - \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c, \u0442\u043e\u0432\u0430\u0440\u0438\u0449!\n\n# Resources\n * [Crystal for Rubyists](http://www.crystalforrubyists.com/) - Free book to bootstrap your Crystal journey\n * [Crystal Shards for Ruby Gems](https://github.com/crystal-lang/crystal/wiki/Crystal-Shards-for-Ruby-Gems) - A list of Ruby Gems and their Crystal Shards equivalents\n * [crystal-koans](https://github.com/ilmanzo/crystal-koans) - Learn Crystal by writing unit tests\n * [crystal-lang.org](https://crystal-lang.org) - Official language site\n * [devdocs.io](https://devdocs.io/crystal/) - API Documentation Browser with Crystal support\n * [Programming Crystal](https://pragprog.com/book/crystal/programming-crystal) - PragProg book to start your Crystal journey\n\n## Official Documentation Translations\n * [br.crystal-lang.org](http://br.crystal-lang.org/) - Brazilian\n * [ja.crystal-lang.org](http://ja.crystal-lang.org/) - Japanese\n * [kr.crystal-lang.org](https://kr.crystal-lang.org/) - Korean\n * [ru.crystal-lang.org](http://ru.crystal-lang.org/) - Russian\n * [tw.crystal-lang.org](http://tw.crystal-lang.org/) - Chinese Traditional\n\n# Services and Apps\n * [carc.in](https://carc.in/) - A web service that runs your code and displays the result\n * [Crank](https://github.com/arktisklada/crank) - A Procfile-based application manager (like Foreman)\n * [cry](https://github.com/elorest/cry) - Ability to execute crystal code in a fashion similar to Ruby's pry edit\n * [Crystal [ANN]](https://crystal-ann.com) - Announce new project, blog post, version update or any other Crystal work\n * [DeBot](https://github.com/jhass/DeBot) - IRC bot written in Crystal\n * [icr](https://github.com/crystal-community/icr) - Interactive console for Crystal (like IRB for Ruby)\n * [Invidious](https://github.com/iv-org/invidious) - Invidious is an alternative front-end to YouTube\n * [mpngin](https://github.com/thewalkingtoast/mpngin) - A URL shortener with simple stats\n * [procodile](https://github.com/crystal-china/procodile_cr) - Run processes in the background (and foreground) on Mac & Linux from a Procfile (for production and/or development environments)\n * [quicktype](https://quicktype.io/) - Generate models and serializers from JSON, JSON Schema, GraphQL, and TypeScript\n * [shards.info](http://shards.info/) - Web service that lists all repositories on GitHub that have Crystal code in them. The sources are available on [GitHub](https://github.com/mamantoha/shards-info)\n\n# Tools\n * [ast_helper](https://github.com/bcardiff/crystal-ast-helper) - Helper tool to debug parser and formatter\n * [crystal-base](https://github.com/ruivieira/crystal-base) - CentOS base docker image for Crystal development\n * [crystal-dash-docset](https://github.com/Sija/crystal-dash-docset) - [Dash](https://kapeli.com/dash) docset generator\n * [port_ruby_to_crystal](https://github.com/crystal-china/port_ruby_to_crystal) - A regex replace ruby script for port ruby code to crystal easier, reduce friction\n * [public_suffix](https://github.com/toddsundsted/public_suffix) - A small library designed to make the Public Suffix List (https://publicsuffix.org/) easier to use\n\n## DevOps\n * [ansible-crystal](https://github.com/CorbanR/ansible-crystal) - Ansible playbook for installing crystal\n * [DPPM](https://github.com/DFabric/dppm) - An easy, universal way to install and manage applications as packages (mostly Linux)\n\n## Editor Plugins\n * Acme:\n   * [acmecrystal](https://github.com/ilanpillemer/acmecrystal) - Reformats crystal code in acme\n * Atom\n   * [crystal-tools](https://atom.io/packages/crystal-tools) - Enables built in tools in Crystal compiler\n   * [language-crystal-actual](https://atom.io/packages/language-crystal-actual) - Crystal language support in Atom\n * Emacs\n   * [crystal-mode](https://melpa.org/#/crystal-mode) - Crystal language support for Emacs ([crystal-lang-tools/emacs-crystal-mode](https://github.com/crystal-lang-tools/emacs-crystal-mode))\n * Geany\n   * [geany-crystal](https://github.com/crystal-lang-tools/geany-crystal) - Crystal support for the [Geany editor](https://www.geany.org/)\n * IntelliJ IDEA\n   * [intellij-crystal-lang](https://github.com/asedunov/intellij-crystal-lang) - Crystal support for the JetBrains IDEs\n * Lite-XL\n   * [lite-plugin-crystal](https://github.com/Tamnac/lite-plugin-crystal) - Crystal support for the [Lite-XL](https://lite-xl.com/en/) editor\n * Spacemacs\n   * [crystal-spacemacs-layer](https://github.com/juanedi/crystal-spacemacs-layer) - Spacemacs contribution layer for Crystal\n * Sublime\n   * [sublime-crystal](https://github.com/crystal-lang-tools/sublime-crystal) - Crystal syntax highlighting for sublime Text\n * TextMate\n   * [Crystal.tmbundle](https://github.com/crystal-lang-tools/Crystal.tmbundle) - Crystal syntax highlighting, compile, format command, snippets\n * Vim\n   * [vim-crystal](https://github.com/vim-crystal/vim-crystal) - Vim filetype support for Crystal\n   * [vim-slang](https://github.com/elorest/vim-slang) - Vim filetype support for Slang Templating Engine\n * Visual Studio Code\n   * [vscode-crystal-lang](https://github.com/crystal-lang-tools/vscode-crystal-lang) - Formatter, linter and syntax highlighting for `cr` and `ecr` files\n\n## LSP Language Server Protocol Implementations\n * [crystalline](https://github.com/elbywan/crystalline) - Crystalline is an implementation of the Language Server Protocol written in and for the Crystal Language\n * [scry](https://github.com/crystal-lang-tools/scry) - Code analysis server for Crystal implementing the [Language Server Protocol](https://microsoft.github.io/language-server-protocol/)\n\n## Shell plugins\n * [crun](https://github.com/Val/crun) - Crystal Run : shebang wrapper for Crystal\n * [crystal-zsh](https://github.com/veelenga/crystal-zsh) - .oh-my-zsh plugin\n"
}
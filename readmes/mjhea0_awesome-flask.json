{
  "repo_name": "mjhea0_awesome-flask",
  "readme_content": "# Awesome Flask [![Awesome](https://awesome.re/badge-flat.svg)](https://github.com/sindresorhus/awesome)\n\n> A curated list of awesome things related to Flask.\n\n<!--lint ignore double-link-->\n[Flask](https://flask.palletsprojects.com/) is a lightweight WSGI web application framework written in Python.\n\n## Contents\n\n- [Third-Party Extensions](#third-party-extensions)\n  - [Admin](#admin)\n  - [APIs](#apis)\n  - [Auth](#auth)\n  - [Cache](#cache)\n  - [Data Validation and Serialization](#data-validation-and-serialization)\n  - [Databases](#databases)\n  - [Developer Tools](#developer-tools)\n  - [Email](#email)\n  - [Forms](#forms)\n  - [Full-text Search](#full-text-search)\n  - [Security](#security)\n  - [Task Queues](#task-queues)\n  - [Utils](#utils)\n- [Resources](#resources)\n  - [Official Resources](#official-resources)\n  - [External Resources](#external-resources)\n  - [Community](#community)\n  - [Conferences](#conferences)\n  - [Meetups](#meetups)\n  - [Podcasts](#podcasts)\n  - [Tutorials](#tutorials)\n  - [Courses](#courses)\n  - [Books](#books)\n  - [Videos](#videos)\n- [Hosting](#hosting)\n  - [PaaS](#paas)\n  - [IaaS](#iaas)\n  - [Serverless](#serverless)\n- [Projects](#projects)\n  - [Boilerplates](#boilerplates)\n  - [Open Source Projects](#open-source-projects)\n\n## Third-Party Extensions\n\n### Admin\n\n- [Flask-Admin](https://github.com/flask-admin/flask-admin) - Functional admin panel that provides a user interface for managing data based on your models.\n\n### APIs\n\n#### RESTful API Support\n\n- [Eve](https://docs.python-eve.org) - RESTful API framework designed for human beings.\n- [Flask-Classful](https://flask-classful.teracy.org/) - Adds support for class-based views for setting up RESTful API route endpoints.\n- [Flask-MongoRest](https://github.com/closeio/flask-mongorest) - RESTful API framework wrapped around [MongoEngine](http://mongoengine.org/).\n- [Flask-RESTful](https://flask-restful.readthedocs.io) - Quickly build RESTful APIs.\n\n#### RESTful API + Swagger/OpenAPI Documentation Support\n\n- [Connexion](https://connexion.readthedocs.io) - Open source, OpenAPI-based, REST framework built on top of Flask.\n- [Flask-Rebar](https://github.com/plangrid/flask-rebar) - Combines Flask, [marshmallow](https://marshmallow.readthedocs.io/), and [OpenAPI](https://www.openapis.org/) for robust REST services.\n- [Flask-RESTX](https://flask-restx.readthedocs.io) - Community-driven fork of [Flask-RESTPlus](https://flask-restplus.readthedocs.io/) that makes it easy to build and document RESTful APIs with Flask.\n\n#### Swagger/OpenAPI Documentation Support\n\n- [Flask-APISpec](https://flask-apispec.readthedocs.io/) - Auto-documenting REST APIs.\n- [SAFRS: Python OpenAPI & JSON:API Framework](https://github.com/thomaxxl/safrs) - SAFRS, which is an acronym for *S*ql*A*lchemy *F*lask-*R*estful *S*wagger, is meant to help developers create self-documenting JSON APIs for SQLAlchemy database objects and relationships.\n\n### Auth\n\n#### Basic Auth and Session-based (for HTML Endpoints)\n\n- [Flask-HTTPAuth](https://flask-httpauth.readthedocs.io) - Authentication.\n- [Flask-Login](https://flask-login.readthedocs.io/) - Account management and authentication.\n- [Flask Principal](https://pythonhosted.org/Flask-Principal/) - Authorization.\n- [Flask-Security-Too](https://flask-security-too.readthedocs.io/en/stable/) - Account management, authentication, authorization.\n- [Flask-Session](https://flasksession.readthedocs.io/en/latest/) - Session managment.\n- [Flask-SimpleLogin](https://github.com/flask-extensions/Flask-SimpleLogin) - Authentication.\n- [Flask-User](https://flask-user.readthedocs.io) - Account management, authentication, authorization.\n\n> Curious about the differences differences between Flask-User and Flask-Security? Review the Flask-User [FAQ](https://flask-user.readthedocs.io/en/latest/faq.html).\n\n#### JWT-based (for JSON Endpoints)\n\n- [Flask-JWT](https://pythonhosted.org/Flask-JWT/) - Basic support for working with JWTs.\n- [Flask-JWT-Extended](https://flask-jwt-extended.readthedocs.io) - Advanced support for working with JWTs.\n- [Flask-JWT-Router](https://github.com/joegasewicz/flask-jwt-router) - Adds authorized routes to a Flask app.\n- [Flask-Praetorian](https://flask-praetorian.readthedocs.io) - Authentication and authorization for Flask APIs.\n\n#### OAuth\n\n- [Authlib](https://authlib.org/) - Library for building OAuth and OpenID clients and servers.\n- [Authomatic](https://github.com/authomatic/authomatic) - Framework agnostic library for Python web applications that simplifies authentication and authorization of users via OAuth and OpenID.\n- [Flask-Dance](https://github.com/singingwolfboy/flask-dance) - OAuth support via [OAuthLib](https://oauthlib.readthedocs.io/).\n\n### Cache\n\n- [Flask-Caching](https://flask-caching.readthedocs.io/) - Caching support.\n\n### Data Validation and Serialization\n\n- [Flask-Marshmallow](https://flask-marshmallow.readthedocs.io) - Thin integration layer for Flask and marshmallow (an object serialization /deserialization library) that adds additional features to marshmallow.\n- [Flask-Pydantic](https://github.com/bauerji/flask-pydantic) - [Pydantic](https://github.com/pydantic/pydantic) support.\n\n### Databases\n\n#### ORMs\n\n- [Flask-Peewee](https://flask-peewee.readthedocs.io) - Support for Peewee, an ORM and database migration tool.\n- [Flask-Pony](https://pypi.org/project/Flask-Pony/) - Support for Pony ORM.\n- [Flask-SQLAlchemy](https://flask-sqlalchemy.palletsprojects.com) - Support for SQLAlchemy, a SQL toolkit and ORM.\n\n#### ODMs\n\n- [Flask-MongoEngine](https://flask-mongoengine.readthedocs.io) - Bridges Flask and MongoEngine for working with MongoDB.\n- [Flask-PyMongo](https://flask-pymongo.readthedocs.io) - Bridges Flask and PyMongo for working with MongoDB.\n\n#### Migrations\n\n- [Flask-Alembic](https://flask-alembic.readthedocs.io) - Configurable [Alembic](https://alembic.sqlalchemy.org/) migration environment around a Flask-SQLAlchemy database for handling database migrations.\n<!--lint ignore double-link-->\n- [Flask-DB](https://github.com/nickjj/flask-db) - Flask CLI extension that helps you migrate, drop, create and seed your SQL database.\n- [Flask-Migrate](https://flask-migrate.readthedocs.io) - Handles SQLAlchemy database migrations via Alembic.\n\n<!--lint ignore double-link-->\n> Curious about the differences between Alembic, Flask-Alembic, Flask-Migrate, and Flask-DB? Review [this item](https://github.com/nickjj/flask-db#differences-between-alembic-flask-migrate-flask-alembic-and-flask-db) from Flask-DB's FAQ.\n\n#### Other Tools\n\n- [Flask-Excel](https://github.com/pyexcel-webwares/Flask-Excel) - Uses [pyexcel](https://github.com/pyexcel/pyexcel) to read, manipulate, and write data in different Excel formats: csv, ods, xls, xlsx and xlsm.\n\n### Developer Tools\n\n#### Debugging\n\n- [Flask-DebugToolbar](https://flask-debugtoolbar.readthedocs.io) - Port of Django's debug toolbar for Flask.\n- [Flask-Profiler](https://github.com/muatik/flask-profiler) - Endpoint analyzer/profiler.\n\n#### Fixtures\n\n- [Flask-Fixtures](https://github.com/croach/Flask-Fixtures) - Create database fixtures from JSON or YAML.\n- [Mixer](https://mixer.readthedocs.io) - Object generation tool.\n\n#### Logging\n\n- [Rollbar](https://rollbar.com/platforms/flask-error-tracking/) - Flask error logging with Rollbar.\n\n#### Monitoring\n\n- [Airbrake](https://docs.airbrake.io/docs/platforms/framework/python/flask/) - Airbrake Flask integration.\n- [Elastic APM Agent](https://www.elastic.co/guide/en/apm/agent/python/current/flask-support.html) - Elastic APM Flask integration.\n- [Flask Monitoring Dashboard](https://flask-monitoringdashboard.readthedocs.io) - Dashboard for automatic monitoring of Flask web-services.\n- [Sentry Python SDK](https://sentry.io/for/flask/) - Sentry SDK Flask integration.\n\n#### Tracing\n\n- [Flask-OpenTracing](https://github.com/opentracing-contrib/python-flask) - OpenTracing instrumentation.\n\n#### Testing\n\n- [Flask-Testing](https://pythonhosted.org/Flask-Testing/) - Unittest extensions.\n- [Pytest-Flask](https://github.com/pytest-dev/pytest-flask) - Pytest support for testing Flask applications.\n\n### Email\n\n- [Flask-Mail](https://pythonhosted.org/Flask-Mail/) - Provides simple email sending capabilities.\n- [Flask-Mailman](https://pypi.org/project/flask-mailman/) - A port of `django.mail` for Flask.\n- [Flask-Mail-SendGrid](https://github.com/hamano/flask-mail-sendgrid) - Provides simple email base on Flask-Mail for sending email by SendGrid.\n\n### Forms\n\n- [Flask-WTF](https://flask-wtf.readthedocs.io) - Integrates Flask with WTForms (provides CSRF protection as well).\n\n### Full-text Search\n\n\n- [flask-msearch](https://github.com/honmaple/flask-msearch) - Full-text search.\n- [Flask-WhooshAlchemy3](https://github.com/blakev/Flask-WhooshAlchemy3) - Full-text search + Whoosh indexing capabilities for Flask-SQLAlchemy.\n- [SQLAlchemy-Searchable](https://sqlalchemy-searchable.readthedocs.io) - Provides full-text search capabilities for SQLAlchemy models.\n\n### Security\n\n- [Flask-Argon2](https://github.com/red-coracle/flask-argon2) - Provides argon2 hashing utilities.\n- [Flask-Bcrypt](https://flask-bcrypt.readthedocs.io) - Provides bcrypt hashing utilities.\n- [Flask-CORS](https://flask-cors.readthedocs.io) - Cross Origin Resource Sharing (CORS) handling.\n- [Flask-SeaSurf](https://github.com/maxcountryman/flask-seasurf/) - Cross-site request forgery (CSRF) prevention.\n- [Flask-Talisman](https://github.com/GoogleCloudPlatform/flask-talisman) - HTTPS and security headers.\n\n### Task Queues\n\n- [Celery](https://docs.celeryproject.org/) - The most commonly used Python library for handling asynchronous tasks and scheduling.\n- [Dramatiq](https://flask-dramatiq.rtfd.io/) - Fast and reliable alternative to Celery.\n- [Flask-RQ](https://github.com/mattupstate/flask-rq) - [RQ](https://python-rq.org/) (Redis Queue) integration.\n- [Huey](https://huey.readthedocs.io) - [Redis](https://redis.io/)-based task queue that aims to provide a simple, yet flexible framework for executing tasks.\n\n### Utils\n\n- [Flask-Babel](https://github.com/python-babel/flask-babel) - Support for internationalization (i18n) and localization (l10n).\n- [Flask-File-Upload](https://github.com/joegasewicz/flask-file-upload) - Easy file uploads.\n- [Flask-FlatPages](https://pythonhosted.org/Flask-FlatPages/) - Provides flat static pages based on text files.\n- [Frozen-Flask](https://github.com/Frozen-Flask/Frozen-Flask) - Freezes a Flask application into a set of static files.\n- [Flask-GraphQL](https://github.com/graphql-python/flask-graphql) - GraphQL support.\n- [Flask-Injector](https://github.com/python-injector/flask_injector) - Adds support for dependency injection.\n- [Flask-Limiter](https://flask-limiter.readthedocs.io) - Rate limiting features to Flask routes.\n- [Flask-Moment](https://github.com/miguelgrinberg/Flask-Moment) - Moment.js date and time formatting helpers for Jinja2 templates.\n- [Flask-Paginate](https://pythonhosted.org/Flask-paginate/) - Pagination support.\n- [Flask-Reactize](https://github.com/Azure-Samples/flask-reactize) - Hides the Node.js development backend for React behind a Flask application.\n- [Flask-Shell2HTTP](https://github.com/Eshaan7/Flask-Shell2HTTP) - RESTful/HTTP wrapper for Python's subprocess API, so you can convert any command-line tool into a RESTful API service.\n- [Flask-Sitemap](https://flask-sitemap.readthedocs.io) - Sitemap generation.\n- [Flask-SocketIO](https://flask-socketio.readthedocs.io) - Socket.IO integration.\n- [Flask-SSE](https://flask-sse.readthedocs.io) - Streaming with flask.\n\n## Resources\n\n### Official Resources\n\n- [Project Website](https://palletsprojects.com/p/flask/) - Official Flask website.\n<!--lint ignore double-link-->\n- [Documentation](https://flask.palletsprojects.com) - Comprehensive documentation for all Flask versions.\n- [Flaskr Tutorial](https://flask.palletsprojects.com/tutorial/) - Build a basic blog application called Flaskr.\n- [Source Code](https://github.com/pallets/flask) - Hosted on GitHub.\n\n### External Resources\n\n- [Full Stack Python's Flask Page](https://www.fullstackpython.com/flask.html) - Explanation of Flask philosophy and links to other resources and tutorials.\n- [Miguel Grinberg's Blog](https://blog.miguelgrinberg.com/category/Flask) - Multiple Flask-specific tutorials.\n\n- [Nick Janetakis's Blog](https://nickjanetakis.com/blog/tag/flask-tips-tricks-and-tutorials) - Flask Tips, Tricks and Tutorials.\n- [Patrick Kennedy's Blog](https://www.patricksoftwareblog.com/) - Numerous tutorials on learning Python web application development with Flask.\n- [RealPython](https://realpython.com/tutorials/flask/) - Many high-quality tutorials on Flask.\n- [TestDriven.io](https://testdriven.io/blog/topics/flask/) - Up-to-date tutorials on Flask.\n\n### Community\n\n- [Discord](https://discord.com/invite/t6rrQZH) - Pallets Projects community on Discord (use the `#get-help` channel for Flask support).\n- IRC Channel - Chat with other Flask users on IRC channel `#pocoo` on FreeNode.\n- [Mailing List](https://mail.python.org/mailman/listinfo/flask) - General discussion of Flask and the Pallets projects (`flask@python.org`).\n- [Reddit](https://www.reddit.com/r/flask/) - Flask subreddit.\n- [Stack Overflow](https://stackoverflow.com/questions/tagged/flask) - Questions tagged `flask`.\n- [Twitter](https://twitter.com/PalletsTeam) - For official announcements on updates, security fixes, etc.\n\n### Conferences\n\n- [FlaskCon](https://twitter.com/flaskcon) - Community driven Flask event intended for speakers and attendees all over the world to participate in technical and evangelical sessions related to Flask.\n- [PyConWeb](https://twitter.com/pyconweb) - Covers Django, Tornado, Flask, API frameworks. AsyncIO, networking, Frontend, JavaScript, and web security.\n- [Flask Conf Brazil](https://2019.flask.python.org.br/) - Conference for the developers and users of Flask.\n- [PyCon US](https://us.pycon.org/) - The largest annual gathering for the community using and developing the open-source Python programming language.\n- [PyCon Australia](https://pycon-au.org/) - National conference organized for the Python Programming Community.\n- [Euro Python](https://europython.eu/) - The largest Python conference in Europe.\n- [PyCon](https://pycon.org/) - Complete listing of all PyCons globally.\n\n### Meetups\n\n- [Flask](https://www.meetup.com/topics/flask/all/) - 40+ groups in 20 countries.\n- [Python Web Development](https://www.meetup.com/topics/python-web-development/all/) - 600+ groups in 81 countries.\n- [Python](https://www.meetup.com/topics/python/all/) - 2,400+ groups in 100 countries.\n\n### Podcasts\n\n- [TalkPython](https://talkpython.fm/) - The leading Python podcast with several episodes on Flask.\n- [Podcast Init](https://www.pythonpodcast.com/) - A popular Python podcast that features Flask guests on occasion.\n- [Python Bytes](https://pythonbytes.fm/) - Another Python podcast that discusses Flask from time to time.\n- [Full Stack Python's Best Python Podcasts Page](https://www.fullstackpython.com/best-python-podcasts.html) - A list of active Python-specific podcasts.\n\n### Tutorials\n\n- [Flask Mega-Tutorial](https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world) - Overarching tutorial for Python beginner and intermediate developers that teaches web development with the Flask framework.\n- [Flaskr TDD](https://github.com/mjhea0/flaskr-tdd) - Intro to Flask, Test-Driven Development (TDD), and JavaScript.\n- [Make a Web App Using Python & Flask!](https://aryaboudaie.com/python/technical/educational/web/flask/2018/10/17/flask.html) - Creating a Python Website from the Bottom Up.\n\n### Courses\n\n- [Developing Web Applications with Python and Flask](https://testdriven.io/courses/learn-flask/) - This course focuses on teaching the fundamentals of Flask by building and testing a web application using Test-Driven Development (TDD).\n- [Test-Driven Development with Python, Flask, and Docker](https://testdriven.io/courses/tdd-flask/) - Learn how to build, test, and deploy a production-grade microservice powered by Python, Flask, and Docker.\n- [Authentication with Flask, React, and Docker](https://testdriven.io/courses/auth-flask-react/) - Learn how to add authentication to a Flask and React microservice!.\n- [Deploying a Flask and React Microservice to AWS ECS](https://testdriven.io/courses/aws-flask-react/) - Learn how to deploy microservices to Amazon ECS powered by Flask, React, and Docker.\n- [Build a SAAS App with Flask](https://buildasaasappwithflask.com) - Learn to build web applications with Flask and Docker.\n- [Full Stack Foundations](https://www.udacity.com/course/full-stack-foundations--ud088) - Build a data-driven web app with Python.\n- [Designing RESTful APIs](https://www.udacity.com/course/designing-restful-apis--ud388) - Build and Secure a backend API server.\n\n### Books\n\n- [Flask Web Development](https://www.oreilly.com/library/view/flask-web-development/9781491991725/) - Learn the framework from the ground up by developing, step-by-step, a real-world project.\n- [Real Python](https://realpython.com) - Learn Python programming, by example.\n- [Explore Flask](https://exploreflask.com/) - Best practices and patterns for developing web applications with Flask.\n\n### Videos\n\n- [PyVideo](https://pyvideo.org/search.html?q=flask)\n- [Practical Flask Web Development Tutorials](https://www.youtube.com/playlist?list=PLQVvvaa0QuDc_owjTbIY4rbgXOFkUYOUB)\n- [Python Flask Tutorial: Full-Featured Web App](https://www.youtube.com/playlist?list=PL-osiE80TeTs4UjLw5MM6OjgkjFeUxCYH)\n- [Discover Flask - Full Stack Web Development with Flask](https://github.com/realpython/discover-flask)\n\n## Hosting\n\n### PaaS\n\n(Platforms-as-a-Service)\n\n- [Heroku](https://www.heroku.com/)\n- [PythonAnywhere](https://www.pythonanywhere.com/details/flask_hosting)\n- [AWS Elastic Beanstalk](https://aws.amazon.com/elasticbeanstalk/)\n- [Google App Engine](https://cloud.google.com/appengine/)\n- [Microsoft Azure App Service](https://azure.microsoft.com/en-us/products/app-service/)\n- [Divio](https://www.divio.com)\n- [Render](https://render.com/)\n\n### IaaS\n\n(Infrastructure-as-a-Service)\n\n- [AWS EC2](https://aws.amazon.com/ec2/)\n- [Google Compute Engine](https://cloud.google.com/compute/)\n- [Digital Ocean](https://www.digitalocean.com/)\n<!-- markdown-link-check-disable-next-line -->\n- [Linode](https://www.linode.com/)\n\n### Serverless\n\nFrameworks:\n\n- [Zappa](https://github.com/Miserlou/Zappa)\n- [Chalice](https://github.com/aws/chalice)\n\nCompute:\n\n- [AWS Lambda](https://aws.amazon.com/lambda/)\n- [Google Cloud Functions](https://cloud.google.com/functions/)\n- [Azure Functions](https://azure.microsoft.com/en-us/products/functions/)\n\n## Projects\n\n### Boilerplates\n\n- [cookiecutter-flask](https://github.com/cookiecutter-flask/cookiecutter-flask) - With Bootstrap 4, asset bundling annd minification with webpack, starter templates, and registration/authentication.\n- [Cookiecutter Flask Skeleton](https://github.com/testdrivenio/cookiecutter-flask-skeleton) - Flask starter project for [Cookiecutter](https://github.com/cookiecutter/cookiecutter).\n- [Flask-AppBuilder](https://github.com/dpgaspar/Flask-AppBuilder) - Simple and rapid application development framework that includes detailed security, auto CRUD generation for your models, Google charts, and much more.\n- [flask-base](http://hack4impact.github.io/flask-base/) - Includes SQLAlchemy, Redis, User Authentication, and more.\n- [Flask-Bootstrap](https://github.com/esbullington/flask-bootstrap) - Integrated SQLAlchemy, authentication, and Bootstrap frontend.\n- [flask-htmx-boilerplate](https://github.com/marcusschiesser/flask-htmx-boilerplate) - Boilerplate template for a Python Flask application with HTMX and Tailwind CSS.\n- [uwsgi-nginx-flask-docker](https://github.com/tiangolo/uwsgi-nginx-flask-docker) - Docker image with uWSGI and Nginx for Flask applications in Python running in a single container.\n- [React-Redux-Flask](https://github.com/dternyak/React-Redux-Flask) - Boilerplate application for a Flask JWT Backend and a React/Redux Front-End with Material UI.\n- [Flask-Scaffold](https://github.com/Leo-G/Flask-Scaffold) - Prototype Database driven Web apps in Angular 6, Bootstrap 4 and REST API's with Flask.\n- [Flask-VueJS](https://github.com/marcuxyz/flask-vuejs) - Connect Flask application with VueJS.\n\n### Open Source Projects\n\n- [ActorCloud](https://github.com/actorcloud/ActorCloud) - Open-source IoT Platform.\n- [Airflow](https://github.com/apache/airflow/tree/master/airflow/www)\n- [Busy Beaver](https://github.com/busy-beaver-dev/busy-beaver) - Chicago Python's Community Engagement Slack bot.\n- [FlaskBB](https://github.com/flaskbb/flaskbb) - Classic forum software.\n- [Indico](https://github.com/indico/indico) - Feature-rich event management system, made at [CERN](https://home.cern/).\n- [Quokka CMS](https://github.com/quokkaproject) - The happiest CMS in the world.\n- [PythonBuddy](https://github.com/ethanchewy/PythonBuddy) - Online Python Editor with live syntax checking and execution.\n- [Redash](https://github.com/getredash/redash) - Designed to enable anyone, regardless of the level of technical sophistication, to harness the power of data big and small.\n- [SkyLines](https://github.com/skylines-project/skylines) - Live tracking, flight database, and competition framework.\n- [Security Monkey](https://github.com/Netflix/security_monkey) - Monitors AWS, GCP, OpenStack, and GitHub orgs for assets and their changes over time.\n- [SecureDrop](https://github.com/freedomofpress/securedrop) - Open-source whistleblower submission system that media organizations can use to securely accept documents from, and communicate with anonymous sources.\n- [SimpleLogin](https://github.com/simple-login/app) - Protect your online identity with email alias.\n- [sr.ht](https://git.sr.ht/~sircmpwn/core.sr.ht/tree) - Git hosting service (check out [Why I chose Flask to build sr.ht's mini-services](https://drewdevault.com/2019/01/30/Why-I-built-sr.ht-with-Flask.html) as well).\n- [Timesketch](https://github.com/google/timesketch) - Collaborative forensic timeline analysis.\n\n---\n\n<br>\n\n> **NOTE**: This project is powered by **[TestDriven.io](https://testdriven.io/)**. Please support this open source project by purchasing one of our Flask courses. Learn how to build, test, and deploy microservices powered by Docker, Flask, and React!\n"
}
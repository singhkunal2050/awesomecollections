{
  "repo_name": "dreikanter_ruby-bookmarks",
  "readme_content": "# Ruby Bookmarks [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\nThis is a curated collection of essential Ruby and Ruby on Rails resources. The project aims to maintain a well-structured reference equally useful both for beginners and advanced web developers.\n\n\u2605&nbsp;stands here for Editors' Choice.\n\nThis list is not intended to include any random resource related to Ruby programming (we already have a most complete gem catalogue at [ruby-toolbox.com](https://ruby-toolbox.com) and [Awesome Ruby](https://ruby.libhunt.com)), but only the best and most actual alternatives in each area. You will find here latest editions of the most important books, time and community tested gems (alive projects only!), and actively updated websites. *Sharing and pull requests are very much appreciated!*\n\n**[Fork and edit](https://github.com/dreikanter/ruby-bookmarks/edit/master/README.md)**\n\nPS: Check out [awesome-awesomeness](https://github.com/bayandin/awesome-awesomeness) for other community-driven bookmark collections.\n\n## Table of Contents\n\n- [Books](#books)\n  - [For beginners and intermediate level developers](#for-beginners-and-intermediate-level-developers)\n  - [Advancing Ruby knowledge](#advancing-ruby-knowledge)\n  - [Ruby on Rails for beginners](#ruby-on-rails-for-beginners)\n  - [Ruby on Rails, advanced level](#ruby-on-rails-advanced-level)\n  - [Testing](#testing)\n  - [Other frameworks and tools](#other-frameworks-and-tools)\n- [Blogs](#blogs)\n- [Screencasts and courses](#screencasts-and-courses)\n- [Other Learning Materials](#other-learning-materials)\n- [Style Guides](#style-guides)\n- [Podcasts](#podcasts)\n- [Tools](#tools)\n  - [IDEs and text editors](#ides-and-text-editors)\n  - [Code quality analysis](#code-quality-analysis)\n  - [Environment management](#environment-management)\n  - [Ruby distributions](#ruby-distributions)\n  - [Documentation](#documentation)\n  - [Application and Web Servers](#application-and-web-servers)\n  - [Deployment Automation and Configuration Management](#deployment-automation-and-configuration-management)\n  - [Other tools](#other-tools)\n- [Quizzes, tests, exams](#quizzes-tests-exams)\n- [Deployment](#deployment)\n- [Security](#security)\n- [Gems](#gems)\n  - [ActiveRecord](#activerecord)\n  - [API](#api)\n  - [Authentication](#authentication)\n  - [Authorization](#authorization)\n  - [Avatars](#avatars)\n  - [Background Jobs](#background-jobs)\n  - [Bootstrap](#bootstrap)\n  - [CLI](#cli)\n  - [CSS](#css)\n  - [Configuration and environment variables](#configuration-and-environment-variables)\n  - [Debugging](#debugging)\n  - [E-commerce](#e-commerce)\n  - [Graphics](#graphics)\n  - [HTML, XML](#html-xml)\n  - [Logging](#logging)\n  - [Mail](#mail)\n  - [Markdown](#markdown)\n  - [Message Queuing](#message-queuing)\n  - [Misc](#misc)\n  - [Multithreading](#multithreading)\n  - [Profiling and Performance](#profiling-and-performance)\n  - [Rack](#rack)\n  - [Rails](#rails)\n  - [Scheduling](#scheduling)\n  - [SDKs and API Wrappers](#sdks-and-api-wrappers)\n  - [Search](#search)\n  - [Security](#security)\n  - [Serialization](#serialization)\n  - [Syntax Highlighters](#syntax-highlighters)\n  - [Template engines](#template-engines)\n  - [Testing](#testing)\n  - [Web Frameworks](#web-frameworks)\n\n\n## Books\n\n### For beginners and intermediate level developers\n\n- \u2605 [Eloquent Ruby](http://www.amazon.com/Eloquent-Ruby-Addison-Wesley-Professional/dp/0321584104/) by *Russ Olsen*\n- [I Love Ruby](https://i-love-ruby.gitlab.io/) by Karthikeyan A. K.\n- [Programming Ruby](http://pragprog.com/book/ruby4/programming-ruby-1-9-2-0) by *Dave Thomas*, *Andy Hunt*, and *Chad Fowler*\n- [Learn Ruby The Hard Way](https://www.amazon.com/dp/032188499X) by *Zed A. Shaw* ([Official site](http://ruby.learncodethehardway.org/book/))\n- [The Ruby Programming Language](http://www.amazon.com/dp/0596516177) by *David Flanagan* and *Yukihiro \"Matz\" Matsumoto*\n- [Why's Poignant Guide to Ruby](http://mislav.uniqpath.com/poignant-guide/) by *Why the Lucky Stiff*\n\n### Advancing Ruby knowledge\n\n- \u2605 [Practical Object-Oriented Design in Ruby](http://poodr.com) by *Sandi Metz*\n- \u2605 [Ruby Under a Microscope: An Illustrated Guide to Ruby Internals](http://www.amazon.com/dp/1593275277/) by *Pat Shaughnessy* ([Official site](http://patshaughnessy.net/ruby-under-a-microscope))\n- \u2605 [Confident Ruby: 32 Patterns for Joyful Coding](http://www.amazon.com/dp/B00ETE0D2S/) by *Avdi Grimm* ([Official site](http://www.confidentruby.com/))\n- [Modern Front-End Development for Rails](https://pragprog.com/titles/nrclient2/modern-front-end-development-for-rails-second-edition/)\n- [Polished Ruby Programming](https://www.amazon.com/Polished-Ruby-Programming-maintainable-high-performance-ebook/dp/B093TH9P7C) by *Jeremy Evans*\n- [Exceptional Ruby: Master the Art of Handling Failure in Ruby](http://pragprog.com/book/ager/exceptional-ruby) by *Avdi Grimm*\n- [Metaprogramming Ruby: Program Like the Ruby Pros](http://www.amazon.com/dp/B00A376YAK/) by *Paolo Perrotta*\n- [The Well-Grounded Rubyist](http://www.amazon.com/The-Well-Grounded-Rubyist-David-Black/dp/1617291692/) by *David A. Black*\n- [Clean Ruby](http://clean-ruby.com/) by *Jim Gay*\n- [Reliably Deploying Rails Applications](https://leanpub.com/deploying_rails_applications) by *Ben Dixon*\n- [Rubyfu](http://rubyfu.net) - Collection of ideas, tricks and skills for hackers, an open source book.\n- [Demystifying Rails](https://launchschool.com/books/demystifying_rails/read/introduction) by *Launch School* \u2014 This book doesn't teach how to use Rails to build prototypes. Instead, this book dives one layer below the surface to expose how Rails is pieced together.\n- [The Ruby Bibliography](http://rubybib.org/) - Academic writing on the Ruby programming language.\n\n### Ruby on Rails for beginners\n\n- \u2605 [The Rails 5 Way](https://www.amazon.com/dp/B077D9X5NM/) by *Obie Fernandez*\n- [Agile Web Development with Rails 6](https://pragprog.com/book/rails6/agile-web-development-with-rails-6)\n- [The Ruby on Rails Tutorial](https://www.railstutorial.org/book) by *Michael Hartl*\n- [Learn Ruby on Rails](http://www.amazon.com/dp/B00QK2T1SY) by *Daniel Kehoe*\n\n### Ruby on Rails, advanced level\n\n- [Crafting Rails 4 Applications: Expert Practices for Everyday Rails Development](http://www.amazon.com/Crafting-Rails-Applications-Practices-Development/dp/1937785556/) by *Jos\u00e9 Valim*\n- [Rails AntiPatterns: Best Practice Ruby on Rails Refactoring](http://www.amazon.com/Rails-AntiPatterns-Refactoring-Addison-Wesley-Professional/dp/0321604814/) by *Chad Pytel*, *Tammer Saleh*\n- [Deploying Rails: Automate, Deploy, Scale, Maintain, and Sleep at Night](http://www.amazon.com/Deploying-Rails-Automate-Deploy-Maintain/dp/1934356956/) by *Tom Copeland*, *Anthony Burns*\n- [Multitenancy with Rails](http://leanpub.com/multi-tenancy-rails) by *Ryan Bigg*\n- [Ruby Science](https://gumroad.com/l/ruby-science) by *thoughtbot*\n- [Rebuilding Rails](https://rebuilding-rails.com/) by *Noah Gibbs*\n- [The Complete Guide to Rails Performance](https://www.railsspeed.com/) by *Nate Berkopec*\n\n### Testing\n\n- [The RSpec Book: Behaviour Driven Development with RSpec, Cucumber, and Friends](http://www.amazon.com/The-RSpec-Book-Behaviour-Development/dp/1934356379/) by *David Chelimsky*, *Dave Astels*, *Bryan Helmkamp*, *Dan North*, *Zach Dennis*, *Aslak Hellesoy*\n- [Rails 5 Test Prescriptions: Build a Healthy Codebase](https://pragprog.com/book/nrtest3/rails-5-test-prescriptions) by *Noel Rappin*\n- [Continuous Testing](http://pragprog.com/news/continuous-testing-with-ruby-rails-and-javascript-now-in-print) by *Ben Rady* and *Rod Coffin*\n- [Everyday Rails Testing with RSpec](https://leanpub.com/everydayrailsrspec) by *Aaron Sumner*\n- [What Do I Test?](https://whatdoitest.com/) by *Eric Steele*\n- [Testing Rails](http://testingrailsbook.com) by *thoughtbot*\n- [Rails Testing Handbook](https://semaphoreci.com/ebooks/rails-testing-handbook) by *Semaphore*\n\n### Other frameworks and tools\n\n- [RubyMotion](http://www.amazon.com/RubyMotion-Pragmatic-Programmers-Clay-Allsopp/dp/1937785289/) by *Clay Allsopp*\n- [Build Awesome Command-Line Applications in Ruby 2](http://pragprog.com/book/dccar2/build-awesome-command-line-applications-in-ruby-2) by *David Copeland*\n- [Sinatra Book](https://github.com/sinatra/sinatra-book/) \u2014 a cookbook full of excellent tutorials and recipes for developing Sinatra web applications.\n- [The Guide to Cuba](http://theguidetocuba.io) \u2014 this book will teach you how to create a Ruby web application from scratch using Cuba microframework.\n\n## Blogs\n\n- [Santi Metz](https://www.sandimetz.com/blog/) - Writes about flexible object-oriented code in Ruby and Rails, avid speaker.\n- [Yehuda Katz](http://yehudakatz.com)\n- [Justin Weiss](http://www.justinweiss.com/blog/archives/)\n- [RubyFlow](http://rubyflow.com)\n- [A Fresh Cup](http://afreshcup.com/) \u2014 links to new resources and insightful blog posts.\n- [RubyGuides](https://www.rubyguides.com) \u2014 Ruby tutorials & articles to help you become a better developer\nand author of [Practical Object-Oriented Design in Ruby](http://poodr.com).\n- [Hix on Rails](https://hixonrails.com/ruby-on-rails-tutorials/) - battle-tested step by step guides and how-tos on\nRuby on Rails configuration\n\n## Community Resources\n\n- [Rails Girls](http://guides.railsgirls.com/) \u2014 Rails tutorials for girls in a variety of languages.\n- [/r/ruby](http://reddit.com/r/ruby) \u2014 Ruby community on Reddit.\n- [/r/rails](http://reddit.com/r/rails) \u2014 Rails community on Reddit.\n- [StackOverflow](https://stackoverflow.com/questions/tagged/ruby) \u2014 Questions tagged with `ruby`.\n- [StackOverflow](https://stackoverflow.com/questions/tagged/ruby-on-rails) \u2014 Questions tagged with `ruby-on-rails`.\n- [Explore Ruby Libraries](https://kandi.openweaver.com/explore/ruby) \u2014 Discover & find a curated list of popular & new libraries, top authors, trending project kits, discussions, tutorials & learning resources on kandi.\n\n## Screencasts and courses\n\n- \u2605 [Pluralsight](https://www.pluralsight.com/search?q=ruby) Ruby Course Library.\n- \u2605 [RubyTapas](http://rubytapas.com) by Avdi Grimm.\n- \u2605 [GoRails](https://gorails.com) \u2014 a series of screencasts and guides for all aspects of Ruby on Rails. Learn how to setup your machine, build a Rails application, and deploy it to a server.\n- \u2605 [The Pragmatic Studio](http://pragmaticstudio.com)\n- \u2605 [Lynda.com](http://www.lynda.com/search?q=ruby)\n- \u2605 [Thoughtbot Upcase](https://thoughtbot.com/upcase/)\n- [Hanami Mastery](https://hanamimastery.com) - Articles & screencasts about awesome ruby projects.\n- [Ruby From Scratch](https://www.codemy.net/posts/rfs-introduction-to-ruby-001/sets/ruby-from-scratch)\n- [Rails Foundation](https://www.codemy.net/posts/rails-generating-an-app/sets/rails-foundation)\n- [Rails API](https://www.codemy.net/posts/rails-api-generating-an-api-only-rails-app-001/sets/rails-api)\n- [RubyPlus](https://rubyplus.com/episodes)\n- [Ruby screencasts at TutsPlus.com](http://code.tutsplus.com/categories/ruby/courses)\n- [Rails screencasts at TutsPlus.com](http://code.tutsplus.com/categories/rails/courses)\n- [RailsCasts](http://railscasts.com)\n- [Learn Rails the Zombie Way](http://railsforzombies.org)\n- [CodeAcademy](http://www.codecademy.com/tracks/ruby)\n- [confreaks.com](http://confreaks.com/) \u2014 expert recording services for conferences, seminars, and workshops.\n- [Learnable](https://learnable.com/topics/ruby) \u2014 video courses and books ($30 per month).\n- [Destroy All Software](https://www.destroyallsoftware.com/) \u2014 by Gary Bernhardt.\n- [RubySteps](https://www.rubysteps.com) - daily emails on Ruby, Rails, TDD, OOP, and Refactoring with code examples and challenges. Also mob programming events with guest developers and Pat Maddox. ($149 per month).\n- [UT on Rails](http://www.schneems.com/ut-rails/) - 10 weeks long Ruby on Rails\n  screencasts. It assumes you know little about programming and not used Ruby,\nRails or databases previously. Good for beginners.\n- [Drifting Ruby](https://www.driftingruby.com/)\n- [The Complete Ruby on Rails Developer Course](https://www.udemy.com/the-complete-ruby-on-rails-developer-course/) - A complete begginer friendly low price course on udemy with a lot of extra infos.\n\n## Other Learning Materials\n\n- [Ruby Videos](https://rubyvideo.dev) \u2013 index of all Ruby-related videos from conferences and meetups worldwide.\n- [TryRuby](http://tryruby.org) \u2014 online Ruby console and 15 minute interactive Ruby tutorial.\n- [Project Euler](http://projecteuler.net) \u2014 a huge amount of programming problems to learn any language.\n- [PuzzleNode](http://puzzlenode.com) \u2014 a site for coders who enjoy to work on challenging problems, and is inspired by similar efforts such as Project Euler and the Internet Problem Solving Contest.\n- [Ruby on Rails Guides](http://guides.rubyonrails.org) \u2014 These guides are designed to make you immediately productive with Rails, and to help you understand how all of the pieces fit together.\n- [Ruby Koans](http://rubykoans.com) \u2014 will walk you along the path to enlightenment in order to learn Ruby. The goal is to learn the Ruby language, syntax, structure, and some common functions and libraries. We also teach you culture. Testing is not just something we pay lip service to, but something we live. It is essential in your quest to learn and do great things in the language.\n- [RubyMonk](https://rubymonk.com) \u2014 free, interactive tutorials to help you discover Ruby idioms, in your browser!\n- [SitePoint](http://www.sitepoint.com/ruby/) \u2014 articles on Ruby programming.\n- [Better Specs](http://betterspecs.org) \u2014 RSpec best practices.\n- [Sourcegraph](https://sourcegraph.com) \u2014 search engine for code examples/ Here is a [demo video](https://www.youtube.com/watch?v=YYL0ZoPeB5w).\n- [Basic Algorithms written in Ruby](https://github.com/Djo/algorithms).\n- [Algorithms and Data Structures in Ruby](https://github.com/kumar91gopi/Algorithms-and-Data-Structures-in-Ruby)\n- [Jumpstart Lab](http://tutorials.jumpstartlab.com/) \u2014 a list of beginner and advanced-level Ruby, Rails, and Sinatra project tutorials.  Includes challenging independent projects as well.\n- [RubyOffRails](https://rubyoffrails.com/) \u2014 An online Ruby course recently open sourced.\n- [The Odin Project](http://www.theodinproject.com/ruby-programming) \u2014 an online Ruby lesson plan with a community to help.\n- [Ruby one-liners cookbook](https://learnbyexample.github.io/learn_ruby_oneliners/preface.html) \u2014 free guide for text processing with Ruby from the command line.\n- [Ruby Regexp](https://learnbyexample.github.io/Ruby_Regexp/preface.html) \u2014 free ebook to learn Ruby regular expressions, includes exercises.\n- [Kandi](https://kandi.openweaver.com/explore/ruby#Top-Authors) - Explore Ruby and all its libraries along with many projects.\n\n## Style Guides\n\n- [The Ruby Style Guide](https://github.com/bbatsov/ruby-style-guide)\n- [The Rails Style Guide](https://github.com/bbatsov/rails-style-guide)\n- [GitHub Ruby Coding Style](https://github.com/styleguide/ruby)\n- [Thoughtbot Style Guides](https://github.com/thoughtbot/guides) (Ruby, Rails, Git some other technologies)\n\nSee also:\n\n- [Semantic Versioning](http://semver.org)\n- [Keep a CHANGELOG](http://keepachangelog.com) \u2014 don\u2019t let your friends dump git logs into CHANGELOGs\u2122\n- [Code quality analysis tools](#code-quality-analysis).\n\n## Podcasts\n\n- [Code and the Coders Who Code it](https://podcast.drbragg.dev/)\n- [Remote Ruby](https://remoteruby.transistor.fm/)\n- [Ruby5](http://ruby5.envylabs.com)\n- [Ruby Rogues](http://rubyrogues.com)\n- [Ruby on Rails Podcast](http://5by5.tv/rubyonrails)\n- [Giant Robots Smashing into Other Giant Robots](http://podcasts.thoughtbot.com/giantrobots)\n\n## Tools\n\n### IDEs and text editors\n\n- StackOverflow: [What Ruby IDE do you prefer?](http://stackoverflow.com/questions/16991/what-ruby-ide-do-you-prefer)\n- \u2605 [Sublime Text](http://www.sublimetext.com) \u2014 one of the best text editors for coding. Take a look at [Sublime Bookmarks](https://github.com/dreikanter/sublime-bookmarks) \u2014 a comprehensive list of plugins and other related stuff.\n- [RubyMine](http://jetbrains.com/ruby/) \u2014 intelligent Ruby and Rails IDE.\n- [Atom](http://atom.io) \u2014 a brand-new hackable text editor from Github.\n- [Visual Studio Code](code.visualstudio.com) \u2014 Redefined code editor from Microsoft with [Ruby debugging support](https://marketplace.visualstudio.com/items?itemName=rebornix.Ruby).\n\n### Code quality analysis\n- [sonarlint-intellij](https://github.com/SonarSource/sonarlint-intellij) - An IDE extension that helps you detect and fix quality issues as you write code.\n- [RuboCop](https://github.com/bbatsov/rubocop) \u2014 a Ruby static code analyzer, based on the community Ruby style guide.\n- [Guard plugin for RuboCop](https://github.com/yujinakayama/guard-rubocop) \u2014 allows you to automatically check Ruby code style with RuboCop when files are modified.\n- [RubyCritic](https://github.com/whitesmith/rubycritic) \u2014 a gem that wraps around static analysis gems such as Reek, Flay and Flog to provide a quality report of your Ruby code.\n\n### Environment management\n\n- \u2605 [rbenv](https://github.com/sstephenson/rbenv) \u2014 a tool to pick a Ruby version for your application and guarantee that your development environment matches production. Put rbenv to work with Bundler for painless Ruby upgrades and bulletproof deployments.\n- [rbenv-vars](https://github.com/sstephenson/rbenv-vars) \u2014 an rbenv plugin that safely sets global and per-project environment variables.\n- [RVM](https://rvm.io) \u2014 a command-line tool which allows you to easily install, manage, and work with multiple ruby environments from interpreters to sets of gems.\n- [chruby](https://github.com/postmodern/chruby) \u2014 a tool that changes the current Ruby.\n\n### Ruby distributions\n\n- [RubyInstaller](http://rubyinstaller.org) \u2014 a self-contained Windows-based installer that includes the Ruby language, an execution environment, important documentation, and more.\n- [RubyStack](https://bitnami.com/stack/ruby) \u2014 a complete development environment for Ruby on Rails that can be deployed in one click. It includes the latest stable release of Ruby, RVM, Rails, Apache, NGinx, MySQL, SQLite, Git and Subversion, Memcache and Varnish, Sphinx, PHP and phpMyAdmin.\n\n### Documentation\n\n- [Dash](http://kapeli.com/dash) \u2014 an API Documentation Browser and Code Snippet Manager. Dash stores snippets of code and instantly searches offline documentation sets for 150+ APIs, including Ruby core libraries, and Ruby on Rails.\n- [Zeal](http://zealdocs.org) \u2013 Dash alternative for Linux & Windows.\n- [DevDocs](http://devdocs.io) \u2014 multiple API documentations in a fast, organized, and searchable interface (web).\n- [OmniRef](https://omniref.com) \u2014 comprehensive ruby documentation search (web).\n\n### Application and Web Servers\n\n- [Unicorn](http://unicorn.bogomips.org) \u2013 Rack HTTP server for fast clients and Unix.\n- [Phusion Passenger](https://phusionpassenger.com) \u2014 a fast and robust web server and application server for Ruby, Python and Node.js.\n- [Thin](http://code.macournoyer.com/thin/) \u2013 A very fast & simple Ruby web server.\n- [Puma](https://github.com/puma/puma) \u2014 a Ruby web server built for concurrency.\n- [Pow!](http://pow.cx) \u2014 a zero-config Rack server for Mac OS X.\n    - [Powder](https://github.com/Rodreegez/powder) \u2014 user-friendly CLI wrapper for Pow.\n    - [Powify](https://github.com/sethvargo/powify) \u2014 a management tool for Pow by 37 signals. It allows you to easily install, update, and manage pow and pow applications seamlessly.\n- [Prax](http://ysbaddaden.github.io/prax/) \u2014 a pure ruby alternative to Pow! that runs on GNU/Linux.\n- [TorqueBox](http://torquebox.org) \u2014 an application platform that supports popular technologies such as Ruby on Rails and Sinatra, while extending the footprint of Ruby applications to include built-in support for services such as messaging, scheduling, caching, and daemons. TorqueBox provides an all-in-one environment, built upon the latest JBoss AS Java application server and JRuby. Functionality such as clustering, load-balancing and high-availability is included right out-of-the-box.\n\nSee also:\n\n- [The Ruby Web Benchmark Report](http://www.madebymarket.com/blog/dev/ruby-web-benchmark-report.html) (July 2014) \u2014 \u201eI benchmarked every single version of Ruby available as of the beginning of this test \u2014 January 2014. On each version I benchmarked every Rack server and web framework combination I could find. I tested with both Apache Bench and wrk to see if there are flaws that one benchmarking tool picks up on that the other didn\u2019t. The goal of the benchmark is the fastest benchmark run, not the average.\u201c\n- [App Server Arena](https://blog.engineyard.com/2014/ruby-app-server-arena-pt1) \u2014 a comparison of popular ruby application servers.\n\n### Deployment Automation and Configuration Management\n\n- [Capistrano](https://github.com/capistrano/capistrano) \u2014 remote multi-server automation tool.\n- [Chef](https://github.com/opscode/chef) \u2014 a systems integration framework, built to bring the benefits of configuration management to your entire infrastructure.\n- \u2605 [Mina](https://github.com/mina-deploy/mina) \u2013 really fast deployer and server automation tool.\n- [Rails + Nginx + Unicorn Dockerfile](https://github.com/seapy/dockerfiles/tree/master/rails-nginx-unicorn) \u2014 easy useable docker for rails. less configuration, affordable production.\n\n### Other tools\n\n- [Pry](http://pryrepl.org) \u2014 a powerful alternative to the standard IRB shell for Ruby. It features syntax highlighting, a flexible plugin architecture, runtime invocation and source and documentation browsing.\n- [Reek](https://github.com/troessner/reek) \u2014 code smell detection for Ruby.\n- [Foreman](https://github.com/ddollar/foreman) \u2014 manage Procfile-based applications.\n- [Rubular](http://rubular.com) \u2014 a Ruby-based regular expression editor. It's a handy way to test regular expressions as you write them.\n- [httpie](https://github.com/jakubroztocil/httpie) \u2014 extremely handy  command line HTTP client, a user-friendly cURL replacement.\n- [ngrok](https://ngrok.com) \u2014 introspected tunnels to localhost. ngrok creates a tunnel from the public internet (http://subdomain.ngrok.com) to a port on your local machine. You can give this URL to anyone to allow them to try out a web site you're developing without doing any deployment.\n- [eye](https://github.com/kostya/eye) \u2014 a process monitor.\n- [god](https://github.com/mojombo/god) - the Ruby Framework for Process Management\n- [DuckRails](https://github.com/iridakos/duckrails) - development tool for mocking API endpoints quickly & dynamically.\n\n## Quizzes, tests, exams\n\n- [CodeQuizzes](https://www.codequizzes.com) \u2014 Learn programming by doing, not by reading.\n- [codewars.com](http://www.codewars.com) \u2014 Achieve mastery through challenge.\n- [21 Essential Ruby Interview Questions](https://www.toptal.com/ruby/interview-questions) at Toptal.\n\n## Deployment\n\n- [A guide to setting up a Ruby on Rails production environment](https://gorails.com/deploy/ubuntu/14.04) at DigitalOcean.\n- [How To Automate Ruby On Rails Application Deployments Using Capistrano](https://www.digitalocean.com/community/tutorials/how-to-automate-ruby-on-rails-application-deployments-using-capistrano)\n- [How to Use the DigitalOcean Dokku Application](https://www.digitalocean.com/community/tutorials/how-to-use-the-digitalocean-dokku-application)\n- [How To Use the Dokku One-Click DigitalOcean Image to Run a Ruby on Rails App](https://www.digitalocean.com/community/tutorials/how-to-use-the-dokku-one-click-digitalocean-image-to-run-a-ruby-on-rails-app)\n\n## Security\n\n- [OWASP Ruby on Rails Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Ruby_on_Rails_Cheat_Sheet.html)\n- [Ultimate Guide to Rack::Attack](https://wafris.org/guides/ultimate-guide-to-rack-attack)\n- [Awesome Ruby Security](https://github.com/pxlpnk/awesome-ruby-security)\n\n## Gems\n\n### ActiveRecord\n\n- [Annotate](https://github.com/ctran/annotate_models) \u2014 Add a comment summarizing the current schema to the top or bottom of each of your ActiveRecord models, fixtures, tests and specs, factory_girl factories, routes.rb file, etc.\n- [Paperclip](https://github.com/thoughtbot/paperclip) \u2014 easy file attachment management for ActiveRecord.\n- [Thinking Sphinx](https://github.com/pat/thinking-sphinx) \u2014 a library for connecting ActiveRecord to the Sphinx full-text search tool, and integrates closely with Rails (but also works with other Ruby web frameworks).\n- [Ancestry](https://github.com/stefankroes/ancestry) \u2014 organise ActiveRecord model into a tree structure.\n- [Squeel](https://github.com/activerecord-hackery/squeel) \u2014 lets you write your Active Record queries with fewer strings, and more Ruby, by making the Arel awesomeness that lies beneath Active Record more accessible.\n- [pp_sql](https://github.com/kvokka/pp_sql) - Rails ActiveRecord SQL queries log beautifier.\n\n### API\n\n- [RABL](https://github.com/nesquena/rabl) \u2014 a Rails and Padrino ruby templating system for generating JSON, XML, MessagePack, PList and BSON.\n- [Grape](https://github.com/intridea/grape) \u2014 an opinionated micro-framework for creating REST-like APIs in Ruby.\n- [Pliny](https://github.com/interagent/pliny) \u2013 write excellent APIs in Ruby.\n- [Committee](https://github.com/interagent/committee) - A collection of middleware to help build services with JSON Schema, OpenAPI 2, OpenAPI 3.\n- [Savon](https://github.com/savonrb/savon) - a micro-framework to handle all the soap(WSDL) requests.\n\n### Authentication\n\n- [Devise](https://github.com/plataformatec/devise) \u2014 flexible authentication solution for Rails with Warden.\n- [OmniAuth](https://github.com/intridea/omniauth) \u2014 a flexible authentication system utilizing Rack middleware.\n- [Authlogic](https://github.com/binarylogic/authlogic) \u2014 a clean, simple, and unobtrusive ruby authentication solution.\n- [sorcery](https://github.com/NoamB/sorcery) \u2014 magical Authentication for Rails 3 and 4, with OAuth support. Supports ActiveRecord, DataMapper, Mongoid and MongoMapper.\n\n### Authorization\n\n- [CanCanCan](https://github.com/CanCanCommunity/cancancan) \u2014 a continuation of the dead. [CanCan](https://github.com/ryanb/cancan) project. Our mission is to keep CanCan alive and moving forward, with maintenance fixes and new features.\n- [Pundit](https://github.com/elabs/pundit) \u2014 minimal authorization through OO design and pure Ruby classes.\n\n### Avatars\n\n- [avatarly](https://github.com/lucek/avatarly) \u2014 a simple gem for creating gmail-like user avatars based on user email or any other string passed.\n\n### Background Jobs\n\n- [Sidekiq](http://sidekiq.org) \u2014 a full-featured background processing framework for Ruby. It aims to be simple to integrate with any modern Rails application and much higher performance than other existing solutions.\n- [Backburner](https://github.com/nesquena/backburner) \u2014 a beanstalkd-powered job queue that can handle a very high volume of jobs.\n- [Delayed::Job](https://github.com/tobi/delayed_job) \u2014 database backed asynchronous priority queue.\n- [que](https://github.com/chanks/que) \u2014 a Ruby job queue that uses PostgreSQL's advisory locks for speed and reliability.\n- [Resque](https://github.com/resque/resque) \u2014 a Redis-backed Ruby library for creating background jobs, placing them on multiple queues, and processing them later.\n- [Sucker Punch](https://github.com/brandonhilkert/sucker_punch) \u2014 an asynchronous processing library using Celluloid, heavily influenced by Sidekiq and girl_friday.\n- [Ohm](https://github.com/soveran/ohm) \u2014 object-hash mapping for Redis.\n\n### Bootstrap\n\n- [bootstrap-sass](https://github.com/twbs/bootstrap-sass) \u2014 official SASS port of Twitter Bootstrap.\n- [twitter-bootstrap-rails](https://github.com/seyhunak/twitter-bootstrap-rails) \u2014 Twitter Bootstrap for Rails asset pipeline.\n\n### CLI\n\n- [colorize](https://github.com/fazibear/colorize) \u2014 String class extension. It add some methods to set color, background color and text effect on console easier using ANSI escape sequences.\n- [TTY](https://github.com/peter-murach/tty) \u2014 a toolbox for developing beautiful command line clients in Ruby.\n\n### CSS\n\n- [LESS](https://github.com/cowboyd/less.rb) \u2014 leaner CSS, in your browser or Ruby.\n- [Bourbon](http://bourbon.io) \u2014 a lightweight mixin library for Sass.\n- [SASS](https://github.com/sass/sass) \u2014 an extension of CSS3, adding nested rules, variables, mixins, selector inheritance, and more. It's translated to well-formatted, standard CSS using the command line tool or a web-framework plugin.\n- [Bitters](https://github.com/thoughtbot/bitters) \u2014 add a dash of pre-defined style to your Bourbon.\n- [Autoprefixer](https://github.com/ai/autoprefixer-rails) \u2014 a tool to parse CSS and add vendor prefixes to CSS rules using values from the Can I Use. This gem provides Ruby and Ruby on Rails integration with this JavaScript tool.\n\n### Configuration and environment variables\n\n- \u2605 [dotenv](https://github.com/bkeepers/dotenv) \u2014 loads environment variables from .env file into ENV in development.\n- [Chamber](https://github.com/thekompanee/chamber) \u2014 A surprisingly configurable convention-based approach to managing your application's custom configuration settings.\n- [Figaro](https://github.com/laserlemon/figaro) \u2014 simple, Heroku-friendly Rails app configuration using ENV and a single YAML file.\n\n### Debugging\n\n- [Pry](http://pryrepl.org) - A runtime developer console and IRB alternative with powerful introspection capabilities.\n- [Byebug](https://github.com/deivid-rodriguez/byebug) \u2014 a simple to use, feature rich debugger for Ruby 2. It uses the new TracePoint API for execution control and the new Debug Inspector API for call stack navigation, so it doesn't depend on internal core sources. It's developed as a C extension, so it's fast. And it has a full test suite so it's reliable.\n\n### E-commerce\n\n- [FastSpring](https://github.com/fastspring/fastspring-ruby) \u2014 subscription API for Rails.\n- [Active Merchant](https://github.com/Shopify/active_merchant) \u2014 a simple and unified API to access dozens of different payment gateways with very different internal APIs.\n- [PayPal](https://github.com/paypal/rest-api-sdk-ruby) \u2014 this SDK provides Ruby APIs to create, process and manage payment.\n- [Solidus](https://github.com/solidusio/solidus) \u2014 An open source ecommerce solution built with Ruby on Rails.\n\n### Graphics\n\n- [RMagick](https://github.com/rmagick/rmagick) \u2014 an interface to the ImageMagick and GraphicsMagick image processing libraries.\n- [MiniMagick](https://github.com/minimagick/minimagick) \u2014 a ruby wrapper for ImageMagick or GraphicsMagick command line.\n- [psd.rb](https://github.com/layervault/psd.rb) Parse Photoshop files in Ruby with ease.\n\n### HTML, XML\n\n- [Nokogiri](http://nokogiri.org) \u2014 an HTML, XML, SAX, and Reader parser. Among Nokogiri\u2019s many features is the ability to search documents via XPath or CSS3 selectors.\n\n### Logging\n\n- [Yell](https://github.com/rudionrails/yell) \u2014 Your Extensible Logging Library, a comprehensive logging replacement for Ruby.\n- [Fluentd](https://github.com/fluent/fluentd) \u2014 an open source data collector designed for processing data streams, which instantly enables you to have Log Management, Big Data Analytics, etc.\n- [mongodb_logger](https://github.com/le0pard/mongodb_logger) \u2014 an alternative logger for Rails or Rack based app, which log all requests of you application into MongoDB database (allow to store and search any information from logs; web panel allow filter logs, build graphs using MapReduce by information from logs).\n- [Hatchet](https://github.com/gshutler/hatchet) \u2014 logging library that provides the ability to add class/module specific filters.\n- [logstasher](https://github.com/shadabahmed/logstasher) Awesome rails logs\n- [Rails Pretty logger](https://github.com/kekik/rails-pretty-logger/) Check and search logs from dashboard, use hightlight to spot easily, add hourly rotation if needed.\n\n### Mail\n\n- [Pony](https://github.com/benprew/pony) \u2014 the express way to send email in Ruby.\n- [Mailgun-Ruby](https://github.com/mailgun/mailgun-ruby) \u2014 Mailgun's Official Ruby Library.\n- [AWS::SES](https://github.com/drewblas/aws-ses) \u2014 easy ruby DSL & interface to [Amazon SES](http://aws.amazon.com/ses/). See also the [official Ruby SDK](http://aws.amazon.com/sdkforruby/).\n- [Mail](https://github.com/mikel/mail) \u2014 a library that is designed to handle emails generation, parsing and sending in a simple, rubyesque manner.\n\n### Markdown\n\n- [kramdown](https://github.com/gettalong/kramdown) \u2014 yet-another-markdown-parser but fast, pure Ruby, using a strict syntax definition and supporting several common extensions, http://kramdown.gettalong.org\n- [redcarpet](https://github.com/vmg/redcarpet) \u2014 a fast, safe and extensible Markdown to (X)HTML parser.\n- [maruku](https://github.com/bhollis/maruku) \u2014 a pure-Ruby Markdown-superset interpreter.\n- [markup](https://github.com/github/markup) \u2014 the code GitHub uses to render `README.your_favorite_markup`.\n\nSee also:\n\n- StackOverflow: [Better ruby markdown interpreter?](http://stackoverflow.com/questions/373002/better-ruby-markdown-interpreter)\n\n### Message Queuing\n\n- [AMQP](https://github.com/ruby-amqp/amqp) \u2014 EventMachine-based RabbitMQ client.\n- \u2605 [Bunny](http://rubybunny.info) \u2014 RabbitMQ Ruby client based on AMQP gem.\n- [rbzmq](https://github.com/zeromq/rbzmq) \u2014 Ruby binding for ZeroMQ.\n- \u2605 [ffi-rzmq](https://github.com/chuckremes/ffi-rzmq) \u2014 FFI bindings for ZeroMQ so the library can be used under JRuby and other FFI-compliant ruby runtimes.\n\n### Misc\n\nIf there is a nice gem, but it is difficult to classify it with existing bookmarks groups, or it is still one of his kind, put it here.\n\n- [Prawn](https://github.com/prawnpdf/prawn) \u2014 fast, nimble PDF generation.\n- [Dalli](https://github.com/mperham/dalli) \u2014 high performance Memcached client for Ruby.\n- [EventMachine](https://github.com/eventmachine/eventmachine) \u2014 fast, simple event-processing library.\n- [rpush](https://github.com/rpush/rpush) \u2014 push notification service, supporting Apple Push Notification Service, Google Cloud Messaging, Amazon Device Messaging, Windows Phone Push Notification Service.\n- [Rubyzip](https://github.com/rubyzip/rubyzip) \u2014 reading and writing zip files.\n- [JsonCompare](https://github.com/a2design-company/json-compare) \u2014 returns the difference between two JSON files.\n- [MicroMachine](https://github.com/soveran/micromachine) \u2014 minimal Finite State Machine.\n- [Dante](https://github.com/nesquena/dante) \u2014 turn any ruby code into a daemon.\n- [Memoist](https://github.com/matthewrudy/memoist) \u2014 an extraction of ActiveSupport::Memoizable with few extensions.\n- [Awesome Print](https://github.com/michaeldv/awesome_print) \u2014 a Ruby library that pretty prints Ruby objects in full color exposing their internal structure with proper indentation. Rails ActiveRecord objects and usage within Rails templates are supported via included mixins.\n- [twig](https://github.com/rondevera/twig) Your personal Git branch assistant\n- [datashift](https://github.com/autotelik/datashift) Comprehensive Excel and CSV import/export tools for Ruby\n- [Configurations](https://github.com/beatrichartz/configurations) \u2014 provides a unified approach to do configurations for gems or other ruby code.\n- [awesome_print](https://github.com/awesome-print/awesome_print) \u2014 a Ruby library that pretty prints Ruby objects in full color exposing their internal structure with proper indentation. Rails ActiveRecord objects and usage within Rails templates are supported via included mixins.\n- [YYMMDD](https://github.com/sshaw/yymmdd) \u2014 tiny DSL for idiomatic date parsing and formatting.\n- [Libnotify](https://github.com/splattael/libnotify) \u2014 Ruby bindings for libnotify, a crossplatform user notification library.\n- [MemFs](https://github.com/simonc/memfs) \u2014 provides a fake file system that can be used for tests.\n- [Github-Changelog-Generator](https://github.com/skywinder/Github-Changelog-Generator) \u2014 automatically generate change log from your tags, issues, labels and pull requests.\n- [wannabe_bool](https://github.com/prodis/wannabe_bool) \u2014 If string, numeric, symbol and nil values wanna be a boolean value, they can with the new #to_b method (and more).\n- [response_code](https://github.com/torokmark/response_code) Response Code in readable way.\n\n### Multithreading\n\n- [thread](https://github.com/meh/ruby-thread) \u2014 extensions to the thread library (includes thread pool).\n- [Sprawling](https://github.com/dreikanter/ruby-bookmarks) \u2014 spawn gem for Rails to easily fork or thread long-running code blocks.\n- [Parallel](https://github.com/grosser/parallel) \u2014 Run any code in parallel Processes(&gt; use all CPUs) or Threads(&gt; speedup blocking operations).\nBest suited for map-reduce or e.g. parallel downloads/uploads.\n\n### Profiling and Performance\n\n- [ruby-prof](https://github.com/ruby-prof/ruby-prof) \u2014 a code profiler for MRI rubies.\n- [Timecop](https://github.com/travisjeffery/timecop) \u2014 a gem providing \"time travel\", \"time freezing\", and \"time acceleration\" capabilities, making it simple to test time-dependent code. It provides a unified method to mock Time.now, Date.today, and DateTime.now in a single call.\n- [timecop-console](https://github.com/ferndopolis/timecop-console) \u2014 expose Timecop's capabilities to the UI in your rails app, allowing QA to take advantage of it.\n- [stackprof](https://github.com/tmm1/stackprof) \u2014 a sampling call-stack profiler for ruby 2.1+.\n- [stackprof-webnav](https://github.com/alisnic/stackprof-webnav) \u2014 web UI for viewing stackprof dumps.\n- [rblineprof](https://github.com/tmm1/rblineprof) \u2014 line-profiler.\n- [Peek](https://github.com/peek/peek) \u2014 status bar showing performance info for Rails apps.\n- [Peek::Rblineprof](https://github.com/peek/peek-rblineprof) \u2014 peek into how much each line of your Rails application takes throughout a request.\n- [Bullet](https://github.com/flyerhzm/bullet) \u2014 a gem to help to increase application's performance by reducing the number of queries it makes. It will watch your queries while you develop your application and notify you when you should add eager loading (N+1 queries), when you're using eager loading that isn't necessary and when you should use counter cache.\n- [rack-mini-profiler](https://github.com/MiniProfiler/rack-mini-profiler) \u2014 middleware that displays speed badge for every html page. Designed to work both in production and in development.\n- [Instrumental](https://github.com/Instrumental/instrumental_agent-ruby) \u2014 Real-time performance monitoring with a non-blocking and non-exception causing agent.\n\n### Rack\n\n- [Rack::Timeout](https://github.com/heroku/rack-timeout) \u2014 abort requests that are taking too long.\n- [Rack::Protection](http://rkh.github.io/rack-protection/) \u2014 protects against typical web attacks. Should work for all Rack apps, including Rails.\n- [Rack::LiveReload](https://github.com/johnbintz/rack-livereload) \u2014 Bring in `livereload.js` into handy Rack middleware. No need for browser extensions anymore! Just plug it in your middleware stack and go! Even supports browsers without WebSockets!\n- [rack-mini-profiler](https://github.com/MiniProfiler/rack-mini-profiler) \u2014 middleware that displays speed badge for every html page. Designed to work both in production and in development.\n- [Coverband](https://github.com/danmayer/coverband) \u2014 Rack middleware to help measure production code coverage.\n\n### Rails\n\n- [Simple Form](https://github.com/plataformatec/simple_form) \u2014 forms made easy for Rails! It's tied to a simple DSL, with no opinion on markup.\n- [ResqueMailer](https://github.com/zapnap/resque_mailer) \u2014 Rails plugin for sending asynchronous email with ActionMailer and Resque.\n- [Jammit](http://documentcloud.github.io/jammit/) \u2014 an industrial strength asset packaging library for Rails, providing both the CSS and JavaScript concatenation and compression that you'd expect, as well as YUI Compressor, Closure Compiler, and UglifyJS compatibility, ahead-of-time gzipping, built-in JavaScript template support, and optional Data-URI / MHTML image and font embedding.\n- [CarrierWave](https://github.com/carrierwaveuploader/carrierwave) \u2014 classier solution for file uploads for Rails, Sinatra and other Ruby web frameworks.\n- [Kaminari](https://github.com/amatsuda/kaminari) \u2014 clean, powerful, customizable and sophisticated paginator for modern web app frameworks and ORMs.\n- [suspenders](https://github.com/thoughtbot/suspenders) \u2014 a Rails template with [Thoughtbot](http://thoughtbot.com) standard defaults, ready to deploy to Heroku.\n- [High Voltage](https://github.com/thoughtbot/high_voltage) \u2014 easily include static pages in your Rails app.\n- [Squasher](https://github.com/jalkoby/squasher) \u2014 compresses old migrations in a Rails application. If you work on a big project with lots of migrations, every rake db:migrate might take a few seconds, or creating of a new database might take a few minutes. That's because Rails loads all those migration files. Squasher removes all the migrations and creates a single migration with the final database state of the specified date (a new migration will look like a schema).\n- [Metamagic](https://github.com/lassebunk/metamagic) \u2014 a simple Ruby on Rails plugin for creating meta tags. It supports regular meta tags, OpenGraph (Facebook), Twitter Cards, and custom tags.\n- [Better Errors](https://github.com/charliesome/better_errors) \u2014 replaces the standard Rails error page with a much better and more useful error page. It is also usable outside of Rails in any Rack app as Rack middleware.\n- [Quiet Assets](https://github.com/evrone/quiet_assets) \u2014 turns off the Rails asset pipeline log.\n- [RailsAdmin](https://github.com/sferik/rails_admin) \u2014 a Rails engine that provides an easy-to-use interface for managing your data.\n- [paper_trail](https://github.com/airblade/paper_trail) \u2014 track changes to your models' data. Good for auditing or versioning.\n- [font-awesome-rails](https://github.com/bokmann/font-awesome-rails) \u2014 the [Font Awesome](http://fortawesome.github.io/Font-Awesome/) font bundled as an asset for the rails asset pipeline.\n- [gemoji](https://github.com/github/gemoji) \u2014 emoji images and names.\n- [rails_emoji](https://github.com/jsw0528/rails_emoji) \u2014 one more emoji gem for Ruby on Rails.\n- [Royce](https://github.com/MartinJNash/Royce) \u2014 a Ruby on Rails roles solution.\n- [YamlDb](https://github.com/ludicast/yaml_db) \u2014 a database-independent format for dumping and restoring data. It complements the the database-independent schema format found in db/schema.rb. The data is saved into db/data.yml.\n- [formtastic](https://github.com/justinfrench/formtastic) \u2014 a Rails form builder plugin with semantically rich and accessible markup.\n- [rails_param](https://github.com/nicolasblanco/rails_param) \u2014 parameter Validation & Type Coercion.\n- [RailsFriendlyURLs](https://github.com/calonso/rails_friendly_urls) - Rails gem to configure absolutely any url within your project into a SEO-Friendly one.\n\nValidation:\n\n- [email_validator](https://github.com/balexand/email_validator) \u2014 an email validator for Rails 3 and 4.\n- [validates_email_format_of](https://github.com/validates-email-format-of/validates_email_format_of) \u2014 validate e-mail addresses against RFC 2822 and RFC 3696 with this Ruby on Rails plugin and gem.\n\n### Scheduling\n\n(info collected from [Stack Overflow](http://stackoverflow.com/questions/24745809/massive-scheduling-in-ruby))\n\n- \u2605 [rufus-scheduler](https://github.com/jmettraux/rufus-scheduler) \u2014 an in-process, in-memory scheduler with no persistence, accepting at, in, cron and every jobs.\n- [sidekiq-cron](https://github.com/ondrejbartas/sidekiq-cron) \u2014 scheduler based on rufus-scheduler and [Sidekiq](http://sidekiq.org) ([Redis](http://redis.io) based message queue) for persistence. Inherits web UI from Sidekiq.\n- [sidekiq-scheduler](https://github.com/Moove-it/sidekiq-scheduler) \u2014 one more job scheduler based on rufus-scheduler and Sidekiq.\n- [resque-scheduler](https://github.com/resque/resque-scheduler) \u2014 rufus-scheduler + Resque.\n- [Clockwork](https://github.com/tomykaira/clockwork) \u2014 a cron replacement. It runs as a lightweight, long-running Ruby process which sits alongside your web processes (Mongrel/Thin) and your worker processes (DJ/Resque/Minion/Stalker) to schedule recurring work at particular times or dates. Here is a [blog post](http://adam.herokuapp.com/past/2010/4/13/rethinking_cron/) with more details.\n- [Whenever](https://github.com/javan/whenever) \u2014 a Ruby wrapper for crond, with a clear syntax (each job is a separate process).\n\n### SDKs and API Wrappers\n\n- [AWS SDK](http://aws.amazon.com/sdkforruby/) \u2014 Amazon Web Services API for Ruby.\n- [Dropbox Core API](https://www.dropbox.com/developers/core/start/ruby) for Ruby.\n- [Fog](https://fog.io) \u2014 cloud services library, top to bottom: collections provide a simplified interface, making clouds easier to work with and switch between; requests allow power users to get the most out of the features of each individual cloud; mocks make testing and integrating a breeze.\n- [Yt](https://github.com/Fullscreen/yt) \u2014 YouTube API Ruby client.\n- [Square SDK](https://github.com/square/square-ruby-sdk) - The Ruby SDK for Square APIs.\n\n### Search\n\n- [Ransack](https://github.com/activerecord-hackery/ransack) \u2014 enables the creation of both simple and advanced search forms against your application's models.\n\n### Security\n\n- [Brakeman](https://github.com/presidentbeef/brakeman) \u2014 a static analysis security vulnerability scanner for Ruby on Rails applications.\n- [Rack::Attack](https://github.com/rack/rack-attack) \u2013 Rack middleware for blocking & throttling.\n- [bundler-audit](https://github.com/rubysec/bundler-audit) \u2013 Patch-level verification for Bundler.\n- [Codesake::Dawn](https://github.com/codesake/codesake-dawn) - Codesake::Dawn is a security source code scanner for ruby powered code. It is especially designed for web applications, but it works also with general purpose ruby scripts. Codesake::Dawn supports all major MVC frameworks like ruby on rails, Padrino and Sinatra; it provides more than 170 security checks with their own mitigation suggestion.\n\n### Serialization\n\nText:\n\n- [JSON](https://github.com/flori/json) \u2014 includes pure Ruby and C implementation for JSON.\n- [JSON::Stream](https://github.com/dgraham/json-stream) \u2014 a streaming JSON parser that generates SAX-like events.\n- [YAJL](https://github.com/brianmario/yajl-ruby) \u2014 a streaming JSON parsing and encoding library for Ruby (C bindings to YAJL).\n- [OJ](https://github.com/ohler55/oj) \u2014 Optimized JSON, as the name implies, was written to provide speed optimized JSON handling. So far it has achieved that, and is about 2 times faster than any other Ruby JSON parser, and 3 or more times faster at serializing JSON.\n- [TOML](https://github.com/jm/toml) \u2014 a sane configuration format [from @mojombo](https://github.com/toml-lang/toml).\n\nBinary:\n\n- [BSON](https://github.com/mongodb/bson-ruby) \u2014 Ruby implementation of the BSON Specification (2.0.0+), http://bsonspec.org\n- [MessagePack](https://github.com/msgpack/msgpack-ruby) \u2014 an efficient binary serialization format. It lets you exchange data among multiple languages like JSON but it's faster and smaller. For example, small integers (like flags or error code) are encoded into a single byte, and typical short strings only require an extra byte in addition to the strings themselves. See http://msgpack.org\n- [Protobuf](https://github.com/localshred/protobuf) \u2014 Ruby implementation for Protocol Buffers.\n\n### Syntax Highlighters\n\n- [Rouge](https://github.com/jneen/rouge) \u2014 a pure-ruby code highlighter that is compatible with pygments.\n- [pygments.rb](https://github.com/tmm1/pygments.rb) \u2014 a Ruby wrapper for the Python [pygments](http://pygments.org) syntax highlighter.\n\n### Template engines\n\n- [Mustache](https://github.com/defunkt/mustache) \u2014 logic-less Ruby templates. A framework-agnostic way to render logic-free views.\n- [HAML](http://haml.info/) \u2014 a very compact markup language, that accelerates and simplifies template creation down to veritable haiku.\n- [Slim](https://github.com/slim-template/slim) \u2013 a templating language that reduce the syntax to the essential parts without becoming cryptic.\n- [Tilt](https://github.com/rtomayko/tilt) \u2014 generic interface to multiple Ruby template engines.\n\n### Testing\n\n- [RSpec](https://github.com/rspec/rspec) \u2014 RSpec meta-gem that depends on the other components.\n- [rspec-rails](https://github.com/rspec/rspec-rails) \u2014 Rails integration for RSpec.\n- [RSpec::Expectations](https://github.com/rspec/rspec-expectations) \u2014 a simple, readable API to express expected outcomes of a code example.\n- [Cucumber](https://github.com/cucumber/cucumber) \u2014 a tool for running automated tests written in plain language.\n- [shoulda](https://github.com/thoughtbot/shoulda)\n- [factory_bot](https://github.com/thoughtbot/factory_bot) \u2014 a fixtures replacement with a straightforward definition syntax, support for multiple build strategies (saved instances, unsaved instances, attribute hashes, and stubbed objects), and support for multiple factories for the same class, including factory inheritance.\n- [factory_bot_rails](https://github.com/thoughtbot/factory_bot_rails) \u2014 Rails integration for `factory_bot`.\n- [Capybara](https://github.com/jnicklas/capybara) \u2014 a tool helping you test web applications by simulating how a real user would interact with your app. It is agnostic about the driver running your tests and comes with Rack::Test and Selenium support built in. WebKit is supported through an external gem.\n- [capybara-webkit](https://github.com/thoughtbot/capybara-webkit) A Capybara driver for headless WebKit so you can test JavaScript web apps.\n- [Formulaic](https://github.com/thoughtbot/formulaic) \u2014 simplify form filling with Capybara.\n- [Mocha](https://github.com/freerange/mocha) \u2014 a Ruby library for mocking and stubbing.\n- [Spring](https://github.com/rails/spring) \u2014 Rails application preloader to speeds up development by keeping your application running in the background so you don't need to boot it every time you run a test, rake task or migration.\n- [Faker](https://github.com/stympy/faker) \u2014 a library for generating fake data such as names, addresses, and phone numbers.\n\n### Web Frameworks\n\n- [Ruby on Rails](http://rubyonrails.org) \u2014 an open source full-stack framework web application framework.\n- [Sinatra](http://sinatrarb.com) \u2014 a DSL for quickly creating web applications in Ruby with minimal effort.\n- [Padrino](http://padrinorb.com) \u2014 a Ruby framework built upon the Sinatra web library, created to make it fun and easy to code more advanced web applications while still adhering to the spirit that makes Sinatra great!\n- \u2605 [Cuba](https://github.com/soveran/cuba) \u2014 a microframework for web development originally inspired by [Rum](https://github.com/chneukirchen/rum), a tiny but powerful mapper for Rack applications. It integrates many templates via Tilt, and testing via Cutest and Capybara.\n- [Hanami](https://github.com/hanami/hanami) \u2014 a complete, modern web framework.\n- [Roda](http://roda.jeremyevans.net) \u2014 a new ruby web framework, allowing for fast and DRY code using a routing tree. Find out [why you should use it](http://roda.jeremyevans.net/why.html).\n\nSee also:\n\n- [Benchmark results](http://www.madebymarket.com/blog/dev/ruby-web-benchmark-report.html) for different Ruby, web framework and app server combinations (actual on July 2014).\n"
}
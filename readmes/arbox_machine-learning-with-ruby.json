{
  "repo_name": "arbox_machine-learning-with-ruby",
  "readme_content": "<img title=\"Awesome Machine Learning with Ruby\" alt=\"Awesome Machine Learning with Ruby\" src=\"header.png\" align=\"center\">\n\n[![Awesome](https://awesome.re/badge-flat.svg)](https://github.com/sindresorhus/awesome#readme) [![Support Me](https://img.shields.io/badge/%F0%9F%92%97-Support%20Me-blue.svg?style=flat-square)](https://www.patreon.com/arbox)\n\n[[RubyNLP](https://github.com/arbox/nlp-with-ruby) |\n [RubyDataScience](https://github.com/arbox/data-science-with-ruby) |\n [RubyInterop](https://github.com/arbox/ruby-interoperability)]\n\n# Awesome Machine Learning with Ruby [<img src=\"ruby.jpg\" align=\"left\" width=\"30px\" height=\"30px\" />][ruby]\n\n> Curated List of Ruby Machine Learning Links and Resources\n\n[Machine Learning][ml] is a field of [Computational Science][cs] -\noften nested under [AI][ai] research - with many practical\napplications due to the ability of resulting algorithms to\nsystematically implement a specific solution without explicit\nprogrammer's instructions. Obviously many algorithms need a definition\nof [features][fe] to look at or a biggish [training set][ts] of data to derive the\nsolution from.\n\nThis curated list comprises [_awesome_][awesome] libraries,\ndata sources, tutorials and presentations about [Machine Learning][ml]\nutilizing the [Ruby][ruby] programming language.\n\nA lot of useful resources on this list come from the development by\n[The Ruby Science Foundation][sciruby], our [contributors][contributors] and\nour own day to day work on various ML applications.\n\n:sparkles: Every [contribution](contributing.md) is welcome! Add links through pull\nrequests or create an issue to start a discussion.\n\nFollow us on [Twitter](https://twitter.com/NonWebRuby) and please spread\nthe word using the `#RubyML` hash tag!\n\n<!-- nodoc -->\n## Contents\n\n<!-- toc -->\n\n- [:sparkles: Tutorials](#sparkles-tutorials)\n- [Machine Learning Libraries](#machine-learning-libraries)\n  * [Frameworks](#frameworks)\n  * [Neural networks](#neural-networks)\n  * [Deep Learning](#deep-learning)\n  * [Kernel methods](#kernel-methods)\n  * [Evolutionary algorithms](#evolutionary-algorithms)\n  * [Bayesian methods](#bayesian-methods)\n  * [Decision trees](#decision-trees)\n  * [Clustering](#clustering)\n  * [Linear classifiers](#linear-classifiers)\n  * [Statistical models](#statistical-models)\n  * [Gradient boosting](#gradient-boosting)\n  * [Vector search](#vector-search)\n- [Applications of machine learning](#applications-of-machine-learning)\n- [Data structures](#data-structures)\n- [Data visualization](#data-visualization)\n- [Articles, Posts, Talks, and Presentations](#articles-posts-talks-and-presentations)\n- [Projects and Code Examples](#projects-and-code-examples)\n- [Heroku buildpacks](#heroku-buildpacks)\n- [Books, Blogs, Channels](#books-blogs-channels)\n- [Community](#community)\n- [Related Resources](#related-resources)\n- [License](#license)\n\n<!-- tocstop -->\n\n<!-- doc -->\n\n## :sparkles: Tutorials\n\nPlease help us to fill out this section! :smiley:\n- [Ruby neural networks](https://www.honeybadger.io/blog/ruby-neural-networks/)\n- [How to implement linear regression in Ruby](https://www.practicalai.io/implementing-linear-regression-using-ruby/)\n  <sup>[[code](https://github.com/daugaard/example-linear-regression)]</sup>\n- [How to implement classification using logistic regression in Ruby](https://www.practicalai.io/implementing-classification-using-logistic-regression-in-ruby/)\n- [How to implement simple binary classification using a Neural Network in Ruby](https://www.practicalai.io/implementing-simple-classification-using-neural-network-in-ruby/)\n  <sup>[[code](https://github.com/daugaard/example-neural-network)]</sup>\n- [How to implement classification using a SVM in Ruby](https://www.practicalai.io/implementing-classification-using-a-svm-in-ruby/)\n  <sup>[[code](https://github.com/daugaard/example-svm)]</sup>\n- [Unsupervised learning using k-means clustering in Ruby](https://www.practicalai.io/unsupervised-learning-using-k-means-clustering-in-ruby/)\n  <sup>[[code](https://github.com/daugaard/example-kmeans-clustering)]</sup>\n- [Teaching an AI to play a simple game using Q-Learning in Ruby](https://www.practicalai.io/teaching-ai-play-simple-game-using-q-learning/)\n  <sup>[[code](https://github.com/daugaard/q-learning-simple-game)]</sup>\n- [Teaching a Neural Network to play a game using Q-Learning in Ruby](https://www.practicalai.io/teaching-a-neural-network-to-play-a-game-with-q-learning/)\n  <sup>[[code](https://github.com/daugaard/q-learning-simple-game/tree/neuralnetwork)]</sup>\n- [Using the Python scikit-learn machine learning library in Ruby using PyCall](https://www.practicalai.io/using-scikit-learn-machine-learning-library-in-ruby-using-pycall/)\n  <sup>[[code](https://github.com/daugaard/scikit-learn-from-ruby)]</sup>\n- [How to _evolve_ neural networks in Ruby using the Machine Learning Workbench](https://github.com/giuse/machine_learning_workbench/blob/master/examples/neuroevolution.rb)\n\n## Machine Learning Libraries\n\n[Machine Learning][ml] algorithms in pure Ruby or written in other\nprogramming languages with appropriate bindings for Ruby.\n\n### Frameworks\n\n- [LangChain.rb](https://github.com/andreibondarev/langchainrb) -\n  Build ML/AI-supercharged applications with Ruby's LangChain.\n- [weka](https://github.com/paulgoetze/weka-jruby) -\n  JRuby bindings for Weka, different ML algorithms implemented through Weka.\n- [ai4r](https://github.com/SergioFierens/ai4r) -\n  Artificial Intelligence for Ruby.\n- [classifier-reborn](https://github.com/jekyll/classifier-reborn) -\n  General classifier module to allow Bayesian and other types of classifications.\n  <sup>[[dep: GLS](#gls)]</sup>\n- [scoruby](https://github.com/asafschers/scoruby) -\n  Ruby scoring API for [PMML](http://dmg.org/pmml/v4-3/GeneralStructure.html) (Predictive Model Markup Language).\n- [rblearn](https://github.com/himkt/rblearn) - Feature Extraction and Crossvalidation library.\n- [data_modeler](https://github.com/giuse/data_modeler) -\n  Model your data with machine learning. Ample test coverage, examples to start fast, complete documentation. Production ready since 1.0.0.\n- [shogun](https://github.com/shogun-toolbox/shogun) - Polyfunctional and mature\n  machine learning toolbox with [Ruby bindings](https://github.com/shogun-toolbox/shogun/tree/develop/src/interfaces/ruby).\n- [aws-sdk-machinelearning](https://github.com/aws/aws-sdk-ruby) -\n  Machine Learning API of the Amazon Web Services.\n- [azure_mgmt_machine_learning](https://github.com/Azure/azure-sdk-for-ruby) -\n  Machine Learning API of the Microsoft Azure.\n- [machine_learning_workbench](https://github.com/giuse/machine_learning_workbench) -\n  Growing machine learning framework written in pure Ruby, high performance computing using\n  [Numo](https://github.com/ruby-numo/), CUDA bindings through [Cumo](https://github.com/sonots/cumo).\n  Currently implementating neural networks, evolutionary strategies, vector quantization, and plenty of\n  examples and utilities.\n- [Deep NeuroEvolution](https://github.com/giuse/DNE) -\n  Experimental setup based on the [machine_learning_workbench](https://github.com/giuse/machine_learning_workbench)\n  towards searching for deep neural networks (rather than training) using evolutionary algorithms. Applications to the\n  [OpenAI Gym](https://github.com/openai/gym) using [PyCall](https://github.com/mrkn/pycall.rb).\n- [rumale](https://github.com/yoshoku/rumale) -\n  Machine Learninig toolkit in Ruby with wide range of implemented algorithms\n  (SVM, Logistic Regression, Linear Regression, Random Forest etc.) and\n  interfaces similar to [Scikit-Learn][scikit] in Python.\n- [eps](https://github.com/ankane/eps) - Bayesian Classification and Linear Regression with exports\n  using [PMML](http://dmg.org/pmml/v4-3/GeneralStructure.html) and an alternative backend using [GSL][gsl].\n- [ruby-openai](https://github.com/alexrudall/ruby-openai) - OpenAI API wrapper\n\n### Neural networks\n\n- [neural-net-ruby](https://github.com/gbuesing/neural-net-ruby) -\n  Neural network written in Ruby.\n- [ruby-fann](https://github.com/tangledpath/ruby-fann) -\n  Ruby bindings to the [Fast Artificial Neural Network Library (FANN)](http://leenissen.dk/fann/wp/).\n- [cerebrum](https://github.com/irfansharif/cerebrum) -\n  Experimental implementation for Artificial Neural Networks in Ruby.\n- [tlearn-rb](https://github.com/josephwilk/tlearn-rb) -\n  Recurrent Neural Network library for Ruby.\n- [brains](https://github.com/jedld/brains-jruby) -\n  Feed-forward neural networks for JRuby based on\n  [brains](https://github.com/jedld/brains).\n- [machine_learning_workbench](https://github.com/giuse/machine_learning_workbench/tree/master/lib/machine_learning_workbench/neural_network) -\n  Framework including pure-Ruby implementation of both feed-forward and recurrent neural networks\n  (fully connected). Training available using neuroevolution (Natural Evolution Strategies algorithms).\n- [rann](https://github.com/mikecmpbll/rann) -\n  Flexible Ruby ANN implementation with backprop (through-time, for recurrent\n  nets), gradient checking, adagrad, and parallel batch execution.\n\n### Deep learning\n\n- [tensor_stream](https://github.com/jedld/tensor_stream) -\n  Ground-up and standalone reimplementation of TensorFlow for Ruby.\n- [red-chainer](https://github.com/red-data-tools/red-chainer) - Deep learning framework for Ruby.\n- [tensorflow](https://github.com/somaticio/tensorflow.rb) - Ruby bindings for [TensorFlow](https://www.tensorflow.org/).\n- [ruby-dnn](https://github.com/unagiootoro/ruby-dnn) - Simple deep learning for Ruby.\n- [torch-rb](https://github.com/ankane/torch-rb) - Ruby bindings for [LibTorch](https://github.com/pytorch/pytorch)\n  using [rice](https://github.com/jasonroelofs/rice).\n- [mxnet](https://github.com/mrkn/mxnet.rb) - Ruby bindings for [mxnet](https://mxnet.apache.org/).\n\n### Kernel methods\n\n- [rb-libsvm](https://github.com/febeling/rb-libsvm) -\n  Support Vector Machines with Ruby and the [LIBSVM](https://www.csie.ntu.edu.tw/~cjlin/libsvm/) library.\n  <sup>[[dep: bundled](#bundled)]</sup>\n\n### Evolutionary algorithms\n\n- [machine_learning_workbench](https://github.com/giuse/machine_learning_workbench/tree/master/lib/machine_learning_workbench/optimizer/natural_evolution_strategies) -\n  Framework including pure-Ruby implementations of Natural Evolution Strategy algorithms\n  (black-box optimization), specifically Exponential NES (XNES),\n  Separable NES (sNES), Block-Diagonal NES (BDNES) and more.\n  Applications include neural network search/training (neuroevolution).\n- [simple_ga](https://github.com/giuse/simple_ga) -\n  Simplest Genetic Algorithms implementation in Ruby.\n\n### Bayesian methods\n\n- [linnaeus](https://github.com/djcp/linnaeus) -\n  Redis-backed Bayesian classifier.\n- [naive_bayes](https://github.com/reddavis/Naive-Bayes) -\n  Simple Naive Bayes classifier.\n- [nbayes](https://github.com/oasic/nbayes) -\n  Full-featured, Ruby implementation of Naive Bayes.\n\n### Decision trees\n\n- [decisiontree](https://github.com/igrigorik/decisiontree) -\n  Decision Tree ID3 Algorithm in pure Ruby.\n  <sup>[[dep: GraphViz](#graphviz) |\n        [post](https://www.igvita.com/2007/04/16/decision-tree-learning-in-ruby/)]</sup>.\n\n### Clustering\n\n- [kmeans-clusterer](https://github.com/gbuesing/kmeans-clusterer) -\n  k-means clustering in Ruby.\n- [k_means](https://github.com/reddavis/K-Means) -\n  Attempting to build a fast, memory efficient K-Means program.\n- [knn](https://github.com/reddavis/knn) -\n  Simple K Nearest Neighbour Algorithm.\n\n### Linear classifiers\n\n- [liblinear-ruby-swig](https://github.com/tomz/liblinear-ruby-swig) -\n  Ruby interface to LIBLINEAR (much more efficient than LIBSVM for text classification).\n- [liblinear-ruby](https://github.com/kei500/liblinear-ruby) -\n  Ruby interface to LIBLINEAR using SWIG.\n\n### Statistical models\n\n- [rtimbl](https://github.com/maspwr/rtimbl) -\n  Memory based learners from the Timbl framework.\n- [lda-ruby](https://github.com/ealdent/lda-ruby) -\n  Ruby implementation of the [LDA](https://en.wikipedia.org/wiki/Latent_Dirichlet_allocation)\n  (Latent Dirichlet Allocation) for automatic Topic Modelling and Document Clustering.\n- [maxent_string_classifier](https://github.com/mccraigmccraig/maxent_string_classifier) -\n  JRuby maximum entropy classifier for string data, based on the OpenNLP Maxent framework.\n- [omnicat](https://github.com/mustafaturan/omnicat) -\n  Generalized rack framework for text classifications.\n- [omnicat-bayes](https://github.com/mustafaturan/omnicat-bayes) -\n  Naive Bayes text classification implementation as an OmniCat classifier strategy.\n  <sup>[[dep: bundled](#bundled)]</sup>\n\n### Gradient boosting\n\n- [xgboost](https://github.com/PairOnAir/xgboost-ruby) &mdash;\n  Ruby bindings for XGBoost.\n  <sup>[[dep: XGBoost](#xgboost)]</sup>\n- [xgb](https://github.com/ankane/xgb) &mdash;\n  Ruby bindings for XGBoost.\n  <sup>[[dep: XGBoost](#xgboost)]</sup>\n- [lightgbm](https://github.com/ankane/lightgbm) &mdash;\n  Ruby bindings for LightGBM.\n  <sup>[[dep: LightGBM](#lightgbm)]</sup>\n\n### Vector search\n\n- [flann](https://github.com/mariusmuja/flann) -\n  Ruby bindings for the [FLANN](https://github.com/flann-lib/flann) (Fast Library for Approximate Nearest Neighbors).\n  <sup>[[flann](#flann)]</sup>\n- [annoy-rb](https://github.com/yoshoku/annoy.rb) -\n  Ruby bindings for the [Annoy](https://github.com/spotify/annoy) (Approximate Nearest Neighbors Oh Yeah).\n- [hnswlib.rb](https://github.com/yoshoku/hnswlib.rb) -\n  Ruby bindings for the [Hnswlib](https://github.com/nmslib/hnswlib) that implements approximate nearest neighbor search with Hierarchical Navigable Small World graphs.\n- [ngt-ruby](https://github.com/ankane/ngt-ruby) -\n  Ruby bindings for the [NGT](https://github.com/yahoojapan/NGT) (Neighborhood Graph and Tree for Indexing High-dimensional data).\n- [milvus](https://github.com/andreibondarev/milvus) &mdash;\n  Ruby client for Milvus Vector DB.\n- [pinecone](https://github.com/ScotterC/pinecone) &mdash;\n  Ruby client for Pinecone Vector DB.\n- [qdrant-ruby](https://github.com/andreibondarev/qdrant-ruby) &mdash;\n  Ruby wrapper for the Qdrant vector search database API.\n- [weaviate-ruby](https://github.com/andreibondarev/weaviate-ruby) &mdash;\n  Ruby wrapper for the Weaviate vector search database API.\n\n## Applications of machine learning\n\n- [phashion](https://github.com/westonplatter/phashion) -\n  Ruby wrapper around pHash, the perceptual hash library for detecting duplicate multimedia files.\n  <sup>[[ImageMagick](#imagemagick) | [libjpeg](#libjpeg)]</sup>\n\n## Data structures\n\nIf you're going to implement your own ML algorithms you're probably interested\nin storing your feature sets efficiently. Look for appropriate\n[data structures](https://github.com/arbox/data-science-with-ruby#data-structures)\nin our [Data Science with Ruby][ds-with-ruby] list.\n\n## Data visualization\n\nPlease refer to the [Data Visualization](https://github.com/arbox/data-science-with-ruby#visualization)\nsection on the [Data Science with Ruby][ds-with-ruby] list.\n\n## Articles, Posts, Talks, and Presentations\n\n- 2022\n  - _Discover Machine Learning in Ruby_ by [Justin Bowen](https://twitter.com/TonsOfFun111)\n   <sup>[[video](https://www.youtube.com/watch?v=HPbizNgcyFk)]</sup>\n- 2019\n  - _TensorStream: Bringing Machine Learning to Ruby_ by [Joseph Emmanuel Dayo](https://www.linkedin.com/in/jdayo/)\n    <sup>[[post](https://medium.com/@joseph.dayo/tensorstream-bringing-machine-learning-to-ruby-114582060e3d)]</sup>\n  - _Easy machine learning with Ruby using SVMKit_ by [@kojix](https://twitter.com/kojix2dayo)\n    <sup>[[post](https://dev.to/kojix2/easy-machine-learning-with-ruby-using-svmkit-4n86)]</sup>\n- 2018\n  - _Deep Learning Programming on Ruby_ by [Kenta Murata](https://twitter.com/mrkn)\n    &amp; [Yusaku Hatanaka ](https://twitter.com/hatappi)\n    <sup>[[slides](https://speakerdeck.com/mrkn/deep-learning-programming-on-ruby) |\n          [page](https://rubykaigi.org/2018/presentations/mrkn.html)]</sup>\n  - _How to use trained Keras and TensorFlow machine learning models within Ruby on Rails_ by [Denis Sellu](https://twitter.com/denis_sellu)\n    <sup>[[post](https://www.cookieshq.co.uk/posts/how-to-use-trained-keras-and-tensorflow-machine-learning-models-within-ruby-on-rails)]</sup>\n- 2017\n  - _Scientific Computing on JRuby_ by [Prasun Anand](https://twitter.com/prasun_anand)\n    <sup>[[slides](https://www.slideshare.net/PrasunAnand2/fosdem2017-scientific-computing-on-jruby) |\n    [video](https://ftp.fau.de/fosdem/2017/K.4.201/ruby_scientific_computing_on_jruby.mp4) |\n    [slides](https://www.slideshare.net/PrasunAnand2/scientific-computing-on-jruby) |\n    [slides](https://www.slideshare.net/PrasunAnand2/scientific-computation-on-jruby)]</sup>\n  - _Is it Food? An Introduction to Machine Learning_ by [Matthew Mongeau](https://twitter.com/halogenandtoast)\n    <sup>[[video](https://www.youtube.com/watch?v=8G709hKkthY) |\n          [slides](https://www.slideshare.net/halogenandtoast/is-it-food)]</sup>\n  - _Bayes is BAE_ by [Richard Schneeman](https://twitter.com/schneems)\n    <sup>[[video](https://www.youtube.com/watch?v=bQSzZrDDV80) |\n          [slides](https://speakerdeck.com/schneems/bayes-is-bae)]</sup>\n  - _Ruby Roundtable: Machine Learning in Ruby_ by [RubyThursday](https://rubythursday.com/)\n    <sup>[[video](https://www.youtube.com/watch?v=ScIFARN0jCo)]</sup>\n- 2016\n  - _Practical Machine Learning with Ruby_ by [Jordan Hudgens](https://twitter.com/jordanhudgens)\n    <sup>[[tutorial](https://www.crondose.com/2016/12/practical-machine-learning-ruby/)]</sup>\n  - _Deep Learning: An Introduction for Ruby Developers_ by [Geoffrey Litt](https://twitter.com/geoffreylitt)\n    <sup>[[slides](https://speakerdeck.com/geoffreylitt/deep-learning-an-introduction-for-ruby-developers)]</sup>\n  - _How I made a pure-Ruby word2vec program more than 3x faster_ by [Kei Sawada](https://twitter.com/remore)\n    <sup>[[slides](https://speakerdeck.com/remore/how-i-made-a-pure-ruby-word2vec-program-more-than-3x-faster)]</sup>\n  - _D\u014dmo arigat\u014d, Mr. Roboto: Machine Learning with Ruby_ by [Eric Weinstein](https://twitter.com/ericqweinstein)\n    <sup>[[slides](https://speakerdeck.com/ericqweinstein/domo-arigato-mr-roboto-machine-learning-with-ruby) |\n          [video](https://www.youtube.com/watch?v=T1nFQ49TyeA)]</sup>\n  - _Building a Recommendation Engine with Machine Learning Techniques_ by [Brian Sam-Bodden](https://twitter.com/bsbodden)\n    <sup>[[video](https://www.youtube.com/watch?v=SRnM_P_ygqI)]</sup>\n  - :sparkles: _SciRuby Machine Learning: Current Status and Future_ by [Kenta Murata](https://twitter.com/mrkn)\n    <sup>[[slides](https://speakerdeck.com/mrkn/sciruby-machine-learning-current-status-and-future) |\n          [video: jp](https://www.youtube.com/watch?v=gfQ8XEy7vO4)]</sup>\n  - _Ruby Roundtable: Intro to Tensorflow_ by [RubyThursday](https://rubythursday.com/)\n    <sup>[[video](https://www.youtube.com/watch?v=pYC5mXHUWkc)]</sup>\n- 2015\n  - _Machine Learning made simple with Ruby_ by [Lorenzo Masini](https://twitter.com/rugginoso)\n    <sup>[[post](https://www.leanpanda.com/blog/2015-08-24-machine-learning-automatic-classification/)]</sup>\n  - _Using Ruby Machine Learning to Find Paris Hilton Quotes_ by [Rick Carlino](https://github.com/RickCarlino)\n    <sup>[[tutorial](https://web.archive.org/web/20160414072324/http://datamelon.io/blog/2015/using-ruby-machine-learning-id-paris-hilton-quotes.html)]</sup>\n- 2014\n  - _Test Driven Neural Networks_ by [Matthew Kirk](https://twitter.com/mjkirk)\n    <sup>[[video](https://www.youtube.com/watch?v=ppf8m-3uXvU&t=36s)]</sup>\n  - _Five machine learning techniques that you can use in your Ruby apps today_ by [Benjamin Curtis](https://twitter.com/stympy)\n    <sup>[[video](https://www.youtube.com/watch?v=crziu7dk6Vw) |\n          [slides](https://speakerdeck.com/stympy/machine-learning-techniques)]</sup>\n  - _Machine Learning for Fun and Profit_ by [John Paul Ashenfelter](https://twitter.com/johnashenfelter)\n    <sup>[[video](https://www.youtube.com/watch?v=KC5MtKHm1O4)]</sup>\n- 2013\n  - _Sentiment Analysis using Support Vector Machines in Ruby_ by [Matthew Kirk](https://twitter.com/mjkirk)\n    <sup>[[video](https://www.youtube.com/watch?v=iSug6CgxWxc) |\n          [code](https://github.com/hexgnu/sentiment_analyzer)]</sup>\n  - _Recommender Systems with Ruby_ by [Marcel Caraciolo](https://twitter.com/marcelcaraciolo)\n    <sup>[[slides](https://www.slideshare.net/marcelcaraciolo/recommender-systems-with-ruby-adding-machine-learning-statistics-etc)]</sup>\n  - _Detecting Faces with Ruby: FFI in a Nutshell_ by [Marc Berszick]()\n    <sup>[[post](https://www.sitepoint.com/detecting-faces-with-ruby-ffi-in-a-nutshell/)]</sup>\n- 2012\n  - _Machine Learning with Ruby, Part One_ by [Vasily Vasinov](https://twitter.com/vasinov)\n    <sup>[[tutorial](https://www.vasinov.com/blog/machine-learning-with-ruby-part-one/)]</sup>\n  - _Recurrent Neural Networks in Ruby_ by [Joseph Wilk](https://twitter.com/josephwilk)\n    <sup>[[post](http://blog.josephwilk.net/ruby/recurrent-neural-networks-in-ruby.html)]</sup>\n  - _Recommendation Engines using Machine Learning, and JRuby_ by [Matthew Kirk](https://twitter.com/mjkirk)\n    <sup>[[video](https://www.youtube.com/watch?v=hsZcrlbBg_0)]</sup>\n  - _Practical Machine Learning and Rails_ by [Andrew Cantino](https://twitter.com/tectonic)\n    and [Ryan Stout](https://twitter.com/ryanstout)\n    <sup>[[video](https://www.youtube.com/watch?v=vy_zQ1-F0JI)]</sup>\n\n- 2011\n  - _Clustering in Ruby_ by [Colin Drake](https://twitter.com/colinfdrake)\n    <sup>[[post](https://colindrake.me/post/k-means-clustering-in-ruby/)]</sup>\n  - _Text Classification using Support Vector Machines in Ruby_ by [Rimas Silkaitis](https://twitter.com/neovintage)\n    <sup>[[post](http://neovintage.org/2011/11/14/text-classification-using-support/)]</sup>\n- 2010\n  - _bayes_motel \u2013 Bayesian classification for Ruby_ by [Mike Perham](https://twitter.com/mperham)\n    <sup>[[post](http://www.mikeperham.com/2010/04/28/bayes_motel-bayesian-classification-for-ruby/)]</sup>\n  - _Intelligent Ruby: Getting Started with Machine Learning_ by [Ilya Grigorik](https://twitter.com/igrigorik)\n    <sup>[[video](https://vimeo.com/22513786)]</sup>\n- 2009\n\n- 2008\n  - _Support Vector Machines (SVM) in Ruby_ by [Ilya Grigorik](https://twitter.com/igrigorik)\n    <sup>[[post](https://www.igvita.com/2008/01/07/support-vector-machines-svm-in-ruby/)]</sup>\n- 2007\n  - _Decision Tree Learning in Ruby_ by [Ilya Grigorik](https://twitter.com/igrigorik)\n    <sup>[[post](https://www.igvita.com/2007/04/16/decision-tree-learning-in-ruby/)]</sup>\n\n## Projects and Code Examples\n\n- [Wine Clustering](https://github.com/hexgnu/wine_clustering) -\n  Wine quality estimations clustered with different algorithms.\n- [simple_ga](https://github.com/giuse/simple_ga) -\n  Basic (working) demo of Genetic Algorithms in Ruby.\n- [Handwritten Digits Recognition](https://github.com/jdrzj/handwritten-digits-recognition) -\n  Handwritten digits recognition using Neural Networks and Ruby.\n\n## Heroku buildpacks\n\n- [GSL and Ruby buildpack](https://github.com/tomwolfe/heroku-buildpack-gsl-ruby)\n- [OpenCV and Ruby buildpack](https://github.com/lilibethdlc/heroku-buildpack-ruby-opencv)\n- [ImageMagick buildpack](https://github.com/mcollina/heroku-buildpack-imagemagick)\n\n## Books, Blogs, Channels\n\n-  [Kirk, Matthew](https://twitter.com/mjkirk).\n   _Thoughtful Machine Learning: A Test-Driven Approach_. O'Reilly, 2014.\n   <sup>[[Amazon](https://www.amazon.com/Thoughtful-Machine-Learning-Test-Driven-Approach/dp/1449374069) |\n         [code](https://github.com/thoughtfulml/examples)]</sup>\n- [Practical Artificial Intelligence](https://www.practicalai.io/) -\n  Blog about Artificial Intelligence and Machine Learning with tutorials and code samples in Ruby.\n\n## Community\n\n- [SciRuby Mailing List](https://groups.google.com/forum/#!forum/sciruby-dev)\n- [SciRuby Slack](https://sciruby.slack.com/)\n- [Red Data Gitter](https://gitter.im/red-data-tools/)\n- [Reddit](https://www.reddit.com/r/MachineLearning/search?q=Ruby&restrict_sr=on)\n- [Stack Overflow](https://stackoverflow.com/search?q=machine+learning+ruby)\n- [Twitter](https://twitter.com/search?q=Machine%20Learning%20Ruby&src=typd)\n- [NonWebRuby](https://twitter.com/NonWebRuby)\n- [Ruby AI Builders Discord](https://discord.gg/zDyFJFBTGB)\n\n## Related Resources\n\n- <a name=\"lightgbm\"></a>\n  [LightGBM](https://github.com/microsoft/LightGBM)\n- <a name=\"xgboost\"></a>\n  [XGBoost](https://github.com/dmlc/xgboost)\n- <a name=\"gls\"></a>\n  [GSL (GNU Scientific Library)][gls]\n- <a name=\"opencv\"></a>\n  [OpenCV](https://opencv.org/)\n- <a name=\"empty-lines-around-access-modifier\"></a>\n  [Graphviz](http://www.graphviz.org/)\n- <a name=\"gnuplot\"></a>\n  [Gnuplot](http://www.gnuplot.info/)\n- <a name=\"xquartz\"></a>\n  [X11/XQuartz](https://www.xquartz.org/)\n- <a name=\"imagemagic\"></a>\n  [ImageMagick](https://www.imagemagick.org/script/index.php)\n- <a name=\"r\"></a>\n  [R](http://www.r-project.org/)\n- <a name=\"octave\"></a>\n  [Octave](https://www.gnu.org/software/octave/)\n- [scikit-learn algorithm cheatsheet](https://scikit-learn.org/stable/tutorial/machine_learning_map/)\n- [Awesome Ruby](https://github.com/markets/awesome-ruby#natural-language-processing) -\n  Among other awesome items a short list of NLP related projects.\n- [Ruby NLP](https://github.com/diasks2/ruby-nlp) -\n  State-of-Art collection of Ruby libraries for NLP.\n- [Speech and Natural Language Processing](https://github.com/edobashira/speech-language-processing) -\n  General List of NLP related resources (mostly not for Ruby programmers).\n- [Scientific Ruby](http://sciruby.com/) -\n  Linear Algebra, Visualization and Scientific Computing for Ruby.\n- [iRuby](https://github.com/SciRuby/iruby) - IRuby kernel for Jupyter (formerly IPython).\n- [Kiba](https://github.com/thbar/kiba) -\n  Lightweight [ETL](https://en.wikipedia.org/wiki/Extract,_transform,_load) (Extract, Transform, Load) pipeline.\n- [Awesome OCR](https://github.com/kba/awesome-ocr) -\n  Multitude of OCR (Optical Character Recognition) resources.\n- [Awesome TensorFlow](https://github.com/jtoy/awesome-tensorflow) -\n  Machine Learning with TensorFlow libraries.\n- [rb-gsl](https://github.com/SciRuby/rb-gsl) -\n  Ruby interface to the [GNU Scientific Library](https://www.gnu.org/software/gsl/).\n- [The Definitive Guide to Ruby's C API](https://silverhammermba.github.io/emberb/) -\n  Modern Reference and Tutorial on Embedding and Extending Ruby using C programming language.\n\n## License\n\n[![Creative Commons Zero 1.0](http://mirrors.creativecommons.org/presskit/buttons/80x15/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)\n`Awesome ML with Ruby` by [Andrei Beliankou](https://github.com/arbox) and\n[Contributors][contributors].\n\nTo the extent possible under law, the person who associated CC0 with\n`Awesome ML with Ruby` has waived all copyright and related or neighboring rights\nto `Awesome ML with Ruby`.\n\nYou should have received a copy of the CC0 legalcode along with this\nwork. If not, see <https://creativecommons.org/publicdomain/zero/1.0/>.\n\n<!--- Links --->\n[ruby]: https://www.ruby-lang.org/en/\n[awesome]: https://github.com/sindresorhus/awesome/blob/master/awesome.md\n[change-pr]: https://github.com/RichardLitt/knowledge/blob/master/github/amending-a-commit-guide.md\n[ml]: https://en.wikipedia.org/wiki/Machine_learning\n[ds-with-ruby]: https://github.com/arbox/data-science-with-ruby\n[contributors]: https://github.com/arbox/machine-learning-with-ruby/graphs/contributors\n[sciruby]: https://github.com/sciruby\n[ai]: https://en.wikipedia.org/wiki/Artificial_intelligence\n[cs]: https://en.wikipedia.org/wiki/Computational_science\n[fe]: https://en.wikipedia.org/wiki/Feature_engineering\n[ts]: https://en.wikipedia.org/wiki/Test_set\n[gsl]: https://www.gnu.org/software/gsl/\n[scikit]: https://scikit-learn.org/stable/index.html\n"
}
{
  "repo_name": "DjangoEx_awesome-python-resources",
  "readme_content": "<a id=\"top\"></a>\n\n# Python Engineer Roadmap [![README to PDF](https://github.com/DjangoEx/awesome-python-resources/actions/workflows/convert-to-pdf.yml/badge.svg)](README.pdf)\n\n[Python](https://www.python.org/) can be used in a lot of computer science fields. In this repository, we have collected resources for each field of computer science that are related to Python.\\\n**Not sure which source to choose?** You can follow the resources marked with a \u2705 symbol, they are highly recommended by the community.\n\n\n### Contribution\nBefore you head over, read the [Contribution Guide](CONTRIBUTING.md) first. You are new to contribution process? For more information about the steps and guides, check out the [First Contribution Guide](https://github.com/firstcontributions/first-contributions).\n\n### Table of Contents\n\n- [Prerequisites](#prerequisites)\n  - [Algorithms and Data Structures](#algorithms-and-data-structures)\n  - [System Design](#system-design)\n  - [Git](#git)\n  - [Operating System](#operating-system)\n  - [Virtual Environment](#virtual-environment)\n  - [Python](#python)\n- [Career Path](#career-path)\n  - [Backend](#backend)\n  - [Data Science](#data-science)\n  - [Machine Learning](#machine-learning)\n  - [Deep Learning](#deep-learning)\n  - [Reinforcement Learning](#reinforcement-learning)\n  - [Neural Networks](#neural-networks)\n  - [Image Processing](#image-processing)\n  - [DevOps](#devops)\n  - [Hacking](#hacking)\n  - [Algorithmic Trading](#algorithmic-trading)\n  - [Bot](#bot)\n- [Advanced Topics](#advanced-topics)\n  - [Databases](#databases)\n  - [ORM](#orm)\n  - [Clean Code](#clean-code)\n  - [Clean Architecture](#clean-architecture)\n  - [Caching](#caching)\n  - [Testing](#testing)\n  - [Container Platforms](#container-platforms)\n  - [Programming Paradigms](#programming-paradigms)\n  - [Architectural Patterns](#architectural-patterns)\n  - [Design Principles](#design-principles)\n  - [Design Patterns](#design-patterns)\n  - [Message Brokers](#message-brokers)\n  - [WSGI Servers](#wsgi-servers)\n  - [ASGI Servers](#asgi-servers)\n  - [Web Servers](#web-servers)\n  - [API](#api)\n  - [Reliability](#reliability)\n  - [Distributed Systems](#distributed-systems)\n  - [Reactive Systems](#reactive-systems)\n  - [Refactoring](#refactoring)\n  - [Security](#security)\n  - [Monitoring](#monitoring)\n  - [Soft Skill](#soft-skill)\n  - [Public Cloud](#public-cloud)\n  - [IoT](#iot)\n\n## Prerequisites\n\n- ### Algorithms and Data Structures\n  \n  - **Book**\n    - \u2705 [Grokking Algorithms by Aditya Bhargava](https://www.amazon.com/Grokking-Algorithms-illustrated-programmers-curious/dp/1617292230)\n    - \u2705 [Cracking the Coding Interview by Gayle Laakmann McDowell](https://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/0984782850)\n    - [Data Structure and Algorithmic Thinking with Python: Data Structure and Algorithmic Puzzles by Narasimha Karumanchi](https://www.amazon.com/Data-Structure-Algorithmic-Thinking-Python/dp/8192107590)\n    - [Introduction to Algorithms (CLRS)](https://www.amazon.com/Introduction-Algorithms-3rd-MIT-Press/dp/0262033844)\n\n  - **Video**\n    - [Data Structures And Algorithms Course by Mosh Hamedani](https://codewithmosh.com/p/data-structures-algorithms)\n    - [Algorithms and Data Structures for Beginners by NeetCode](https://neetcode.io/courses/dsa-for-beginners/0)\n    - [Advanced Algorithms by NeetCode](https://neetcode.io/courses/advanced-algorithms/0)\n\n  - **Platform**\n    - \u2705 [LeetCode](https://leetcode.com/)\n    - [HackerRank](https://www.hackerrank.com/)\n    - [CodeWars](https://www.codewars.com/)\n    - [TheAlgorithms](https://the-algorithms.com/)\n    - [Codeforces](https://codeforces.com/)\n\n  - **Repo**\n    - \u2705 [Coding University](https://github.com/jwasham/coding-interview-university)\n    - [Algorithm solution and summary of Grokking book](https://github.com/msdundar/notes-algorithms)\n\n  - **Cheat Sheet**\n    - [Data Structures Cheat Sheet](https://intellipaat.com/mediaFiles/2019/02/Python-Data-structures-cheat-sheet.pdf)\n\n- ### System Design\n  \n  - **Book**\n    - \u2705 [System Design Interview by Alex Xu](https://www.amazon.com/System-Design-Interview-insiders-Second/dp/B08CMF2CQF)\n    - [System Design Interview: Volume 2 by Alex Xu & Sahn Lam](https://www.amazon.com/System-Design-Interview-Insiders-Guide/dp/1736049119)\n\n  - **Course**\n    - [Educative - Grokking the System Design Interview](https://www.educative.io/courses/grokking-the-system-design-interview)\n    - [NeetCode - System Design for Beginners](https://neetcode.io/courses/system-design-for-beginners/0)\n    - [NeetCode - System Design Interview](https://neetcode.io/courses/system-design-interview/0)\n\n- ### Git\n  \n  - **Documentation**\n    - [Git Documentation](https://git-scm.com/docs)\n\n  - **Video**\n    - \u2705 [Git Course by Mosh Hamedani](https://codewithmosh.com/p/the-ultimate-git-course)\n    - [Git and GitHub tutorial for beginners by Amigoscode](https://www.youtube.com/watch?v=3fUbBnN_H2c)\n    - [Git and GitHub crash course by freeCodeCamp](https://www.youtube.com/watch?v=RGOj5yH7evk)\n    - [Git For Professionals course by Trevor Miller](https://egghead.io/courses/practical-git-for-everyday-professional-use)\n\n  - **Book**\n    - [Pro Git](https://git-scm.com/book/en/)\n    - [Git Notes for Professionals](https://books.goalkicker.com/GitBook/)\n\n  - **Website**\n    - [Git For Beginners by tutorialspoint](https://www.tutorialspoint.com/git/index.htm)\n    - [Git For Intermediates and Professionals by W3schools](https://www.w3schools.com/git/)\n    - [Advanced Git Tips by atlassian](https://www.atlassian.com/git/tutorials/advanced-overview)\n    - [Learn Git Branching](https://learngitbranching.js.org/)\n  \n  - **Cheat Sheet**\n    - [Git cheat sheet](https://wac-cdn.atlassian.com/dam/jcr:e7e22f25-bba2-4ef1-a197-53f46b6df4a5/SWTM-2088_Atlassian-Git-Cheatsheet.pdf?cdnVersion=353)\n\n- ### Operating System\n\n  - **Book**\n    - \u2705 [LPIC-1: Linux Professional Institute Certification Study Guide: Exams 101 and 102 by Roderick W. Smith](https://www.amazon.com/LPIC-1-Linux-Professional-Institute-Certification/dp/1118495632)\n\n  - **Video**\n    - [Lpic-1 Course by Jadi](https://www.youtube.com/watch?v=AKkNUvEHXhk&list=PLFOYXCPEqdNUU55Xvgst8wGTWnz_sd-cj)\n\n  - **Platform**\n    - [Linux Journey](https://linuxjourney.com/)\n\n  - **Community**\n    - [Discord Linux group](https://discord.gg/discord-linux)\n    - [Linux For Everyone Community](https://t.me/linux4everyone)\n\n  - **Cheat Sheet**\n    - [Linux commands cheat sheet](https://www.guru99.com/linux-commands-cheat-sheet.html)\n\n- ### Virtual Environment\n\n  - **VENV**\n  \n    - **Documentation**\n      - [VENV Documentation](https://docs.python.org/3/library/venv.html)\n  \n  - **VirtualEnvWrapper**\n    - **Documentation**\n      - [VirtualEnvWrapper Documentation](https://virtualenvwrapper.readthedocs.io/en/latest/)\n  \n  - **PipEnv**\n    - **Documentation**\n      - [PipEnv Documentation](https://pipenv.pypa.io/en/latest/)\n  \n  - **Conda**\n    - **Documentation**\n      - [Conda Documentation](https://docs.conda.io/en/latest/)\n  \n  - **Python-Poetry**\n    - **Documentation**\n      - [Python-Poetry Documentation](https://python-poetry.org/docs/)\n\n- ### Python\n\n  - **Documentation**\n    - [Python Documentation](https://docs.python.org/3/)\n\n  - **Beginner**\n    - **Book**\n      - \u2705 [Python Crash Course by Eric Matthes](https://www.amazon.co.uk/dp/1593276036/)\n      - [Head First Python by Paul Barry](https://www.amazon.com/Head-First-Python-Brain-Friendly-Guide/dp/1449382673)\n      - [Learn Python the Hard Way by Zed Shaw](https://www.amazon.com/Learn-Python-Hard-Way-Introduction/dp/0321884914)\n      - [Essential Python Tools](https://books.agiliq.com/projects/essential-python-tools/en/latest/)\n\n    - **Video**\n      - [Python Beginner Tutorial by NeuralNine](https://www.youtube.com/playlist?list=PL7yh-TELLS1E6dNCzfQl-NG-KJP3C-4mc)\n      - [Python Programming Tutorials by Tech with Tim](https://www.youtube.com/playlist?list=PLzMcBGfZo4-mFu00qxl0a67RhjjZj3jXm)\n\n    - **Platform**\n      - [W3schools](https://www.w3schools.com/python/default.asp)\n      - [Codecademy Python 2](https://www.codecademy.com/learn/learn-python)\n      - [Codecademy Python 3](https://www.codecademy.com/learn/learn-python-3)\n      - [Sololearn Python](https://www.sololearn.com/learning/1073)\n      - [Wiingy](https://wiingy.com/learn/python/python-tutorial/)\n\n  - **Intermediate**  \n    - **Book**\n      - \u2705 [Python Cookbook by David Beazley & Brian Jones](https://www.amazon.com/Python-Cookbook-Third-David-Beazley/dp/1449340377)\n      - [Beyond the Basic Stuff with Python Best Practices for Writing Clean Code by Sweigart, Al](https://www.amazon.de/-/en/Al-Sweigart/dp/1593279663)\n      - [Fluent Python by Luciano Ramalho 2nd Edition](https://www.amazon.com/Fluent-Python-Concise-Effective-Programming/dp/1492056359)\n      - [Effective Python by Brett Slatkin](https://www.amazon.com/Effective-Python-Specific-Software-Development/dp/0134853989)\n      - [Python Concurrency with asyncio](https://www.manning.com/books/python-concurrency-with-asyncio)\n\n    - **Video**\n      - [Python Intermediate Tutorial by NeuralNine](https://www.youtube.com/playlist?list=PL7yh-TELLS1F3KytMVZRFO-xIo_S2_Jg1)\n      - [Intermediate Python Tutorials by Tech with Tim](https://www.youtube.com/playlist?list=PLzMcBGfZo4-nhWva-6OVh1yKWHBs4o_tv) \n      - [Python3: Variables, Functions and Functional Programming, Closures, Decorators, Modules and Packages](https://www.udemy.com/course/python-3-deep-dive-part-2/)\n  \n    - **Platform**\n      - [GeeksForGeeks](https://www.geeksforgeeks.org/python-programming-language)\n      - [Programiz](https://www.programiz.com/python-programming)\n      - [Scaler Topics](https://www.scaler.com/topics/python/)\n    \n\n  - **Advanced**\n    - **Book**\n      - \u2705 [Architecture Patterns with Python by Harry Percival & Bob Gregory](https://www.amazon.com/Architecture-Patterns-Python-Domain-Driven-Microservices/dp/1492052205)\n      - \u2705 [Practices of the Python Pro by Dane Hillard](https://www.amazon.com/Practices-Python-Pro-Dane-Hillard/dp/1617296082)\n      - \u2705 [Python Tricks by Dan Bader](https://www.amazon.com/Python-Tricks-Buffet-Awesome-Features/dp/1775093301)\n      - [Python Testing with pytest by Brian Okken](https://www.amazon.com/Python-Testing-pytest-Effective-Scalable/dp/1680502409)\n      - [Python Concurrency with asyncio by Matthew Fowler](https://www.manning.com/books/python-concurrency-with-asyncio)\n      - [Python for Programmers by Deitel Developer Series](https://deitel.com/python-for-programmers-book/)\n      - [Serious Python by Julien Danjou](https://serious-python.com/)\n      - [Python Notes for Professionals](https://books.goalkicker.com/PythonBook/)\n      - [Python Anti-patterns](https://frostyx.fedorapeople.org/The-Little-Book-of-Python-Anti-Patterns-1.0.pdf)\n\n    - **Video**\n      - \u2705 [Python3: Deep dive Iteration, Generators](https://www.udemy.com/course/python-3-deep-dive-part-2/)\n      - \u2705 [Python3: Deep dive Dictionaries, Sets, Related Data Structures, Serialization/Deserialization](https://www.udemy.com/course/python-3-deep-dive-part-3/)\n      - \u2705 [Python3: Deep dive Object Oriented Programming (OOP)](https://www.udemy.com/course/python-3-deep-dive-part-4/)\n\n    - **Platform**\n      - \u2705 [RealPython](https://realpython.com/)\n      - [Python-Course](https://python-course.eu/)\n  \n  - **Community**\n    - [Python Discord group](https://discord.gg/python)\n    - [Python Telegram group](https://t.me/Python)\n\n  - **Cheat Sheet**\n    - [Python cheat sheet](https://perso.limsi.fr/pointal/_media/python:cours:mementopython3-english.pdf)\n  \n## Career Path\n\n- ### Backend\n\n  - #### Django\n    - **Documentation**\n      - [Django Documentation](https://www.djangoproject.com/) \n      - [Django Tutorial - w3schools](https://www.w3schools.com/django/)\n\n    - **Book**\n      - [Django for Beginners by William S. Vincent](https://www.amazon.com/gp/product/1735467200)\n      - [Django for APIs by William S. Vincent](https://www.amazon.com/gp/product/1735467227/)\n      - [Django for Professionals by William S. Vincent](https://www.amazon.com/gp/product/1735467235)\n      - [Two Scoops of Django 3.x by Daniel Roy Greenfeld, Audrey Roy Greenfeld](https://www.feldroy.com/books/two-scoops-of-django-3-x)\n      - [Test-Driven Development with Python: Obey the Testing Goat: Using Django, Selenium, and JavaScript by Harry Percival](https://www.obeythetestinggoat.com/book/praise.harry.html)\n      - [Test-Driven Development with Django by Kevin Harvey](https://www.amazon.com/Test-Driven-Development-Django-Kevin-Harvey/dp/178528116X)\n      - [Django3 by example by antonio mele](https://www.amazon.com/Django-Example-powerful-reliable-applications-dp-1838981950/dp/1838981950/ref=mt_other?_encoding=UTF8&me=&qid=)\n\n    - **Video**\n      - [Django Web Framework - Full Course for Beginners by Justin Mitchel](https://www.youtube.com/watch?v=F5mRW0jo-U4)\n      - [Build REST APIs with Django REST Framework and Python By Shubham Sarda](https://www.packtpub.com/product/build-rest-apis-with-django-rest-framework-and-python-video/9781801819022)\n      - [Django For Everybody - Full Course by Dr. Charles Severance](https://youtu.be/o0XbHvKxw7Y)\n      - [Django ORM Mastery - Very Academy](https://www.youtube.com/watch?v=iQF6pln3Gog&list=PLOLrQ9Pn6cazjoDEnwzcdWWf4SNS0QZml)\n      - [Learn Django Class Base View - Very Academy](https://www.youtube.com/watch?v=GxA2I-n8NR8&list=PLOLrQ9Pn6caxNb9eFZJ6LfY29nZkKmmXT)\n      - [Django Course by Mosh Hamedani](https://codewithmosh.com/p/the-ultimate-django-series)\n      - [Try Django 3.2 - Python Web Development Tutorial Series by Justin Mitchel](https://www.youtube.com/playlist?list=PLEsfXFp6DpzRMby_cSoWTFw8zaMdTEXgL)\n\n    - **Awesome Django**\n      - [Awesome Django](https://github.com/wsvincent/awesome-django#readme)\n\n    - **Community**\n      - [Django Discord group](https://discord.me/unofficial-django) \n      - [Django Telegram group](https://t.me/django)\n\n    - **Cheat Sheet**\n      - [Beginners Django cheat sheet](https://edu.anarcho-copy.org/Programming%20Languages/Python/Python%20CheatSheet/beginners_python_cheat_sheet_pcc_django.pdf)\n      - [Django Cheat Sheet](https://cheatography.com/ogr/cheat-sheets/django/)\n      - [Django Models Cheat Sheet](https://cheatography.com/lewiseason/cheat-sheets/django-models/)\n      - [Django Class Based Views Cheat Sheet](https://cheatography.com/papousekp/cheat-sheets/django-class-based-views/)\n      - [Django Class Based Views Cheat Sheet 2](https://ccbv.co.uk/)\n\n  - #### FastAPI\n\n    - **Video**\n      - [Python API Development - Comprehensive Course for Beginners by Sanjeev Thiyagarajan](https://www.youtube.com/watch?v=0sOvCWFmrtA)\n      - [FastAPI course by testdriven.io & talkpython.fm](https://testdriven.io/talkpython/)\n      - [FastAPI - The Complete Course 2023 (Beginner + Advanced)](https://www.udemy.com/course/fastapi-the-complete-course/)\n      - [Microservice Architecture and System Design with Python & Kubernetes \u2013 Full Course](https://www.youtube.com/watch?v=hmkF77F9TLw)\n\n    - **Documentation**\n      - [FastAPI documentation](https://fastapi.tiangolo.com)\n      - [FastAPI Utilities documentation](https://fastapi-utils.davidmontague.xyz/)\n\n    - **Awesome FastAPI**\n      - [Awesome FastAPI](https://github.com/mjhea0/awesome-fastapi#readme)\n\n    - **Community**\n      - [FastApi Discord group](https://discord.gg/VQjSZaeJmf)\n      - [FastApi Gitter](https://gitter.im/tiangolo/fastapi)\n  \n  - #### Flask\n  \n    - **Book**\n      - [Flask Web Development: Developing Web Applications with Python](https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world)\n      - [Flask Framework Cookbook](https://www.amazon.de/Flask-Framework-Cookbook-techniques-development/dp/1789951291/)\n      - [The New And Improved Flask Mega-Tutorial](https://www.amazon.com/New-Improved-Flask-Mega-Tutorial/dp/B09YQ33QYT)\n\n    - **Video**\n      - [Flask Tutorial by Tech With Tim](https://youtube.com/playlist?list=PLzMcBGfZo4-n4vJJybUVV3Un_NFS5EOgX)\n      - [REST APIs with Flask and Python by Jose Salvatierra](https://www.udemy.com/course/rest-api-flask-and-python/)\n\n    - **Documentation**\n      - [Flask Document](https://flask.palletsprojects.com/)\n\n    - **Cheat Sheet**\n      - [Flask Cheat Sheet and Quick Reference](https://s3.us-east-2.amazonaws.com/prettyprinted/flask_cheatsheet.pdf)\n\n  - #### Tornado\n\n    - **Book**\n      - [Introduction to Tornado by Michael Dory](https://www.amazon.com/Introduction-Tornado-Michael-Dory-2012-03-31/dp/B01FEK31OM)\n\n    - **Video**\n      - [Tornado, Coroutines and Concurrency by Bek Brace](https://www.youtube.com/watch?v=-gJ21qzpieA)\n      - [Tornado in Depth by Oscar Vilaplana](https://www.youtube.com/watch?v=4Ztq-Yz1ero)\n      - [More than just a pretty web framework, the Tornado IOLoop by Gavin M.Roy](https://www.youtube.com/watch?v=3BYN3ouwkRA)\n\n    - **Documentation**\n      - [Tornado Document](https://www.tornadoweb.org/en/stable/)\n\n  - #### Web2Py\n\n    - **Documentation**\n      - [Web2Py Document](https://web2py.readthedocs.io/en/latest/)\n\n    - **Book**\n      - [Complete Reference Manual by Massimo Di Pierro](http://www.web2py.com/book)\n      - [Killer Web Development by Marco Laspe](http://killer-web-development.com/)\n\n  - #### Sanic\n\n    - **Documentation**\n      - [Sanic Document](https://sanic.readthedocs.io/en/stable/index.html)\n      - [Sanic Guide](https://sanic.dev/en/guide/)\n    \n    - **Article**\n      - [Getting Started with Sanic for Python by Mukul Khanna](https://scoutapm.com/blog/go-fast-getting-started-with-sanic-for-python)\n\n    - **Video**\n      - [Async Web Apps with Sanic by Dougal Matthews](https://www.youtube.com/watch?v=wb0lk4e9DEg)\n\n  - #### AIOHTTP\n\n    - **Documentation**\n      - [AIOHTTP Document](https://docs.aiohttp.org/en/stable/)\n\n  - #### Bottle\n\n    - **Documentation**\n      - [Bottle Document](https://bottlepy.org/docs/dev/)\n\n  - #### Dash\n\n    - **Documentation**\n      - [Dash-Python Document](https://dash.plotly.com/introduction)\n\n    - **Awesome Dash**\n      - [Awesome Dash](https://github.com/ucg8j/awesome-dash#readme)\n\n    - **Template**\n      - [Dash Clean Architecture Template](https://github.com/CzakoZoltan08/dash-clean-architecture-template)\n  \n  - #### BlackSheep\n\n    - **Documentation**\n      - [BlackSheep Document](https://neoteroi.dev/blacksheep/)\n\n  - [List Of All Python Backend Web Frameworks](https://wiki.python.org/moin/WebFrameworks)\n\n- ### Data Science\n\n  - #### Data Analysis\n\n    - ##### Numpy\n      - **Documentation**\n        - [Numpy Document](https://numpy.org/doc/stable/user/index.html)\n  \n    - ##### Scipy\n\n      - **Documentation**\n        - [Scipy Document](https://docs.scipy.org/doc/scipy/tutorial/index.html)\n  \n    - ##### Pandas\n\n      - **Documentation**\n        - [Pandas Document](https://pandas.pydata.org/docs/user_guide/index.html)\n\n  - #### Data Visualization\n\n    - ##### Matplotlib\n\n      - **Documentation**\n        - [Matplotlib Document](https://matplotlib.org/stable/users/index.html)\n  \n    - ##### Plotly\n\n      - **Documentation**\n        - [Plotly Document](https://plotly.com/python-api-reference/)\n\n\n- ### Machine Learning\n\n  - **Video**\n    - [Machine Learning Course by Andrew Ng](https://coursera.org/learn/machine-learning)\n\n- ### Deep Learning\n\n  - **Video**\n    - [Deep Learning Specialization by Andrew Ng](https://www.coursera.org/specializations/deep-learning)\n    - [MIT-Intoduction to Deep Learning](https://www.youtube.com/playlist?list=PLtBw6njQRU-rwp5__7C0oIVt26ZgjG9NI)\n    - [AladdinPersson](https://www.youtube.com/c/AladdinPersson)\n    \n\n- ### Reinforcement Learning\n  - **Video**\n    - [Foundations of Deep RL](https://www.youtube.com/playlist?list=PLwRJQ4m4UJjNymuBM9RdmB3Z9N5-0IlY0)\n    - [Deep Reinforcement Learning](https://www.youtube.com/playlist?list=PL_iWQOsE6TfURIIhCrlt-wj9ByIVpbfGc)\n    - [Stanford-Reinforcement Learning](https://www.youtube.com/playlist?list=PLoROMvodv4rOSOPzutgyCTapiGlY2Nd8u)\n    \n- ### Neural Networks\n\n  - **Video**\n      - [Neural Networks and Calculus](https://www.youtube.com/c/3blue1brown)\n\n- ### Image Processing\n\n- ### DevOps\n\n  - **Book**\n    - [Python for DevOps: Learn Ruthlessly Effective Automation](https://www.amazon.nl/Python-DevOps-Ruthlessly-Effective-Automation/dp/149205769X)\n\n  - **Community**\n    - [DevOps, SRE, & Infrastructure](https://discord.com/invite/VEEnHkPzY6)\n\n  - **CI/CD**\n    - [CI/CD Full Course | Continuous Integration And Continuous](https://www.youtube.com/watch?v=h9K1NnqwUvE)\n    - [GitLab CI CD Tutorial for Beginners](https://www.youtube.com/watch?v=qP8kir2GUgo)\n\n- ### Hacking\n\n  - **Book**\n    - [Black Hat Python, 2nd Edition: Python Programming for Hackers and Pentesters](https://www.amazon.com/Black-Hat-Python-2nd-Programming/dp/1718501129)\n\n- ### Algorithmic Trading\n\n- ### Bot\n  - #### Web\n\n    - #### Selenium\n      - [Selenium (Main Home)](https://github.com/SeleniumHQ/selenium)\n      - [CDP Documentation](https://chromedevtools.github.io/devtools-protocol/)\n      - [Source](https://github.com/SeleniumHQ/selenium/tree/trunk/py)\n      - [Documentation](https://www.selenium.dev/selenium/docs/api/py/)\n      - [Helium](https://github.com/mherrmann/selenium-python-helium)\n      - [Base](https://github.com/seleniumbase/SeleniumBase)\n      - [InstaPy](https://github.com/InstaPy/InstaPy)\n      - [AutoCrawler](https://github.com/YoongiKim/AutoCrawler)\n      - [Wire](https://github.com/wkeeling/selenium-wire)\n      - [Cucucumber](https://github.com/executeautomation/SeleniumWithCucucumber)\n      - [Requestium](https://github.com/tryolabs/requestium)\n      - [Splinter](https://github.com/cobrateam/splinter) \n      - [Undetected](https://github.com/ultrafunkamsterdam/undetected-chromedriver)\n\n    \n    - #### PlayWright\n      - [Source](https://github.com/microsoft/playwright-python)\n      - [Documentation](https://playwright.dev/python/docs/intro)  \n  \n  \n\n    - #### Browser\n      - [Source](https://wiki.mozilla.org/Auto-tools/Projects/Mozbase)\n      - [Documentation](https://firefox-source-docs.mozilla.org/mozbase/index.html)\n  \n  \n    - #### WebBot\n      - [Source](https://github.com/nateshmbhat/webbot)\n  \n  \n  - #### Telegram\n    - #### Telethon\n      - [Source](https://github.com/LonamiWebs/Telethon)\n      - [Documentation](https://docs.telethon.dev/)\n    \n    - #### Pygram\n      - [Source](https://github.com/pygram/pygram)\n      - [Documentation](https://pygram.readthedocs.io/en/latest/)\n    - #### Pyrogram\n      - [Source](https://github.com/pyrogram/pyrogram)\n      - [Documentation](https://docs.pyrogram.org/)\n    \n    - #### Python Telegram Bot\n      - [Source](https://github.com/python-telegram-bot/python-telegram-bot)\n      - [Documentation](https://python-telegram-bot.readthedocs.io/)\n    \n    - #### AIOGram\n      - [Source](https://github.com/aiogram/aiogram)\n      - [Documentation](https://docs.aiogram.dev/)\n    \n    - #### PyTelegramBotApi\n      - [Source](https://github.com/eternnoir/pyTelegramBotAPI)\n      - [Documentation](https://pytba.readthedocs.io/)\n    \n    - #### TeleBot\n      - [Source](https://github.com/KyleJamesWalker/telebot)\n  \n  - #### Discord\n    - #### DiscordPy\n      - [Source](https://github.com/Rapptz/discord.py)\n      - [Documentation](https://discordpy.readthedocs.io)\n\n  - #### Instagram\n    - #### Instagram-Scraper\n      - [Source](https://github.com/realsirjoe/instagram-scraper)\n    - #### InstaPy  \n      - [Source](https://github.com/InstaPy/InstaPy)\n    - ### Instaloader\n      - [Source](https://github.com/instaloader/instaloader)\n\n## Advanced Topics\n\n  \u26a0\ufe0f The following topics don't have any order or priority of learning.\\\n  \ud83d\udd25 Choose topics that you are **interested in** or **suit your needs**.\n\n- ### Databases\n\n  - #### General\n  \n    - **Book**\n      - \u2705 [Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems](https://www.amazon.com/Designing-Data-Intensive-Applications-Reliable-Maintainable/dp/1449373321)\n      - [Seven Databases in Seven Weeks: A Guide to Modern Databases and the NoSQL Movement](https://www.amazon.com/Seven-Databases-Weeks-Modern-Movement/dp/1680502530/)\n\n  - #### SQLite\n    \n    - **Documentation**\n      - [SQLite Documentation](https://www.sqlite.org/docs.html)\n    \n    - **Tutorials**\n      - [SQLite Tutorial](https://www.sqlitetutorial.net/)\n\n  - #### PostgreSQL\n    \n    - **Documentation**\n      - [PostgreSQL Documentation](https://www.postgresql.org/docs/)\n    \n    - **Book**\n      - [Essential Postgres: Database Development using PostgreSQL](https://www.amazon.com/Essential-Postgres-Database-Development-PostgreSQL/dp/B08KH136G4)\n\n    - **Community**\n      - [PostgreSQL Telegram group](https://t.me/pg_sql)\n  \n    - **Cheat Sheet**\n      - [PostgreSQL Cheat Sheet By GoalKicker](https://books.goalkicker.com/PostgreSQLBook/PostgreSQLNotesForProfessionals.pdf)\n      - [PostgreSQL CHEAT SHEET](https://www.postgresqltutorial.com/wp-content/uploads/2018/03/PostgreSQL-Cheat-Sheet.pdf)\n      - [POSTGRESQL 8.3 PSQL CHEAT SHEET](http://www.postgresonline.com/downloads/special_feature/postgresql83_psql_cheatsheet.pdf)\n    \n    - **Video**\n      - [SQL and PostgreSQL: The Complete Developer's Guide](https://www.udemy.com/course/sql-and-postgresql/)\n\n  - #### MySQL\n    \n    - **Documentation**\n      - [MySQL Documentation](https://dev.mysql.com/doc/)\n    \n    - **Tutorials**\n      - [MySQL Tutorial](https://www.mysqltutorial.org/)\n\n    - **Cheat Sheet**\n      - [MySQL Cheat Sheet by GoalKicker](https://books.goalkicker.com/MySQLBook/MySQLNotesForProfessionals.pdf)\n\n  - #### Oracle\n    \n    - **Documentation**\n      - [Oracle Documentation](https://docs.oracle.com/en/database/index.html)\n    \n    - **Tutorials**\n      - [Oracle Tutorial](https://www.oracletutorial.com/)\n\n    - **Cheat Sheet**\n      - [Oracle Cheat Sheet by GoalKicker](https://books.goalkicker.com/OracleDatabaseBook/OracleDatabaseNotesForProfessionals.pdf)\n\n  - #### MongoDB\n\n    - **Documentation**\n      - [MongoDB Documentation](https://www.mongodb.com/docs/)\n    \n    - **Tutorial**\n      - [Python MongoDB](https://www.w3schools.com/python/python_mongodb_getstarted.asp)\n\n    - **Cheat Sheet**\n      - [MongoDB Cheat Sheet by GoalKicker](https://books.goalkicker.com/MongoDBBook/MongoDBNotesForProfessionals.pdf)\n\n  - #### Redis\n\n    - **Documentation**\n      - [Redis Documentation](https://redis.io/docs/)\n    \n    - **Video**\n      - [Redis Crash Course 1](https://www.youtube.com/watch?v=Hbt56gFj998)\n      - [Redis Crash Course 2](https://www.youtube.com/watch?v=OqCK95AS-YE)\n\n    - **Article**\n      - [How to use redis with python by Brad Solomon](https://realpython.com/python-redis/)\n\n    - **Cheat Sheet**\n      - [Redis Cheat Sheet 1](https://cheatography.com/tasjaevan/cheat-sheets/redis/)\n      - [Redis Cheat Sheet 2](https://masonoise.files.wordpress.com/2010/03/redis-cheatsheet-v1.pdf)\n\n  - #### MemCached\n\n    - **Documentation**\n      - [MemCached Wiki](https://github.com/memcached/memcached/wiki)\n\n  - #### Apache Cassandra\n\n    - **Documentation**\n      - [Apache Cassandra Documentation](https://cassandra.apache.org/_/index.html)\n\n- ### Clean Code\n\n  - **Book**\n    - \u2705 [Clean Code: A Handbook of Agile Software Craftsmanship](https://www.amazon.com/gp/product/0132350882)\n    - \u2705 [Clean Code in Python by Mariano Anaya](https://www.amazon.com/Clean-Code-Python-maintainable-efficient/dp/1800560214)\n    - [Code Complete: A Practical Handbook of Software Construction, Second Edition by Steve Mcconnell](https://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670)\n    - [Clean Python: Elegant Coding in Python by Sunil Kapil](https://www.amazon.com/Clean-Python-Elegant-Coding/dp/1484248775)\n\n\n- ### ORM\n\n  - ### SQLAlchemy\n\n    - **Documentation**\n        - [SQLAlchemy documentation](https://docs.sqlalchemy.org/en/14/)\n      \n    - **Tutorial**\n        - [SQLAlchemy tutorials](https://www.sqlalchemy.org/library.html#tutorials)\n        - [SQLAlchemy ORM tutorial](https://auth0.com/blog/sqlalchemy-orm-tutorial-for-python-developers/)\n\n\n  - ### Django-ORM\n\n    - **Book**\n        - [Django ORM cookbook](https://books.agiliq.com/projects/django-orm-cookbook/en/latest/) (by Agiliq)\n        \n    - **Documentation**\n        - [Django ORM documentation](https://docs.djangoproject.com/en/4.2/topics/db/)\n      \n    - **Tutorial**\n        - [Django ORM examples](https://github.com/django/django/tree/main/tests/queries) (in Django's official GitHub repository)\n        - [Using Django ORM Outside Of Framework](https://abdus.dev/posts/django-orm-standalone/)\n        - [How to use FastAPI with Django ORM and Admin](https://nsikakimoh.com/blog/fastapi-and-django-orm)\n\n  - ### Tortoise\n\n    - **Documentation**\n        - [Tortoise ORM documentation](https://tortoise-orm.readthedocs.io/en/latest/)\n      \n    - **Tutorial**\n      - [Tortoise ORM tutorial](https://tortoise-orm.readthedocs.io/en/latest/examples.html)\n\n  - ### Peewee\n  \n    - **Documentation**\n      - [Peewee documentation](http://docs.peewee-orm.com/en/latest/index.html)\n      \n    - **Tutorial**\n      - [Peewee tutorial](http://docs.peewee-orm.com/en/latest/peewee/quickstart.html)\n      - [Peewee ORM examples](https://github.com/coleifer/peewee/tree/master/examples)\n\n  - ### Pony\n\n    - **Documentation**\n      - [Pony ORM documentation](https://docs.ponyorm.org/)\n      \n    - **Tutorial**\n      - [Pony ORM tutorial](https://docs.ponyorm.org/tutorials/first-steps.html)\n      - [Pony ORM examples](https://github.com/ponyorm/pony/tree/master/examples)\n\n\n\n\n- ### Clean Architecture\n\n  - **Book**\n    - [Clean Architecture: A Craftsman's Guide to Software Structure and Design (Robert C. Martin Series)](https://www.amazon.com/Clean-Architecture-Craftsmans-Software-Structure/dp/0134494164)\n    - [Architecture Patterns with Python: Enabling Test-Driven Development, Domain-Driven Design, and Event-Driven Microservices](https://www.amazon.nl/Architecture-Patterns-Python-Domain-Driven-Microservices-ebook/dp/B085KB31X3)\n\n- ### Caching\n\n  - **Article**\n    - [Caching in django with redis by Real Python](https://realpython.com/caching-in-django-with-redis/)\n\n  - **Video**\n    - [Redis Course - In-Memory Database Tutorial](https://www.youtube.com/watch?v=XCsS_NVAa1g)\n\n- ### Testing\n\n  - #### Python `unittest` package\n  \n    - **Documentation**\n      - [Testing in Python](https://docs.python.org/3/library/unittest.html)\n      - [Getting Started With Testing in Python](https://realpython.com/python-testing/)\n  \n  - #### `PyTest` Testing Package\n    \n    - **Documentation**\n      - [Official PyTest Documentation](https://docs.pytest.org/en/stable/index.html)\n\n  - #### DRF Test Framework\n\n    - **Documentation**\n      - [Testing - Django REST framework](https://www.django-rest-framework.org/api-guide/testing/)\n\n    - **Video**\n      - [Pytest Django and Django Rest Framework](https://www.youtube.com/watch?v=KIIdbVs7e8I&list=PLP1DxoSC17LZTTzgfq0Dimkm6eWJQC9ki)\n\n- ### Container Platforms\n\n  - #### Docker\n  \n    - **Documentation**\n      - [Docker Documentation](https://docs.docker.com/)\n\n    - **Book**\n      - [Docker in Action, Second Edition](https://www.manning.com/books/docker-in-action-second-edition)\n      - [Docker Deep Dive: Zero to Docker in a single book](https://www.amazon.com/Docker-Deep-Dive-Nigel-Poulton-ebook/dp/B01LXWQUFF)\n\n    - **Video**\n      - [Docker Mastery With Django - very academy](https://www.youtube.com/watch?v=W5Ov0H7E_o4&list=PLOLrQ9Pn6cazCfL7v4CdaykNoWMQymM_C)\n      - [Docker Course by Mosh Hamedani](https://codewithmosh.com/p/the-ultimate-docker-course)\n      - [Docker Swarm Step by Step](https://www.youtube.com/watch?v=74p7csxKN8M)\n\n    - **Cheat Sheet**\n      - [Docker Cheat Sheet](https://www.docker.com/wp-content/uploads/2022/03/docker-cheat-sheet.pdf)\n\n  - #### Kubernetes\n  \n    - **Documentation**\n      - [Kubernetes Documentation](https://kubernetes.io/docs/home/)\n\n    - **Video**\n      - [\"Just me and Opensource\" YouTube channel](https://www.youtube.com/playlist?list=PL34sAs7_26wNBRWM6BDhnonoA5FMERax0)\n\n    - **Book**\n      - [Kubernetes: Up and Running, 2nd Edition](https://www.oreilly.com/library/view/kubernetes-up-and/9781492046523)\n      - [Kubernetes in Action, Second Edition](https://www.manning.com/books/kubernetes-in-action-second-edition)\n\n    - **Community**\n      - [Kubernetes Discord group](https://discord.gg/k8s-at-home)\n\n- ### Programming Paradigms\n\n  - #### Object-Oriented Programming\n\n      - **Tutorial**\n        - [Python Classes and Objects by W3Schools (Beginners)](https://www.w3schools.com/python/python_classes.asp)\n        - [Python Object Oriented Programming by programiz.com (Beginners)](https://www.programiz.com/python-programming/object-oriented-programming)\n\n      - **Article**\n        - [Python OOPs Concepts 3 by GeeksForGeeks (Beginners)](https://www.geeksforgeeks.org/python-oops-concepts/)\n        - [Object-Oriented Programming (OOP) in Python 3 by David Amos (Intermediate)](https://realpython.com/python3-object-oriented-programming/#:~:text=Programming%20with%20Python.-,What%20Is%20Object%2DOriented%20Programming%20in%20Python%3F,are%20bundled%20into%20individual%20objects.)\n\n      - **Book**\n        - [Python Object-Oriented Programming](https://www.amazon.com/Python-Object-Oriented-Programming-maintainable-object-oriented/dp/1789615852/ref=pd_sbs_sccl_2_2/138-1551814-9810765?pd_rd_w=jzyei&pf_rd_p=3676f086-9496-4fd7-8490-77cf7f43f846&pf_rd_r=MFK3P1Y675XM2K837YAX&pd_rd_r=392af586-64f4-4790-83f3-4b2ba1954b3d&pd_rd_wg=0Wk4G&pd_rd_i=1789615852&psc=1)\n        \n\n  - #### Functional Programming\n\n    - **Article**\n      - [Functional Programming in Python](https://realpython.com/python-functional-programming/)\n\n\n- ### Architectural Patterns\n\n  - #### Microservice\n\n    - **Book**\n      - [Microservice Architecture](https://www.oreilly.com/library/view/microservice-architecture/9781491956328)\n      - [Building Microservices, 2nd Edition](https://www.oreilly.com/library/view/building-microservices-2nd/9781492034018/)\n\n  - #### Enterprise Applications\n\n    - **Book**\n      - [Patterns of Enterprise Application Architecture](https://www.amazon.de/Patterns-Enterprise-Application-Architecture-Martin/dp/0321127420)\n      - [Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions](https://www.amazon.de/-/en/Gregor-Hohpe/dp/0321200683/)\n\n- ### Design Principles\n\n  - #### SOLID\n\n    - **Article**\n        - [SOLID Principles In Python by Philip Norton](https://www.hashbangcode.com/article/solid-principles-python)\n        - [Uncle Bob's SOLID principles made easy \ud83c\udf40 - in Python!](https://www.youtube.com/watch?v=pTB30aXS77U)\n\n  - #### KISS\n\n  - #### DRY\n\n\n- ### Design Patterns\n\n  - **Book**\n    - [Head First Design Patterns: Building Extensible and Maintainable Object-Oriented Software](https://www.amazon.com/Head-First-Design-Patterns-Object-Oriented/dp/149207800X)\n    - [Django Design Patterns and Best Practices (by Arun Ravindran)](https://www.amazon.com/Django-Design-Patterns-Practices-Industry-standard/dp/1788831349)\n    - [Dive Into Design Patterns by Alexander Shvets](https://refactoring.guru/design-patterns/book)\n\n  - **Video**\n    - [Design Patterns Course by Mosh Hamedani](https://codewithmosh.com/p/design-patterns)\n    - [Become a better software developer](https://www.youtube.com/c/ArjanCodes)\n\n- ### Message Brokers\n\n  - #### RabbitMQ\n\n    - **Documentation**\n      - [RabbitMQ Documentation](https://www.rabbitmq.com/documentation.html)\n\n    - **Cheat Sheet**\n      - [RabbitMQ Cheat Sheet 1](https://cheatography.com/francisuk/cheat-sheets/rabbitmq/pdf/)\n      - [RabbitMQ Cheat Sheet 2](https://lzone.de/cheat-sheet/RabbitMQ)\n\n  - #### Apache Kafka\n \n    - **Documentation**\n      - [Apache Kafka Documentation](https://kafka.apache.org/documentation/)\n\n    - **Cheat Sheet**\n      - [Apache Kafka Cheat Sheet 1](https://gist.github.com/sahilsk/d2a6ec384f5f2333e3fef40a581a97e1)\n      - [Apache Kafka Cheat Sheet 2](https://medium.com/@TimvanBaarsen/apache-kafka-cli-commands-cheat-sheet-a6f06eac01b)\n\n- ### WSGI Servers\n\n  - #### Gunicorn\n  \n    - **Documentation**\n      - [Gunicorn Documentation](https://docs.gunicorn.org/en/stable/)\n\n  - #### uWSGI\n  \n    - **Documentation**\n      - [uWSGI Documentation](https://uwsgi-docs.readthedocs.io/en/latest/)\n\n- ### ASGI Servers\n\n  - #### Uvicorn\n  \n    - **Documentation**\n      - [Uvicorn Documentation](https://www.uvicorn.org/)\n    \n  - #### Starlette\n  \n    - **Documentation**\n      - [Starlette Documentation](https://www.starlette.io/)\n\n- ### Web Servers\n\n  - #### Nginx\n  \n    - **Documentation**\n      - [NGINX Documentation](http://nginx.org/en/docs/)\n\n    - **Book**\n      - [NGINX Cookbook](https://www.nginx.com/resources/library/complete-nginx-cookbook/)\n\n    - **Cheat Sheet**\n      - [NGINX CHEAT SHEET](https://kiza.dev/notes/nginx-cheat-sheet)\n\n  - #### Apache\n  \n    - **Documentation**\n      - [Apache Documentation](https://httpd.apache.org/docs/)\n\n    - **Book**\n      - [Apache Cookbook: Solutions and Examples for Apache Administrators](https://www.amazon.com/Apache-Cookbook-Solutions-Examples-Administrators/dp/0596529945)\n\n    - **Cheat Sheet**\n      - [Apache Cheat Sheet](http://www.cheat-sheets.org/saved-copy/apache-refcard-a4.pdf)\n\n- ### API\n\n  - #### Design\n  \n    - **Guidelines and Best Practices**\n      - \u2705 [Zalando RESTful API and Event Guidelines](https://opensource.zalando.com/restful-api-guidelines/)\n      - [Microsoft REST API Guidelines](https://github.com/microsoft/api-guidelines)\n\n  - #### Security\n\n    - **Checklist**\n      - [API Security Checklist](https://github.com/bobycloud/API-Security-Checklist/blob/master/README-en.md)\n\n- ### Reliability\n\n    - **Book**\n      - \u2705 [Building Secure and Reliable Systems: Best Practices for Designing, Implementing, and Maintaining Systems](https://www.amazon.com/Building-Secure-Reliable-Systems-Implementing/dp/1492083127)\n      - [Site Reliability Engineering: How Google Runs Production Systems](https://www.amazon.com/Site-Reliability-Engineering-Production-Systems/dp/149192912X)\n      - [The Site Reliability Workbook: Practical Ways to Implement SRE](https://www.amazon.com/Site-Reliability-Workbook-Practical-Implement/dp/1492029505)\n      - [Chaos Engineering: System Resiliency in Practice](https://www.amazon.com/Chaos-Engineering-System-Resiliency-Practice/dp/1492043869)\n\n- ### Distributed Systems\n\n  - **Book**\n    - [Distributed Systems: Principles and Paradigms](https://www.amazon.nl/-/en/Maarten-Van-Steen/dp/153028175X)\n    - [Scalability Patterns: Best Practices for Designing High Volume Websites](https://www.amazon.com/Scalability-Patterns-Practices-Designing-Websites/dp/1484210743)\n    - [Distributed Computing with Python](https://www.oreilly.com/library/view/distributed-computing-with/9781785889691/)\n\n- ### Reactive Systems\n\n  - **Book**\n    - [Reactive Microservices Architecture](https://www.oreilly.com/library/view/reactive-microservices-architecture/9781491975664/)\n    - [Hands-On Reactive Programming with Python: Event-driven development unraveled with RxPY](https://www.amazon.nl/Hands-Reactive-Programming-Python-Event-driven/dp/1789138728)\n    - [Reactive Application Development](https://www.manning.com/books/reactive-application-development)\n\n- ### Refactoring\n\n  - **Book**\n    - \u2705 [Refactoring: Improving the Design of Existing Code](https://www.amazon.com/Refactoring-Improving-Design-Existing-Code/dp/0201485672)\n    - [Software Architecture: The Hard Parts: Modern Tradeoff Analysis for Distributed Architectures](https://www.amazon.nl/Software-Architecture-Distributed-Architectures-Trade-Off/dp/1492086894/)\n\n  - **Platform**\n    - \u2705 [Refactoring.guru](https://refactoring.guru/refactoring)\n\n  - **Video**\n    - [Dive Into Refactoring](https://refactoring.guru/refactoring/course)\n\n- ### Security\n\n  - **Book**\n    - [The Web Application Hacker's Handbook](https://www.amazon.com/Web-Application-Hackers-Handbook-Exploiting/dp/1118026470)\n    - [Application_Security_Program_Handbook - a guide for software engineers](https://www.mysterylovescompany.com/book/9781633439818)\n    - [Designing secure software - a guide for devlopers](https://www.amazon.com/Designing-Secure-Software-Guide-Developers/dp/1718501927)\n    - [Hacking APIs Breaking Web Application Programming Interfaces](https://www.amazon.com/Hacking-APIs-Application-Programming-Interfaces/dp/1718502443)\n    - [Web Application Security Exploitation and Countermeasures for Modern Web Applications](https://www.amazon.com/Web-Application-Security-Exploitation-Countermeasures/dp/1492053112)\n    - [Web Security for Developers: Real Threats, Practical Defense](https://www.amazon.com/Web-Security-Developers-Malcolm-McDonald/dp/1593279949)\n    - [Mastering Modern Web Penetration Testing](https://www.amazon.com/Mastering-Modern-Web-Penetration-Testing/dp/1785284584)\n  \n  - **WebSite**\n    - [OWASP Top 10](https://owasp.org/www-project-top-ten/)\n    - [OWASP Top 10 for Web with live training](https://application.security/free/owasp-top-10)\n    - [SANS SWAT Checklist](https://www.sans.org/cloud-security/securing-web-application-technologies/)\n\n- ### Monitoring\n  \n  - **Article**\n    - [log vs metric vs trace](https://microsoft.github.io/code-with-engineering-playbook/observability/log-vs-metric-vs-trace/)\n    - [things to know about observability mechanisms](https://medium.com/@surfd1001/things-to-know-about-observability-mechanisms-a52876e421c7)\n    - [The 3 pillars of observability: Logs, metrics and traces](https://www.techtarget.com/searchitoperations/tip/The-3-pillars-of-observability-Logs-metrics-and-traces)\n    - [ Logging vs Tracing: Why Logs Aren\u2019t Enough to Debug Your Microservices ](https://dev.to/aspecto/logging-vs-tracing-why-logs-aren-t-enough-to-debug-your-microservices-4jgi)\n\n- ### Soft Skill\n\n  - **Book**\n    - [The Clean Coder: A Code of Conduct for Professional Programmers](https://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073)\n\n- ### Public Cloud\n\n  - **Book**\n    - [AWS Certified Solutions Architect Study Guide with 900 Practice Test Questions: Associate (SAA-C03)](https://www.amazon.nl/Certified-Solutions-Architect-Practice-Questions/dp/1119982626)\n    - [Cloud Native Python](https://www.oreilly.com/library/view/cloud-native-python/9781787129313/)\n\n  - **Course**\n    - [Learn AWS Automation with Boto3, Python, and Lambda Functions](https://www.packtpub.com/product/learn-aws-automation-with-boto3-python-and-lambda-functions-video/9781803245317)\n  \n- ### IoT\n\n    - #### Protocol\n      - [Practical MQTT with Steve](http://www.steves-internet-guide.com/)\n\n##### [BACK TO TOP](#top)\n"
}
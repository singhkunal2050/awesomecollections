{
  "repo_name": "toplap_awesome-livecoding",
  "readme_content": "<h1 align=\"center\"> <img src=\"https://raw.githubusercontent.com/toplap/awesome-livecoding/images/toplap-small.png\" alt=\"TOPLAP Logo\"> </h1>\n\n# All things live coding [![Awesome](https://awesome.re/badge.svg)](https://awesome.re)\n\n> A curated list of live coding languages and tools\n\nThis list was created with the intention of giving a quick-glance over the many possibilities to engage in this practice. For further information, head over to [TOPLAP](https://toplap.org).\n\n## Contents\n\n- [What is live coding](#what-is-live-coding)\n- [Websites](#websites)\n- [Community](#community)\n- [Languages](#languages)\n- [Libraries and tools](#libraries-and-tools)\n- [To Watch](#to-watch)\n- [To Read](#to-read)\n- [To Dance](#to-dance)\n- [Conferences](#conferences)\n- [Related lists](#related-lists)\n- [Acknowledgement](#acknowledgement)\n- [How to Contribute](#how-to-contribute)\n- [Code of Conduct](#code-of-conduct)\n\n\n## What is live coding\n\nQuoting [Wikipedia](https://en.wikipedia.org/wiki/Live_coding)\n\n> Live coding (sometimes referred to as 'on-the-fly programming', 'just in time programming' and 'conversational programming') is a performing arts form and a creativity technique centred upon the writing of source code and the use of interactive programming in an improvised way.\n\n\n## Websites\n\n- [TOPLAP](https://toplap.org/) - The home of Live Coding.\n\n## Community\n\n- [livecode mailing list](https://we.lurk.org/mailman3/lists/livecode.we.lurk.org/) - Old school email discussion list, going since 2004!\n  - [Archive from February 2004 - August 2023](https://toplap.org/livecode-archive/)\n  - [Current archive](https://we.lurk.org/archives/list/livecode@we.lurk.org/latest)\n- Web forums\n  - [TOPLAP Forum](https://forum.toplap.org) - A web-based 'discourse' forum for in-depth discussion and exchange around live coding.\n  - [Tidal club](https://club.tidalcycles.org) - A discourse forum for TidalCycles (including for the [video course](https://club.tidalcycles.org/c/course/14?ascending=true&order=created))\n  - [Lines Forum](https://llllllll.co/) - from the monome community, with loads of general music tech threads including [on live coding](https://llllllll.co/t/live-coding/5032) \n- Discord servers for live chat around live coding\n  - [TOPLAP](https://discord.gg/D4Enr5u7Rp) - cross-community live coding chat + discussion \n  - [Estuary](https://discord.gg/twqWteAFA2)\n  - [Hydra](https://discord.gg/cJBs9smhWE)\n  - [Cane](https://discord.gg/UVYAtpYYD2)\n  - [gwion](https://discord.gg/KmHqbTKSmS)\n  - [Pure Data](https://discord.com/invite/AZ43djV)\n  - [SuperCollider](https://discord.gg/bgFf9fm3)\n  - [TidalCycles](https://discord.gg/CqWhZEfNbq)\n  - [ctrlAV](https://discord.gg/WJXDHWwUs6) - A community Twitch Channel for streaming live coding, audiovisual art, tutorials, and mass games.\n- Mastodon\n  - Live coding-related and -adjacent servers include: [sonomu.club](https://sonomu.club/), [assemblag.es](https://assemblag.es) and [post.lurk.org](https://post.lurk.org)\n  - General live coding-related accounts include: [@toplap@assemblag.es ](https://assemblag.es/@toplap) [https://post.lurk.org/@algorave](@algorave@post.lurk.org)\n- [/r/livecoding](https://www.reddit.com/r/livecoding/) - The Live Coding subreddit.\n- [LiveCoders](https://github.com/toplap/livecoders/) - A semi-curated, rather incomplete list of people doing live coding in the performing arts.\n- [Algorithmic Music @ LinuxMusicians](https://linuxmusicians.com/viewforum.php?f=65) - A section of the popular LinuxMusicians forum for discussing live coding languages.\n- [livecode.demozoo.org](https://livecode.demozoo.org) - Archive of demoscene related live coding events.\n\n## Languages\n\n(In Alphabetical Order)\n\n- [afterglow](https://github.com/brunchboy/afterglow) - A live-coding lighting controller, building on the Open Lighting Architecture with Clojure and bits of Overtone.\n\n  `Windows | macOS | GNU/Linux` `lisp` `FLOSS` `audio`\n\n- [Alda](https://github.com/alda-lang/alda) - A music programming language for musicians.\n\n  `Windows | macOS | GNU/Linux` `FLOSS` `audio`\n\n- [Atomiix](https://github.com/rumblesan/atomiix) - A re-implementation and re-invigoration of ixi lang.\n\n  `Windows | macOS | GNU/Linux` `JavaScript` `FLOSS` `SuperCollider` `audio`\n  \n- [Bacalao](https://github.com/totalgee/bacalao) - A live-coding library for SuperCollider inspired by Tidalcycles syntax.\n\n  `Windows | macOS | GNU/Linux` `SuperCollider` `audio`\n\n- [Cane](https://github.com/Jackojc/cane) - A small MIDI sequencer DSL designed around vectors and euclidean rhythms.\n\n  `Windows | macOS | GNU/Linux` `FLOSS` `audio` `MIDI` `Jack`\n\n- [ChucK](http://chuck.cs.princeton.edu/) - Strongly-timed, Concurrent, and On-the-fly Music Programming Language.\n\n  `Windows | macOS | GNU/Linux` `FLOSS` `audio`\n\n- [clive](https://mathr.co.uk/clive/) - Live-coding audio in C.\n\n  `GNU/Linux` `C` `FLOSS` `audio`\n\n- [Conductive](http://www.renickbell.net/doku.php?id=conductive) - A set of Haskell libraries for livecoding and real-time music applications.\n\n  `Windows | macOS | GNU/Linux` `haskell`  `SuperCollider` `FLOSS` `audio`\n\n- [Cyril](http://cyrilcode.com/) - A programming language designed for fast prototyping of visualisations and livecoding visuals.\n\n  `Windows | macOS | GNU/Linux` `openFrameworks` `FLOSS` `visuals`\n\n- [Extempore](https://extemporelang.github.io) - (Previously [Impromptu](http://impromptu.moso.com.au/)) A programming language and runtime environment designed to support 'cyberphysical programming'.\n\n  `Windows | macOS | GNU/Linux` `lisp` `FLOSS` `audio`\n  \n- [Facet](https://github.com/mjcella/facet) - An open source livecoding environment in NodeJS with a text editor in the browser.\n\n  `Windows | macOS | GNU/Linux` `NodeJS` `JavaScript` `midi` `Open Sound Control` `audio` `synthesis`\n\n- [FaustLive](https://faustdoc.grame.fr/manual/overview/#faustlive) - FaustLive is an advanced self-contained prototyping environment for the Faust programming language with an ultra-short edit-compile-run cycle.\n\n  `Windows | macOS | GNU/Linux` `faust` `llvm` `FLOSS` `audio` `DSP`\n\n- [Fluxus](http://www.pawfal.org/fluxus/) - A rapid prototyping, playing and learning environment for 3D graphics, sound and games.\n\n  `Windows | macOS | GNU/Linux | Android | PS2` `racket-lang` `lisp` `FLOSS` `visuals`\n\n- [FoxDot](http://foxdot.org/) - Live Coding with Python and SuperCollider.\n\n  `Windows | macOS | GNU/Linux` `Python` `SuperCollider` `FLOSS` `audio`\n\n- [Gibber](https://gibber.cc/) - Creative coding for JavaScript.\n\n  `Google Chrome | Mozilla Firefox` `web` `JavaScript` `FLOSS` `audio` `visuals`\n  \n- [GLICOL](https://glicol.web.app/) - A graph-oriented live coding language written in Rust.\n\n  `Google Chrome | Mozilla Firefox` `web` `Rust` `JavaScript` `WebAssembly` `FLOSS` `audio` `visuals`\n\n- [gwion](https://github.com/Gwion/Gwion) - :musical_note: strongly-timed musical programming language\n  `Windows | macOS | GNU/Linux` `FLOSS` `audio`\n  \n- [hydra](https://github.com/ojack/hydra) - Live Coding networked visuals in the browser.\n\n  `Google Chrome | Mozilla Firefox` `web` `JavaScript` `FLOSS` `visuals`\n\n- [Improviz](http://github.com/rumblesan/improviz) - An environment for using and abusing primitive shapes and animated textures.\n\n  `Windows | macOS | GNU/Linux` `Haskell` `FLOSS` `visuals`\n\n- [Iannix](https://www.iannix.org/en/) - A graphical open-source sequencer for digital art\n\n  `Windows | macOS | GNU/Linux` `JavaScript` `FLOSS` `audio` `Open Sound Control` `visuals`\n\n- [ixi lang](http://www.ixi-audio.net/) - An experimental project concerned with the creation of digital musical instruments and environments for generative music.\n\n  `Windows | macOS | GNU/Linux` `FLOSS` `SuperCollider` `audio`\n\n- [ossia score](https://ossia.io/) - An interactive sequencer that allows live programming of intermedia, inter-protocol artworks, through a custom visual language.\n\n  `Windows | macOS | GNU/Linux` `C++` `FLOSS` `audio`\n  \n- [kilobeat](https://ijc8.me/kilobeat) - A collaborative web-based dsp livecoding instrument inspired by bytebeat and Gibber.\n\n  `Google Chrome | Mozilla Firefox` `web` `JavaScript` `FLOSS` `audio`\n\n- [Krill](https://github.com/Mdashdotdashn/krill) - Tidal cycle like live coding in NodeJS / Browser.\n\n  `Windows | macOS | GNU/Linux` `NodeJS` `Browser` `FLOSS` `midi`\n  \n- [Limut](https://github.com/sdclibbery/limut) - Live code music and visuals in a web browser.\n  \n  `Google Chrome | Mozilla Firefox | Safari` `web` `JavaScript` `FLOSS` `audio` `visuals`\n\n- [line](https://github.com/pd3v/line) - A tiny command-line midi sequencer and language for live coding.\n  \n  `Windows | macOS | GNU/Linux` `c++` `FLOSS` `midi` `audio`\n\n- [LiveCodeLab](http://livecodelab.net) - A web-based language and environment for VJs, musicians and graphic artists. Allows for immediate and engaging run-as-you-type prototyping, also used in education.\n\n  `Windows | macOS | GNU/Linux` `web` `FLOSS` `visuals` `audio`\n\n- [Max](https://cycling74.com/products/max/) - A visual programming language for media.\n\n  `Windows | macOS` `graphical-language` `Commercial` `audio` `visuals`\n  \n- [Melr\u014dse](https://melr\u014dse.org) - a MIDI producing environment for creating (live) music\n\n  `Windows | macOS | GNU/Linux` `golang` `web` `midi` `MIT`\n\n- [M\u00e9gra.rs](https://github.com/the-drunk-coder/megra.rs) - A high-level, LISP-y live coding language implemented in Rust. Prominently features Markov chains.\n\n   `Windows | macOS | GNU/Linux` `FLOSS` `audio` `LISP` `rust`\n  \n- [Mercury](https://github.com/tmhglnd/mercury) | [Mercury Playground](https://mercury.timohoogland.com) - A highly abstracted minimal language for the live coding of algorithmic music, designed to make code more accessible for both the performer and the audience. Runs in Max or the Browser.\n\n  `Windows | macOS` `Chrome | Firefox` `audio` `visuals` `MaxMSP` `JavaScript`\n\n- [Moonlet](https://github.com/elihugarret/Moonlet) - Lua live coding.\n\n  `Windows | GNU/Linux` `FLOSS` `audio`\n  \n- [Mosaic](https://mosaic.d3cod3.org/) - An openFrameworks based Visual Patching Creative-Coding Platform.\n\n  `Windows | macOS | GNU/Linux` `FLOSS` `graphical-language` `audio` `visuals`\n\n- [Motifn](https://www.motifn.com/) - Code music in Javascript that plays in your DAW or browser\n\n  `Google Chrome | Mozilla Firefox` `web` `JavaScript` `MIDI` `audio` `WebAudio`\n\n- [mutate4l](https://github.com/carrierdown/mutate4l) - Live coding integrated into Ableton Live's session view.\n\n  `Windows | macOS` `Max for Live` `C#` `FLOSS` `audio`\n\n- [Negasonic](https://github.com/merongivian/negasonic) - Live coding in the browser with Ruby.\n\n  `Google Chrome | Mozilla Firefox` `web` `Ruby` `FLOSS` `audio`\n\n- [ORC\u039b](https://github.com/hundredrabbits/Orca) - An esoteric live coding environment with two-dimensional syntax.\n\n  `Windows | macOS | GNU/Linux` `audio` `FLOSS`\n\n- [Overtone](http://overtone.github.io/) - An open source audio environment designed to explore new musical ideas from synthesis and sampling to instrument building, live-coding and collaborative jamming.\n\n  `Windows | macOS | GNU/Linux` `SuperCollider` `lisp` `FLOSS` `audio` `FLOSS`\n\n- [PraxisLive](http://www.praxislive.org/) - Hybrid visual IDE for live creative coding.\n\n  `Windows | macOS | GNU/Linux` `Java` `Processing` `GLSL` `graphical-language` `FLOSS` `visuals` `audio`\n\n- [Pulchra](https://pulchra.netlify.app/) - Live coding language for 3D graphics.\n\n  `Google Chrome | Microsoft Edge | etc.` `Web` `WebGL` `visuals`\n\n- [Pure Data](https://puredata.info/) - An open source visual programming language that can be used to process and generate sound, video, 2D/3D graphics, and interface sensors, input devices, and MIDI.\n\n  `Windows | macOS | GNU/Linux` `graphical-language` `FLOSS` `audio` `visuals`\n\n- ~~[re<urse](https://github.com/carrierdown/recurse)~~ - A language for generating musical patterns.\n\n  `abandoned` `Windows | macOS | GNU/Linux` `TypeScript` `FLOSS` `audio`\n\n- [Repetition.sc](https://github.com/lvm/Repetition.sc) - A set of tools to build a SequenceableCollection of Events.\n\n  `Windows | macOS | GNU/Linux` `SuperCollider` `FLOSS` `audio`\n\n- [Sardine](https://github.com/Bubobubobubobubo/Sardine) A Python based live coding library (MIDI/OSC/SuperDirt).\n\n  `Windows | macOS | GNU/Linux` `Python` `SuperCollider` `FLOSS` `audio` `midi` `Open Sound Control`\n\n- [sema](https://github.com/mimic-sussex/sema) - Sema \u2013 A Playground for Live Coding Music and Machine Learning.\n\n  `Windows | macOS | GNU/Linux` `JavaScript` `FLOSS` `audio`\n\n- [serialist](https://github.com/irritant/serialist) - A live coding environment that generates MIDI messages.\n\n  `Windows | macOS | GNU/Linux` `JavaScript` `FLOSS` `audio`\n\n- [Skoar](https://github.com/sofakid/Skoarcery) - A high-level language for coding music with SuperCollider.\n\n  `Windows | macOS | GNU/Linux` `SuperCollider` `Python` `FLOSS` `audio`\n\n- [Sonic Pi](http://sonic-pi.net/) - The Live Coding music synth for everyone.\n\n  `Windows | macOS | GNU/Linux` `Ruby` `SuperCollider` `FLOSS` `audio`\n\n- [Speccy](https://chr15m.github.io/speccy) - Live code 8-bit algorave in ClojureScript.\n\n  `Windows | macOS | GNU/Linux` `web` `FLOSS` `audio` `lisp`\n\n- [Steno](https://github.com/musikinformatik/Steno) - Concatenative little metalanguage for live coding.\n\n  `Windows | macOS | GNU/Linux` `SuperCollider` `FLOSS` `audio`\n  \n- [Strudel](https://strudel.tidalcycles.org) - Live coding (Tidal-style) algorithmic patterns for the web.\n\n  `Google Chrome | Mozilla Firefox` `web` `JavaScript` `FLOSS` `audio`\n\n- [SuperCollider](http://supercollider.github.io/) - A platform for audio synthesis and algorithmic composition, used by musicians, artists, and researchers working with sound.\n\n  `Windows | macOS | GNU/Linux` `FLOSS` `audio`\n\n- [Synt\u0259](https://github.com/syntelang/syntelang) - A synthesis based live coding language and environment with integrated sound engine.\n\n  `FreeBSD | GNU/Linux` `Go` `audio` `synthesis` `FOSS`\n\n- [synth-x](https://github.com/luiscript/synth-x) - An experimental live coding environment for making music created with modern web technologies.\n\n  `Windows | macOS | GNU/Linux` `JavaScript` `nodejs` `audio`\n\n- [TidalCycles](https://tidalcycles.org/) - Is a language for Live Coding pattern.\n\n  `Windows | macOS | GNU/Linxux` `Haskell` `SuperCollider` `FLOSS` `audio`\n\n- [TimeLines](https://github.com/lnfiniteMonkeys/TimeLines-hs) - A modular synthesizer for live coding the flow of time.\n\n  `Windows | macOS | GNU/Linux` `FLOSS` `Haskell` `SuperCollider` `audio`\n  \n- [tinyspec](https://github.com/nwoeanhinnogaehr/tinyspec-cling) - A C++ live-coding environment for overlap-add (re)synthesis.\n\n  `GNU/Linux` `C++` `FLOSS` `audio`\n  \n- [Tinalla](https://github.com/axelkramble/tinalla/) - Framework Regex based for language parsing written in javascript.\n\n  `Windows | macOS | GNU/Linux` `FLOSS` `Javascript` `SuperCollider` `audio`\n\n- [Topos](https://topos.raphaelforment.fr) - Web-based live coding environment inspired by the Monome Teletype.\n\n  `Google Chrome |\u00a0Mozilla Firefox` `FLOSS` `Javascript` `audio` `midi`\n\n  \n- [Tweakable](https://tweakable.org/) - Visual programming for music, sound and video, used by artists and musicians to make interactive art and music on the web.\n\n  `Google Chrome | Microsoft Edge` `PWA` `web` `JavaScript` `MIDI` `audio` `visuals` `WebAudio`\n\n- [Vivid](http://vivid-synth.com/) - Haskell synth live coding.\n\n  `Haskell` `SuperCollider` `FLOSS` `audio`\n\n- [Vuo](https://vuo.org) - A realtime visual programming language for interactive media.\n\n  `macOS` `visual-language` `FLOSS | Commercial` `visuals`\n\n- [vvvv](https://vvvv.org/) - A hybrid visual/textual live-programming environment for easy prototyping and development.\n\n  `Windows` `visual-language` `Freeware | Commercial` `visuals`\n\n- [WASM-music](https://github.com/petersalomonsen/javascriptmusic/blob/master/wasmaudioworklet/README.md) - A live-coding environment for performance, composition and synthesis in the web-browser.\n\n  `Google Chrome | Mozilla Firefox` `web` `JavaScript` `MIDI` `audio` `WebAudio`\n\n- [Wulfcode](https://github.com/echolevel/wulfcode) - A Midi live-coding environment for performance or composition.\n\n  `macOS | Windows* | GNU/Linux*` `FLOSS` `audio`\n  \n- [zeroone](https://github.com/pd3v/zeroone) - Multi-instrumental, polyphonic, \"DSLish\" API for live coding music in C++.\n\n  `macOS | Windows | GNU/Linux` `FLOSS` `audio`\n\n- [xi](https://github.com/xi-livecode) - A domain-specific language for Live Coding musical patterns in Ruby.\n\n  `Windows | macOS | GNU/Linux` `Ruby` `SuperCollider` `FLOSS` `audio`\n\n\n## Libraries and tools\n\n(Also in Alphabetical Order)\n\n- [ANSIedad](https://github.com/gabochi/ANSIedad) - Generate visuals through a terminal emulator using ANSI escape codes.\n- [Arcadia](https://arcadia-unity.github.io/) - Live coding Clojure in Unity3D.\n- [Arepl](https://github.com/Almenon/AREPL-vscode) - Live coding Python in VSCode.\n- [Automationism](https://www.automatonism.com/) - A modular synthesiser that runs in the open source programming language Pure Data.\n- [blink](https://github.com/crosire/blink) - A library which allows you to edit source code of any Windows C++ project live at runtime.\n- [Bonzomatic](https://github.com/Gargaj/Bonzomatic) - GLSL and HLSL live coding environment, originally designed for live coding competitions at demoparties.\n- [Cascade](https://raphaelbastide.com/cascade/) - A Javascript utility that turns CSS into sound in the web browser, for audio / visual performances.\n- [CaosBox](https://github.com/josecaos/caosbox) - A non-common live coding and algorave sequencer written with SuperCollider.\n- [CHmUsiCK](https://github.com/essteban/CHmUsiCK) - Library to make ChucK a 'more algorave like' language.\n- [cl-collider](https://github.com/byulparan/cl-collider) - A SuperCollider client for CommonLisp.\n- [Cowbells](https://github.com/omkamra/cowbells) - A Clojure library for musical experimentation and live coding.\n- [dafxpipe](https://github.com/nwoeanhinnogaehr/dafxpipe) - Software for live coding audio effects and synths.\n- [diatonic](https://github.com/pd3v/diatonic) - Diatonic transforms for music making.\n- [disclojure](https://github.com/pjagielski/disclojure) - A live coding environment for Overtone and Leipzig.\n- [essence-of-live-coding](https://hackage.haskell.org/package/essence-of-live-coding) - General purpose (console, webservice, audio, graphics) live coding framework in Haskell\n- [EspGrid](https://github.com/d0kt0r0/EspGrid) - Synchronization and sharing for network music.\n- [Extramuros](https://github.com/d0kt0r0/extramuros) - Language-neutral shared-buffer networked live coding system.\n- [Flok](https://munshkr.github.io/flok) - Web-based P2P collaborative editor for live coding music and graphics.\n- [Fragment](https://www.fsynth.com) - Collaborative live GLSL coding environment, additive/spectral/granular synthesizer.\n- [The Force](https://shawnlawson.github.io/The_Force/) - WebGL live coding performance IDE.\n- [Gibberwocky](https://github.com/charlieroberts/gibberwocky) - Use Gibber inside Max/MSP and Max4Live.\n- [Gideros](http://giderosmobile.com/) - Lua 2D game engine with live coding capabilities.\n- [glslViewer](https://github.com/patriciogonzalezvivo/glslViewer) - Live GLSL coding render for macOS and Linux.\n- [hsc3](https://hackage.haskell.org/package/hsc3) - A Haskell SuperCollider client.\n- [HYLOGEN](https://github.com/sleexyz/hylogen) - An embedding of GLSL in Haskell.\n- [incudine](http://incudine.sourceforge.net) - Music/DSP programming environment for Common Lisp.\n- [INSTRUMENT](https://github.com/punksnotdev/INSTRUMENT) - For live coding music and interfacing musical instruments and controllers in SuperCollider.\n- [isobar](https://github.com/ideoforms/isobar) - A Python library for algorithmic composition by expressing and constructing musical patterns.\n- [jet-live](https://github.com/ddovod/jet-live) - A library which implements c++ hot code reload approach for Linux and macOS.\n- [KodeLife](https://hexler.net/software/kodelife) - Real-time GPU shader editor, live-code performance tool and graphics prototyping sketchpad.\n- [LiCK](https://github.com/heuermh/lick) - Library for ChucK, provides intervals, chords, scales, arpeggiators, patterns, effects, etc.\n- [Live Coding Toolkit](https://github.com/algomusic/Live-Coding-Toolkit-for-Pure-Data) - A suite of Pure Data abstractions (predefined functions) for musical live coding.\n- [live coding yotuube](https://livecodingyoutube.github.io) - An experimental web project for creating an audiovisual experience from YouTube videos using code in real time.\n- [LiveCore](https://github.com/freeeco/livecore) - Library for live coding inside Reaktor Core.\n- [L\u00d6VELive :two_hearts:](https://github.com/sharow/lovelive) - Live coding framework for L\u00d6VE(2D Game Engine).\n- [Lua2SC](https://github.com/sonoro1234/Lua2SC) - Lua client for superCollider scsynth and supernova.\n- [Motifn](https://www.motifn.com/) - Code music in Javascript that plays in your DAW or browser\n- [Petal](https://github.com/siaflab/petal) - A small language on Sonic Pi with similar syntax to TidalCycles.\n- [pytebeat](https://github.com/kragen/pytebeat) - A piece of software for doing livecoding [bytebeat](http://canonical.org/%7Ekragen/bytebeat/) performances.\n- [P5LIVE](https://github.com/ffd8/p5live) - p5.js collaborative live-coding vj environment!\n- [p5-live](https://github.com/yangsu/p5-live) - Live Coding for p5.js.\n- [REPL Mode](https://github.com/joelmoniz/REPLmode) - This mode adds in a Read-Evaluate-Print-Loop console to Processing 3.0.\n- [Republic](https://github.com/supercollider-quarks/Republic) - SuperCollider library for conversational coding.\n- [Ronin](https://github.com/hundredrabbits/Ronin) - LISP repl for graphics livecoding.\n- [s2hs2](https://github.com/yecto/s2hs2-TidalCycles-0.8-) - An interface between TidalCycles and Processing.\n- [Siren](https://github.com/cannc4/Siren/) - A tracker interface that embodies abstractions where programming is realized as the medium for pattern sequencing in a modular fashion.\n- [sonic-pixels](https://github.com/emlyn/sonic-pixels) - Interactive lighting effects for Sonic Pi.\n- [Supriya](https://github.com/josiah-wolf-oberholtzer/supriya) - A Python API for SuperCollider.\n- [tidal-autocode](https://atom.io/packages/tidal-autocode) - Auto-generates patterns for TidalCycles (requires [Atom](https://atom.io/) editor).\n- [tidal-chord](https://github.com/fp4me/tidal-chord) - An add-on to the amazing live coding project TidalCycles.\n- [TidalFX](https://github.com/calumgunn/TidalFX) - A haskell package adding weirder effects to Tidal from non-standard UGens.\n- [tidal-maxmsp](https://github.com/datamads/tidal-maxmsp) - Connecting the Tidal live coding environment to MaxMSP.\n- [TidalUnity](https://github.com/moxuse/tidal-unity) - An interface between TidalCycles and Unity 3D.\n- [Tidal-Unity](https://github.com/lvm/Tidal-Unity) - TidalCycles meets Unity 3D.\n- [tida1vm](https://github.com/lvm/tida1vm) - Another TidalCycles environment inside Docker.\n- [tidebox](https://github.com/DoubleDensity/tidebox) - TidalCycles live coding environment inside a Docker container.\n- [total-serialism](https://tmhglnd.github.io/total-serialism/) - A NodeJS package filled with methods designed for algorithmic composition.\n- [Troop](https://github.com/Qirky/Troop) - Real-time collaborative live coding with FoxDot.\n- [VEDA](https://veda.gl/) - Real-time GLSL editor for Atom.\n- [WavTexture](https://github.com/keijiro/WavTexture) - A Unity example showing how to bake a waveform of an audio clip into a texture and use it in a shader.\n- [ZeroBrane Studio](http://studio.zerobrane.com/) - Editor that allows live coding using Lua language.\n\n\n## To Watch\n\n### Documentaries and features\n\n- [Algorave Generation](https://www.youtube.com/watch?v=S2EZqikCIfY) - Resident Advisor.\n- [Algorithms are Thoughts, Chainsaws are Tools](https://vimeo.com/9790850) - A short film on livecoding presented as part of the Critical Code Studies Working Group, March 2010, by Stephen Ramsay.\n- [Live coding for Algoraving](https://www.youtube.com/watch?v=RpzEzUCgVoQ) - Shelly Knotts+Joanne Armitage / workshop supported by YSWN + LCRN.\n- [PBUP - A patchwork portrait](https://www.youtube.com/playlist?list=PLKRUGJaqJkAfU_PaYUeiRzD5qh5tkwvdj) - A documentary about PowerBooks UnPlugged, \"the first acoustic computer band\".\n- [Run the code](https://www.youtube.com/watch?v=h340aNznHnM) - Documentary in The Guardian.\n- [Show Us Your Screens](https://vimeo.com/20241649) - A Documentary about live coding practise by Louis McCallum and Davy Smith.\n- [Sounds of code](https://www.youtube.com/watch?v=uA4SDytz8Aw) - 2019 documentary w/ interviews with live coders.\n\n### Performances, talks, etc\n\n- [Algorave - Algorithmic dance culture](https://www.youtube.com/watch?v=nAGjTYa95HM) - Alex McLean.\n- [Arte Tracks - Live coding and Algorave](https://www.youtube.com/watch?v=X_NQKPH91kM)\n- [ComputerMusic(now)](https://www.youtube.com/watch?v=GSGKEy8vHqg) - Andrew Sorensen.\n- [Hacking Choreography](https://www.youtube.com/watch?v=hoV01_P6PGw) - A live coded dance performance.\n- [ICLC YouTube Channel](https://www.youtube.com/channel/UCN-9RKW_izkIUMH0eQ60H2g/videos?shelf_id=0&view=0&sort=dd) - International Conference on Live Coding.\n- [Programming as Performance](https://www.youtube.com/watch?v=TK1mBqKvIyU) - Sam Aaron.\n- [Programming in Time - Live Coding for creative performances](https://www.youtube.com/watch?v=Sg2BjFQnr9s) - Andrew Sorensen.\n- [SuperCollider Tutorials](https://www.youtube.com/playlist?list=PLPYzvS8A_rTaNDweXe6PX4CXSGq4iEWYC) - A video series by Eli Fieldsteel.\n- [THIS is computer music](https://www.youtube.com/watch?v=S-T8kcSRLL0) - Ge Wang.\n- [TidalCycles YouTube Channel](https://www.youtube.com/channel/UCG5Ynx9mvouuSHYEyxaJ0Cg) - Official channel of the TidalCycles collective.\n\n## To Read\n\n- [Live Coding: A User's Manual](https://livecodingbook.toplap.org/) - Open access book, published by MIT Press\n- [Manifesto (draft)](https://toplap.org/wiki/ManifestoDraft) - Obscurantism is dangerous. Show us your screens.\n- [Origins of Live Coding](http://composerprogrammer.com/research/originsoflivecoding.pdf) - Nick Collins - Durham University.\n- [Herding Cats: Observing Live Coding in the Wild](http://www.mitpressjournals.org/doi/pdf/10.1162/COMJ_a_00216) - Thor Magnusson - Department of Music - University of Sussex.\n- [Algorave: the live coding movement that makes next-level electronic music](http://mixmag.net/feature/algorave) - MixMag magazine article about live coding (2017).\n- [Real DJs Code Live](https://www.wired.com/2006/07/real-djs-code-live/) - Wired magazine article about live coding (2006).\n- [Alex McLean's publications](https://slab.org/publications/) - Conference papers, book chapters and journal articles.\n- [Live Coding Mailing List Archive](https://raw.githubusercontent.com/yaxu/unravelling/master/livecodemlarchive.txt) - A piece of history.\n- [TOPLAP Wiki](https://toplap.org/wiki/Videos,_Articles_and_Papers) - Videos, articles, and papers.\n- [Collaboration and learning through live coding](http://drops.dagstuhl.de/opus/frontdoor.php?source_opus=4420) - Alan Blackwell, Alex McLean, James Noble,  Julian Rohrhuber (2014).\n- [howto_co34pt_liveCode](https://theseanco.github.io/howto_co34pt_liveCode/) - Guide on how to live code in SuperCollider based on the performance practice of live coder co\u00ef\u00bf\u00a5\u00ef\u00be\u00a1pt.\n- [Run the code: is algorave the future of dance music?](https://www.theguardian.com/music/2017/nov/30/is-algorave-the-future-of-dance-music-sheffield-algomech-festival) - Another part of the Guardian\u2019s underground music series (2017).\n\n\n## To Dance\n\n- [Algorave](https://algorave.com/) - Embrace the alien sounds of raves from the past, and introduce alien, futuristic rhythms and beats made through strange, algorithm-aided processes.\n- [Eulerroom](http://www.eulerroom.com/) - Algorithmic music streams, mainly live coded and/or algorave but possibly also stranger things.\n- [Algorave Guidelines](https://github.com/Algorave/guidelines) - Guidelines to host an Algorave.\n\n## Conferences\n\n- [ICLC](http://iclc.toplap.org/) - International Conference on Live Coding.\n- [FARM](http://functional-art.org/) - Workshop on Functional Art, Music, Modeling, and Design.\n- [ICLI](http://www.liveinterfaces.org/) - International Conference on Live Interfaces.\n- [NIME](http://www.nime.org) - New Interfaces for Musical Expression conference.\n- [WAC](https://webaudioconf.com/) - The Web Audio Conference.\n- [HLCI](https://hybrid-livecode.pubpub.org/) - Hybrid Live Coding Interfaces: performance and craft.\n\n## Related lists\n\n- [Awesome Creative Coding](https://github.com/terkelg/awesome-creative-coding) - Creative Coding, Generative Art, Interaction Design, Resources.\n- [Awesome Audio visualization](https://github.com/willianjusten/awesome-audio-visualization) - A curated list about Audio Visualization.\n- [Awesome Music](https://github.com/ciconia/awesome-music) - A categorized collection of awesome music libraries, tools, frameworks and software.\n- [Awesome Live Coding Music](https://github.com/pjagielski/awesome-live-coding-music) - A curated list of awesome Music Live Coding Music environments, libraries and talks.\n- [Programming Languages Used for Music](http://www.nosuch.com/plum/cgi/showlist.cgi?sort=name&concise=yes) - An historical list of languages to produce music.\n- [awesome-musicdsp](https://github.com/olilarkin/awesome-musicdsp) - A curated list of Oli Larkin's favourite music DSP and audio plug-in frameworks.\n- [Awesome SuperCollider](https://github.com/madskjeldgaard/awesome-supercollider) - A curated list of SuperCollider stuff.\n- [Awesome TidalCycles](https://github.com/tidalcycles/awesome-tidalcycles) - An awesome list about the pattern-based live coding system TidalCycles (or just 'Tidal' for short) and its close relatives\n\n\n\n## Acknowledgement\n\nThis has been brought to you by [these](https://github.com/lvm/awesome-livecoding/issues) [contributors](https://github.com/lvm/awesome-livecoding/graphs/contributors).\n\n [<img src=\"https://avatars.githubusercontent.com/u/34095?v=4\" height=50 width=50>](https://github.com/lvm)\n [<img src=\"https://avatars.githubusercontent.com/u/27940?v=4\" height=50 width=50>](https://github.com/yaxu)\n [<img src=\"https://avatars.githubusercontent.com/u/87758?v=4\" height=50 width=50>](https://github.com/NewAlexandria)\n [<img src=\"https://avatars.githubusercontent.com/u/169088?v=4\" height=50 width=50>](https://github.com/rumblesan)\n [<img src=\"https://avatars.githubusercontent.com/u/6239104?v=4\" height=50 width=50>](https://github.com/sicchio)\n [<img src=\"https://avatars.githubusercontent.com/u/4938?v=4\" height=50 width=50>](https://github.com/znmeb)\n [<img src=\"https://avatars.githubusercontent.com/u/82058370?v=4\" height=50 width=50>](https://github.com/a-1219)\n [<img src=\"https://avatars.githubusercontent.com/u/8923320?v=4\" height=50 width=50>](https://github.com/hvillase)\n [<img src=\"https://avatars.githubusercontent.com/u/52702101?v=4\" height=50 width=50>](https://github.com/fpesari)\n [<img src=\"https://avatars.githubusercontent.com/u/151947?v=4\" height=50 width=50>](https://github.com/hellocatfood)\n [<img src=\"https://avatars.githubusercontent.com/u/9406025?v=4\" height=50 width=50>](https://github.com/ddovod)\n [<img src=\"https://avatars.githubusercontent.com/u/2772730?v=4\" height=50 width=50>](https://github.com/jcelerier)\n [<img src=\"https://avatars.githubusercontent.com/u/2441179?v=4\" height=50 width=50>](https://github.com/grz0zrg)\n [<img src=\"https://avatars.githubusercontent.com/u/194295?v=4\" height=50 width=50>](https://github.com/charlieroberts)\n [<img src=\"https://avatars.githubusercontent.com/u/1469068?v=4\" height=50 width=50>](https://github.com/carrierdown)\n [<img src=\"https://avatars.githubusercontent.com/u/1347511?v=4\" height=50 width=50>](https://github.com/ajrussellaudio)\n [<img src=\"https://avatars.githubusercontent.com/u/13080965?v=4\" height=50 width=50>](https://github.com/Almenon)\n [<img src=\"https://avatars.githubusercontent.com/u/332104?v=4\" height=50 width=50>](https://github.com/neuromancer85)\n [<img src=\"https://avatars.githubusercontent.com/u/380241?v=4\" height=50 width=50>](https://github.com/benswift)\n [<img src=\"https://avatars.githubusercontent.com/u/5509162?v=4\" height=50 width=50>](https://github.com/bobvanluijt)\n [<img src=\"https://avatars.githubusercontent.com/u/3170676?v=4\" height=50 width=50>](https://github.com/bgrayburn)\n [<img src=\"https://avatars.githubusercontent.com/u/45191785?v=4\" height=50 width=50>](https://github.com/Bubobubobubobubo)\n [<img src=\"https://avatars.githubusercontent.com/u/67130?v=4\" height=50 width=50>](https://github.com/chr15m)\n [<img src=\"https://avatars.githubusercontent.com/u/10728495?v=4\" height=50 width=50>](https://github.com/claudeha)\n [<img src=\"https://avatars.githubusercontent.com/u/4862?v=4\" height=50 width=50>](https://github.com/munshkr)\n [<img src=\"https://avatars.githubusercontent.com/u/769568?v=4\" height=50 width=50>](https://github.com/davidedc)\n [<img src=\"https://avatars.githubusercontent.com/u/141075?v=4\" height=50 width=50>](https://github.com/d3cod3)\n [<img src=\"https://avatars.githubusercontent.com/u/2049010?v=4\" height=50 width=50>](https://github.com/alvare)\n [<img src=\"https://avatars.githubusercontent.com/u/808571?v=4\" height=50 width=50>](https://github.com/psenough)\n [<img src=\"https://avatars.githubusercontent.com/u/2885827?v=4\" height=50 width=50>](https://github.com/jarmitage)\n\n\n\n## How to Contribute\n\n- Fork this repository.\n- Add the changes you feel appropriate (be it a language, something to read, something to watch, a tool, a conf, etc).\n- Create a Pull Request with a description of what you've modified.\n- ???\n- PROFIT !\n\n\n[Here](contributing.md) is a friendly guide of how to proceed.\n\n## Code of Conduct\n\nThis list follows the [Contributor Covenant](http://contributor-covenant.org/) Code of Conduct v1.4.0, available [here](https://www.contributor-covenant.org/version/1/4/code-of-conduct.html).\n\n> In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\nTL;DR: _Be nice to each other_.\n\n\n## License\n\n[![CC0](http://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)\nThis work is licensed under a [Creative Commons Attribution 4.0 International License](http://creativecommons.org/licenses/by/4.0/).\n\nTo the extent possible under law, [Mauro Lizaur](http://lvm.github.io) has waived all copyright and related or neighboring rights to this work.\n"
}
{
  "repo_name": "vinta_awesome-python",
  "readme_content": "# Awesome Python [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\nA curated list of awesome Python frameworks, libraries, software and resources.\n\nInspired by [awesome-php](https://github.com/ziadoz/awesome-php).\n\n- [Awesome Python](#awesome-python)\n    - [Admin Panels](#admin-panels)\n    - [Algorithms and Design Patterns](#algorithms-and-design-patterns)\n    - [ASGI Servers](#asgi-servers)\n    - [Asynchronous Programming](#asynchronous-programming)\n    - [Audio](#audio)\n    - [Authentication](#authentication)\n    - [Build Tools](#build-tools)\n    - [Built-in Classes Enhancement](#built-in-classes-enhancement)\n    - [Caching](#caching)\n    - [ChatOps Tools](#chatops-tools)\n    - [CMS](#cms)\n    - [Code Analysis](#code-analysis)\n    - [Command-line Interface Development](#command-line-interface-development)\n    - [Command-line Tools](#command-line-tools)\n    - [Compatibility](#compatibility)\n    - [Computer Vision](#computer-vision)\n    - [Concurrency and Parallelism](#concurrency-and-parallelism)\n    - [Configuration](#configuration)\n    - [Cryptography](#cryptography)\n    - [Data Analysis](#data-analysis)\n    - [Data Validation](#data-validation)\n    - [Data Visualization](#data-visualization)\n    - [Database Drivers](#database-drivers)\n    - [Database](#database)\n    - [Date and Time](#date-and-time)\n    - [Debugging Tools](#debugging-tools)\n    - [Deep Learning](#deep-learning)\n    - [DevOps Tools](#devops-tools)\n    - [Distributed Computing](#distributed-computing)\n    - [Distribution](#distribution)\n    - [Documentation](#documentation)\n    - [Downloader](#downloader)\n    - [E-commerce](#e-commerce)\n    - [Editor Plugins and IDEs](#editor-plugins-and-ides)\n    - [Email](#email)\n    - [Enterprise Application Integrations](#enterprise-application-integrations)\n    - [Environment Management](#environment-management)\n    - [Files](#file)\n    - [Foreign Function Interface](#foreign-function-interface)\n    - [Forms](#forms)\n    - [Functional Programming](#functional-programming)\n    - [Game Development](#game-development)\n    - [Geolocation](#geolocation)\n    - [GUI Development](#gui-development)\n    - [Hardware](#hardware)\n    - [HTML Manipulation](#html-manipulation)\n    - [HTTP Clients](#http-clients)\n    - [Image Processing](#image-processing)\n    - [Implementations](#implementations)\n    - [Interactive Interpreter](#interactive-interpreter)\n    - [Internationalization](#internationalization)\n    - [Job Scheduler](#job-scheduler)\n    - [Logging](#logging)\n    - [Machine Learning](#machine-learning)\n    - [Miscellaneous](#miscellaneous)\n    - [Natural Language Processing](#natural-language-processing)\n    - [Network Virtualization](#network-virtualization)\n    - [News Feed](#news-feed)\n    - [ORM](#orm)\n    - [Package Management](#package-management)\n    - [Package Repositories](#package-repositories)\n    - [Penetration testing](#penetration-testing)\n    - [Permissions](#permissions)\n    - [Processes](#processes)\n    - [Recommender Systems](#recommender-systems)\n    - [Refactoring](#refactoring)\n    - [RESTful API](#restful-api)\n    - [Robotics](#robotics)\n    - [RPC Servers](#rpc-servers)\n    - [Science](#science)\n    - [Search](#search)\n    - [Serialization](#serialization)\n    - [Serverless Frameworks](#serverless-frameworks)\n    - [Shell](#shell)\n    - [Specific Formats Processing](#specific-formats-processing)\n    - [Static Site Generator](#static-site-generator)\n    - [Tagging](#tagging)\n    - [Task Queues](#task-queues)\n    - [Template Engine](#template-engine)\n    - [Testing](#testing)\n    - [Text Processing](#text-processing)\n    - [Third-party APIs](#third-party-apis)\n    - [URL Manipulation](#url-manipulation)\n    - [Video](#video)\n    - [Web Asset Management](#web-asset-management)\n    - [Web Content Extracting](#web-content-extracting)\n    - [Web Crawling](#web-crawling)\n    - [Web Frameworks](#web-frameworks)\n    - [WebSocket](#websocket)\n    - [WSGI Servers](#wsgi-servers)\n- [Resources](#resources)\n    - [Books](#books)\n    - [Newsletters](#newsletters)\n    - [Podcasts](#podcasts)\n    - [Websites](#websites)\n- [Contributing](#contributing)\n\n---\n\n## Admin Panels\n\n*Libraries for administrative interfaces.*\n\n* [ajenti](https://github.com/ajenti/ajenti) - The admin panel your servers deserve.\n* [django-grappelli](https://grappelliproject.com/) - A jazzy skin for the Django Admin-Interface.\n* [django-jet](https://github.com/geex-arts/django-jet) - Modern responsive template for the Django admin interface with improved functionality.\n* [django-suit](https://djangosuit.com/) - Alternative Django Admin-Interface (free only for Non-commercial use).\n* [django-xadmin](https://github.com/sshwsfc/xadmin) - Drop-in replacement of Django admin comes with lots of goodies.\n* [flask-admin](https://github.com/flask-admin/flask-admin) - Simple and extensible administrative interface framework for Flask.\n* [flower](https://github.com/mher/flower) - Real-time monitor and web admin for Celery.\n* [jet-bridge](https://github.com/jet-admin/jet-bridge) - Admin panel framework for any application with nice UI (ex Jet Django).\n* [wooey](https://github.com/wooey/wooey) - A Django app which creates automatic web UIs for Python scripts.\n\n## Algorithms and Design Patterns\n\n*Python implementation of data structures, algorithms and design patterns. Also see [awesome-algorithms](https://github.com/tayllan/awesome-algorithms).*\n\n* Algorithms\n    * [algorithms](https://github.com/keon/algorithms) - Minimal examples of data structures and algorithms.\n    * [python-ds](https://github.com/prabhupant/python-ds) - A collection of data structure and algorithms for coding interviews.\n    * [sortedcontainers](https://github.com/grantjenks/python-sortedcontainers) - Fast and pure-Python implementation of sorted collections.\n    * [TheAlgorithms](https://github.com/TheAlgorithms/Python) - All Algorithms implemented in Python.\n* Design Patterns\n    * [PyPattyrn](https://github.com/tylerlaberge/PyPattyrn) - A simple yet effective library for implementing common design patterns.\n    * [python-patterns](https://github.com/faif/python-patterns) - A collection of design patterns in Python.\n    * [transitions](https://github.com/pytransitions/transitions) - A lightweight, object-oriented finite state machine implementation.\n\n## ASGI Servers\n\n*[ASGI](https://asgi.readthedocs.io/en/latest/)-compatible web servers.*\n\n* [daphne](https://github.com/django/daphne) - A HTTP, HTTP2 and WebSocket protocol server for ASGI and ASGI-HTTP.\n* [uvicorn](https://github.com/encode/uvicorn) - A lightning-fast ASGI server implementation, using uvloop and httptools.\n\n## Asynchronous Programming\n\n* [asyncio](https://docs.python.org/3/library/asyncio.html) - (Python standard library) Asynchronous I/O, event loop, coroutines and tasks.\n    - [awesome-asyncio](https://github.com/timofurrer/awesome-asyncio)\n* [trio](https://github.com/python-trio/trio) - A friendly library for async concurrency and I/O.\n* [Twisted](https://twistedmatrix.com/trac/) - An event-driven networking engine.\n* [uvloop](https://github.com/MagicStack/uvloop) - Ultra fast asyncio event loop.\n\n## Audio\n\n*Libraries for manipulating audio and its metadata.*\n\n* Audio\n    * [audioread](https://github.com/beetbox/audioread) - Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.\n    * [audioFlux](https://github.com/libAudioFlux/audioFlux) - A library for audio and music analysis, feature extraction.\n    * [dejavu](https://github.com/worldveil/dejavu) - Audio fingerprinting and recognition.\n    * [kapre](https://github.com/keunwoochoi/kapre) - Keras Audio Preprocessors.\n    * [librosa](https://github.com/librosa/librosa) - Python library for audio and music analysis.\n    * [matchering](https://github.com/sergree/matchering) - A library for automated reference audio mastering.\n    * [mingus](http://bspaans.github.io/python-mingus/) - An advanced music theory and notation package with MIDI file and playback support.\n    * [pyAudioAnalysis](https://github.com/tyiannak/pyAudioAnalysis) - Audio feature extraction, classification, segmentation and applications.\n    * [pydub](https://github.com/jiaaro/pydub) - Manipulate audio with a simple and easy high level interface.\n    * [TimeSide](https://github.com/Parisson/TimeSide) - Open web audio processing framework.\n* Metadata\n    * [beets](https://github.com/beetbox/beets) - A music library manager and [MusicBrainz](https://musicbrainz.org/) tagger.\n    * [eyeD3](https://github.com/nicfit/eyeD3) - A tool for working with audio files, specifically MP3 files containing ID3 metadata.\n    * [mutagen](https://github.com/quodlibet/mutagen) - A Python module to handle audio metadata.\n    * [tinytag](https://github.com/devsnd/tinytag) - A library for reading music meta data of MP3, OGG, FLAC and Wave files.\n\n## Authentication\n\n*Libraries for implementing authentications schemes.*\n\n* OAuth\n    * [authlib](https://github.com/lepture/authlib) - JavaScript Object Signing and Encryption draft implementation.\n    * [django-allauth](https://github.com/pennersr/django-allauth) - Authentication app for Django that \"just works.\"\n    * [django-oauth-toolkit](https://github.com/evonove/django-oauth-toolkit) - OAuth 2 goodies for Django.\n    * [oauthlib](https://github.com/idan/oauthlib) - A generic and thorough implementation of the OAuth request-signing logic.\n    * [python-oauth2](https://github.com/joestump/python-oauth2) - A fully tested, abstract interface to creating OAuth clients and servers.\n    * [python-social-auth](https://github.com/omab/python-social-auth) - An easy-to-setup social authentication mechanism.\n* JWT\n    * [pyjwt](https://github.com/jpadilla/pyjwt) - JSON Web Token implementation in Python.\n    * [python-jose](https://github.com/mpdavis/python-jose/) - A JOSE implementation in Python.\n    * [python-jwt](https://github.com/davedoesdev/python-jwt) - A module for generating and verifying JSON Web Tokens.\n\n## Build Tools\n\n*Compile software from source code.*\n\n* [BitBake](http://www.yoctoproject.org/docs/1.6/bitbake-user-manual/bitbake-user-manual.html) - A make-like build tool for embedded Linux.\n* [buildout](http://www.buildout.org/en/latest/) - A build system for creating, assembling and deploying applications from multiple parts.\n* [PlatformIO](https://github.com/platformio/platformio-core) - A console tool to build code with different development platforms.\n* [pybuilder](https://github.com/pybuilder/pybuilder) - A continuous build tool written in pure Python.\n* [SCons](http://www.scons.org/) - A software construction tool.\n\n## Built-in Classes Enhancement\n\n*Libraries for enhancing Python built-in classes.*\n\n* [attrs](https://github.com/python-attrs/attrs) - Replacement for `__init__`, `__eq__`, `__repr__`, etc. boilerplate in class definitions.\n* [bidict](https://github.com/jab/bidict) - Efficient, Pythonic bidirectional map data structures and related functionality..\n* [Box](https://github.com/cdgriffith/Box) - Python dictionaries with advanced dot notation access.\n* [dataclasses](https://docs.python.org/3/library/dataclasses.html) - (Python standard library) Data classes.\n* [DottedDict](https://github.com/carlosescri/DottedDict) - A library that provides a method of accessing lists and dicts with a dotted path notation.\n\n## CMS\n\n*Content Management Systems.*\n\n* [django-cms](https://www.django-cms.org/en/) - An Open source enterprise CMS based on the Django.\n* [feincms](https://github.com/feincms/feincms) - One of the most advanced Content Management Systems built on Django.\n* [indico](https://github.com/indico/indico) - A feature-rich event management system, made @ [CERN](https://en.wikipedia.org/wiki/CERN).\n* [Kotti](https://github.com/Kotti/Kotti) - A high-level, Pythonic web application framework built on Pyramid.\n* [mezzanine](https://github.com/stephenmcd/mezzanine) - A powerful, consistent, and flexible content management platform.\n* [plone](https://plone.org/) - A CMS built on top of the open source application server Zope.\n* [quokka](https://github.com/rochacbruno/quokka) - Flexible, extensible, small CMS powered by Flask and MongoDB.\n* [wagtail](https://wagtail.io/) - A Django content management system.\n\n## Caching\n\n*Libraries for caching data.*\n\n* [beaker](https://github.com/bbangert/beaker) - A WSGI middleware for sessions and caching.\n* [django-cache-machine](https://github.com/django-cache-machine/django-cache-machine) - Automatic caching and invalidation for Django models.\n* [django-cacheops](https://github.com/Suor/django-cacheops) - A slick ORM cache with automatic granular event-driven invalidation.\n* [dogpile.cache](http://dogpilecache.readthedocs.io/en/latest/) - dogpile.cache is a next generation replacement for Beaker made by the same authors.\n* [HermesCache](https://pypi.org/project/HermesCache/) - Python caching library with tag-based invalidation and dogpile effect prevention.\n* [pylibmc](https://github.com/lericson/pylibmc) - A Python wrapper around the [libmemcached](https://libmemcached.org/libMemcached.html) interface.\n* [python-diskcache](http://www.grantjenks.com/docs/diskcache/) - SQLite and file backed cache backend with faster lookups than memcached and redis.\n\n## ChatOps Tools\n\n*Libraries for chatbot development.*\n\n* [errbot](https://github.com/errbotio/errbot/) - The easiest and most popular chatbot to implement ChatOps.\n\n## Code Analysis\n\n*Tools of static analysis, linters and code quality checkers. Also see [awesome-static-analysis](https://github.com/mre/awesome-static-analysis).*\n\n* Code Analysis\n    * [coala](https://github.com/coala/coala/) - Language independent and easily extendable code analysis application.\n    * [code2flow](https://github.com/scottrogowski/code2flow) - Turn your Python and JavaScript code into DOT flowcharts.\n    * [prospector](https://github.com/PyCQA/prospector) - A tool to analyse Python code.\n    * [pycallgraph](https://github.com/gak/pycallgraph) - A library that visualises the flow (call graph) of your Python application.\n    * [vulture](https://github.com/jendrikseipp/vulture) - A tool for finding and analysing dead Python code.\n* Code Linters\n    * [flake8](https://pypi.org/project/flake8/) - A wrapper around `pycodestyle`, `pyflakes` and McCabe.\n        * [awesome-flake8-extensions](https://github.com/DmytroLitvinov/awesome-flake8-extensions)\n    * [pylama](https://github.com/klen/pylama) - A code audit tool for Python and JavaScript.\n    * [pylint](https://www.pylint.org/) - A fully customizable source code analyzer.\n    * [wemake-python-styleguide](https://github.com/wemake-services/wemake-python-styleguide) - The strictest and most opinionated python linter ever.\n* Code Formatters\n    * [black](https://github.com/python/black) - The uncompromising Python code formatter.\n    * [isort](https://github.com/timothycrosley/isort) - A Python utility / library to sort imports.\n    * [yapf](https://github.com/google/yapf) - Yet another Python code formatter from Google.\n* Static Type Checkers, also see [awesome-python-typing](https://github.com/typeddjango/awesome-python-typing)\n    * [mypy](http://mypy-lang.org/) - Check variable types during compile time.\n    * [pyre-check](https://github.com/facebook/pyre-check) - Performant type checking.\n    * [typeshed](https://github.com/python/typeshed) - Collection of library stubs for Python, with static types.\n* Static Type Annotations Generators\n    * [MonkeyType](https://github.com/Instagram/MonkeyType) - A system for Python that generates static type annotations by collecting runtime types.\n    * [pytype](https://github.com/google/pytype) - Pytype checks and infers types for Python code - without requiring type annotations.\n\n## Command-line Interface Development\n\n*Libraries for building command-line applications.*\n\n* Command-line Application Development\n    * [cement](http://builtoncement.com/) - CLI Application Framework for Python.\n    * [click](http://click.pocoo.org/dev/) - A package for creating beautiful command line interfaces in a composable way.\n    * [cliff](https://docs.openstack.org/developer/cliff/) - A framework for creating command-line programs with multi-level commands.\n    * [docopt](http://docopt.org/) - Pythonic command line arguments parser.\n    * [python-fire](https://github.com/google/python-fire) - A library for creating command line interfaces from absolutely any Python object.\n    * [python-prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit) - A library for building powerful interactive command lines.\n* Terminal Rendering\n    * [alive-progress](https://github.com/rsalmei/alive-progress) - A new kind of Progress Bar, with real-time throughput, eta and very cool animations.\n    * [asciimatics](https://github.com/peterbrittain/asciimatics) - A package to create full-screen text UIs (from interactive forms to ASCII animations).\n    * [bashplotlib](https://github.com/glamp/bashplotlib) - Making basic plots in the terminal.\n    * [colorama](https://pypi.org/project/colorama/) - Cross-platform colored terminal text.\n    * [rich](https://github.com/willmcgugan/rich) - Python library for rich text and beautiful formatting in the terminal. Also provides a great `RichHandler` log handler.\n    * [tqdm](https://github.com/tqdm/tqdm) - Fast, extensible progress bar for loops and CLI.\n\n## Command-line Tools\n\n*Useful CLI-based tools for productivity.*\n\n* Productivity Tools\n    * [copier](https://github.com/pykong/copier) - A library and command-line utility for rendering projects templates.\n    * [cookiecutter](https://github.com/audreyr/cookiecutter) - A command-line utility that creates projects from cookiecutters (project templates).\n    * [doitlive](https://github.com/sloria/doitlive) - A tool for live presentations in the terminal.\n    * [howdoi](https://github.com/gleitz/howdoi) - Instant coding answers via the command line.\n    * [Invoke](https://github.com/pyinvoke/invoke#readme) - A tool for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks.\n    * [PathPicker](https://github.com/facebook/PathPicker) - Select files out of bash output.\n    * [percol](https://github.com/mooz/percol) - Adds flavor of interactive selection to the traditional pipe concept on UNIX.\n    * [thefuck](https://github.com/nvbn/thefuck) - Correcting your previous console command.\n    * [tmuxp](https://github.com/tony/tmuxp) - A [tmux](https://github.com/tmux/tmux) session manager.\n    * [try](https://github.com/timofurrer/try) - A dead simple CLI to try out python packages - it's never been easier.\n* CLI Enhancements\n    * [httpie](https://github.com/jakubroztocil/httpie) - A command line HTTP client, a user-friendly cURL replacement.\n    * [iredis](https://github.com/laixintao/iredis) - Redis CLI with autocompletion and syntax highlighting.\n    * [kube-shell](https://github.com/cloudnativelabs/kube-shell) - An integrated shell for working with the Kubernetes CLI.\n    * [litecli](https://github.com/dbcli/litecli) - SQLite CLI with autocompletion and syntax highlighting.\n    * [mycli](https://github.com/dbcli/mycli) - MySQL CLI with autocompletion and syntax highlighting.\n    * [pgcli](https://github.com/dbcli/pgcli) - PostgreSQL CLI with autocompletion and syntax highlighting.\n    * [saws](https://github.com/donnemartin/saws) - A Supercharged [aws-cli](https://github.com/aws/aws-cli).\n\n## Compatibility\n\n*Libraries for migrating from Python 2 to 3.*\n\n* [python-future](http://python-future.org/index.html) - The missing compatibility layer between Python 2 and Python 3.\n* [modernize](https://github.com/PyCQA/modernize) - Modernizes Python code for eventual Python 3 migration.\n* [six](https://pypi.org/project/six/) - Python 2 and 3 compatibility utilities.\n\n## Computer Vision\n\n*Libraries for Computer Vision.*\n\n* [EasyOCR](https://github.com/JaidedAI/EasyOCR) - Ready-to-use OCR with 40+ languages supported.\n* [Face Recognition](https://github.com/ageitgey/face_recognition) - Simple facial recognition library.\n* [Kornia](https://github.com/kornia/kornia/) - Open Source Differentiable Computer Vision Library for PyTorch.\n* [OpenCV](https://opencv.org/) - Open Source Computer Vision Library.\n* [pytesseract](https://github.com/madmaze/pytesseract) - A wrapper for [Google Tesseract OCR](https://github.com/tesseract-ocr).\n* [SimpleCV](https://github.com/sightmachine/SimpleCV) - An open source framework for building computer vision applications.\n* [tesserocr](https://github.com/sirfz/tesserocr) - Another simple, Pillow-friendly, wrapper around the `tesseract-ocr` API for OCR.\n\n## Concurrency and Parallelism\n\n*Libraries for concurrent and parallel execution. Also see [awesome-asyncio](https://github.com/timofurrer/awesome-asyncio).*\n\n* [concurrent.futures](https://docs.python.org/3/library/concurrent.futures.html) - (Python standard library) A high-level interface for asynchronously executing callables.\n* [eventlet](http://eventlet.net/) - Asynchronous framework with WSGI support.\n* [gevent](http://www.gevent.org/) - A coroutine-based Python networking library that uses [greenlet](https://github.com/python-greenlet/greenlet).\n* [multiprocessing](https://docs.python.org/3/library/multiprocessing.html) - (Python standard library) Process-based parallelism.\n* [scoop](https://github.com/soravux/scoop) - Scalable Concurrent Operations in Python.\n* [uvloop](https://github.com/MagicStack/uvloop) - Ultra fast implementation of `asyncio` event loop on top of `libuv`.\n\n## Configuration\n\n*Libraries for storing and parsing configuration options.*\n\n* [configobj](https://github.com/DiffSK/configobj) - INI file parser with validation.\n* [configparser](https://docs.python.org/3/library/configparser.html) - (Python standard library) INI file parser.\n* [hydra](https://github.com/facebookresearch/hydra) - Hydra is a framework for elegantly configuring complex applications.\n* [profig](https://profig.readthedocs.io/en/latest/) - Config from multiple formats with value conversion.\n* [python-decouple](https://github.com/henriquebastos/python-decouple) - Strict separation of settings from code.\n\n## Cryptography\n\n* [cryptography](https://cryptography.io/en/latest/) - A package designed to expose cryptographic primitives and recipes to Python developers.\n* [paramiko](https://github.com/paramiko/paramiko) - The leading native Python SSHv2 protocol library.\n* [passlib](https://passlib.readthedocs.io/en/stable/) - Secure password storage/hashing library, very high level.\n* [pynacl](https://github.com/pyca/pynacl) - Python binding to the Networking and Cryptography (NaCl) library.\n\n## Data Analysis\n\n*Libraries for data analyzing.*\n\n* [AWS Data Wrangler](https://github.com/awslabs/aws-data-wrangler) - Pandas on AWS.\n* [Blaze](https://github.com/blaze/blaze) - NumPy and Pandas interface to Big Data.\n* [Open Mining](https://github.com/mining/mining) - Business Intelligence (BI) in Pandas interface.\n* [Optimus](https://github.com/ironmussa/Optimus) - Agile Data Science Workflows made easy with PySpark.\n* [Orange](https://orange.biolab.si/) - Data mining, data visualization, analysis and machine learning through visual programming or scripts.\n* [Pandas](http://pandas.pydata.org/) - A library providing high-performance, easy-to-use data structures and data analysis tools.\n\n## Data Validation\n\n*Libraries for validating data. Used for forms in many cases.*\n\n* [Cerberus](https://github.com/pyeve/cerberus) - A lightweight and extensible data validation library.\n* [colander](https://docs.pylonsproject.org/projects/colander/en/latest/) - Validating and deserializing data obtained via XML, JSON, an HTML form post.\n* [jsonschema](https://github.com/Julian/jsonschema) - An implementation of [JSON Schema](http://json-schema.org/) for Python.\n* [schema](https://github.com/keleshev/schema) - A library for validating Python data structures.\n* [Schematics](https://github.com/schematics/schematics) - Data Structure Validation.\n* [valideer](https://github.com/podio/valideer) - Lightweight extensible data validation and adaptation library.\n* [voluptuous](https://github.com/alecthomas/voluptuous) - A Python data validation library.\n\n## Data Visualization\n\n*Libraries for visualizing data. Also see [awesome-javascript](https://github.com/sorrycc/awesome-javascript#data-visualization).*\n\n* [Altair](https://github.com/altair-viz/altair) - Declarative statistical visualization library for Python.\n* [Bokeh](https://github.com/bokeh/bokeh) - Interactive Web Plotting for Python.\n* [bqplot](https://github.com/bloomberg/bqplot) - Interactive Plotting Library for the Jupyter Notebook.\n* [Cartopy](https://github.com/SciTools/cartopy) - A cartographic python library with matplotlib support.\n* [Dash](https://plot.ly/products/dash/) - Built on top of Flask, React and Plotly aimed at analytical web applications.\n    * [awesome-dash](https://github.com/Acrotrend/awesome-dash)\n* [diagrams](https://github.com/mingrammer/diagrams) - Diagram as Code.\n* [Matplotlib](http://matplotlib.org/) - A Python 2D plotting library.\n* [plotnine](https://github.com/has2k1/plotnine) - A grammar of graphics for Python based on ggplot2.\n* [Pygal](http://www.pygal.org/en/latest/) - A Python SVG Charts Creator.\n* [PyGraphviz](https://pypi.org/project/pygraphviz/) - Python interface to [Graphviz](http://www.graphviz.org/).\n* [PyQtGraph](http://www.pyqtgraph.org/) - Interactive and realtime 2D/3D/Image plotting and science/engineering widgets.\n* [Seaborn](https://github.com/mwaskom/seaborn) - Statistical data visualization using Matplotlib.\n* [VisPy](https://github.com/vispy/vispy) - High-performance scientific visualization based on OpenGL.\n\n## Database\n\n*Databases implemented in Python.*\n\n* [pickleDB](https://github.com/patx/pickledb) - A simple and lightweight key-value store for Python.\n* [tinydb](https://github.com/msiemens/tinydb) - A tiny, document-oriented database.\n* [ZODB](https://github.com/zopefoundation/ZODB) - A native object database for Python. A key-value and object graph database.\n\n## Database Drivers\n\n*Libraries for connecting and operating databases.*\n\n* MySQL - [awesome-mysql](http://shlomi-noach.github.io/awesome-mysql/)\n    * [mysqlclient](https://github.com/PyMySQL/mysqlclient-python) - MySQL connector with Python 3 support ([mysql-python](https://sourceforge.net/projects/mysql-python/) fork).\n    * [PyMySQL](https://github.com/PyMySQL/PyMySQL) - A pure Python MySQL driver compatible to mysql-python.\n* PostgreSQL - [awesome-postgres](https://github.com/dhamaniasad/awesome-postgres)\n    * [psycopg2](http://initd.org/psycopg/) - The most popular PostgreSQL adapter for Python.\n    * [queries](https://github.com/gmr/queries) - A wrapper of the psycopg2 library for interacting with PostgreSQL.\n* SQlite - [awesome-sqlite](https://github.com/planetopendata/awesome-sqlite)\n    * [sqlite3](https://docs.python.org/3/library/sqlite3.html) - (Python standard library) SQlite interface compliant with DB-API 2.0\n    * [SuperSQLite](https://github.com/plasticityai/supersqlite) - A supercharged SQLite library built on top of [apsw](https://github.com/rogerbinns/apsw).\n* Other Relational Databases\n    * [pymssql](https://pymssql.readthedocs.io/en/latest/) - A simple database interface to Microsoft SQL Server.\n    * [clickhouse-driver](https://github.com/mymarilyn/clickhouse-driver) - Python driver with native interface for ClickHouse.\n* NoSQL Databases\n    * [cassandra-driver](https://github.com/datastax/python-driver) - The Python Driver for Apache Cassandra.\n    * [happybase](https://github.com/wbolster/happybase) - A developer-friendly library for Apache HBase.\n    * [kafka-python](https://github.com/dpkp/kafka-python) - The Python client for Apache Kafka.\n    * [py2neo](https://py2neo.org/) - A client library and toolkit for working with Neo4j.\n    * [pymongo](https://github.com/mongodb/mongo-python-driver) - The official Python client for MongoDB.\n    * [redis-py](https://github.com/andymccurdy/redis-py) - The Python client for Redis.\n* Asynchronous Clients\n    * [motor](https://github.com/mongodb/motor) - The async Python driver for MongoDB.\n\n## Date and Time\n\n*Libraries for working with dates and times.*\n\n* [Arrow](https://arrow.readthedocs.io/en/latest/) - A Python library that offers a sensible and human-friendly approach to creating, manipulating, formatting and converting dates, times and timestamps.\n* [Chronyk](https://github.com/KoffeinFlummi/Chronyk) - A Python 3 library for parsing human-written times and dates.\n* [dateutil](https://github.com/dateutil/dateutil) - Extensions to the standard Python [datetime](https://docs.python.org/3/library/datetime.html) module.\n* [delorean](https://github.com/myusuf3/delorean/) - A library for clearing up the inconvenient truths that arise dealing with datetimes.\n* [maya](https://github.com/timofurrer/maya) - Datetimes for Humans.\n* [moment](https://github.com/zachwill/moment) - A Python library for dealing with dates/times. Inspired by [Moment.js](http://momentjs.com/).\n* [Pendulum](https://github.com/sdispater/pendulum) - Python datetimes made easy.\n* [PyTime](https://github.com/shinux/PyTime) - An easy-to-use Python module which aims to operate date/time/datetime by string.\n* [pytz](https://launchpad.net/pytz) - World timezone definitions, modern and historical. Brings the [tz database](https://en.wikipedia.org/wiki/Tz_database) into Python.\n* [when.py](https://github.com/dirn/When.py) - Providing user-friendly functions to help perform common date and time actions.\n\n## Debugging Tools\n\n*Libraries for debugging code.*\n\n* pdb-like Debugger\n    * [ipdb](https://github.com/gotcha/ipdb) - IPython-enabled [pdb](https://docs.python.org/3/library/pdb.html).\n    * [pdb++](https://github.com/antocuni/pdb) - Another drop-in replacement for pdb.\n    * [pudb](https://github.com/inducer/pudb) - A full-screen, console-based Python debugger.\n    * [wdb](https://github.com/Kozea/wdb) - An improbable web debugger through WebSockets.\n* Tracing\n    * [lptrace](https://github.com/khamidou/lptrace) - [strace](http://man7.org/linux/man-pages/man1/strace.1.html) for Python programs.\n    * [manhole](https://github.com/ionelmc/python-manhole) - Debugging UNIX socket connections and present the stacktraces for all threads and an interactive prompt.\n    * [pyringe](https://github.com/google/pyringe) - Debugger capable of attaching to and injecting code into Python processes.\n    * [python-hunter](https://github.com/ionelmc/python-hunter) - A flexible code tracing toolkit.\n* Profiler\n    * [line_profiler](https://github.com/rkern/line_profiler) - Line-by-line profiling.\n    * [memory_profiler](https://github.com/fabianp/memory_profiler) - Monitor Memory usage of Python code.\n    * [py-spy](https://github.com/benfred/py-spy) - A sampling profiler for Python programs. Written in Rust.\n    * [pyflame](https://github.com/uber/pyflame) - A ptracing profiler For Python.\n    * [vprof](https://github.com/nvdv/vprof) - Visual Python profiler.\n* Others\n    * [django-debug-toolbar](https://github.com/jazzband/django-debug-toolbar) - Display various debug information for Django.\n    * [django-devserver](https://github.com/dcramer/django-devserver) - A drop-in replacement for Django's runserver.\n    * [flask-debugtoolbar](https://github.com/mgood/flask-debugtoolbar) - A port of the django-debug-toolbar to flask.\n    * [icecream](https://github.com/gruns/icecream) - Inspect variables, expressions, and program execution with a single, simple function call.\n    * [pyelftools](https://github.com/eliben/pyelftools) - Parsing and analyzing ELF files and DWARF debugging information.\n\n## Deep Learning\n\n*Frameworks for Neural Networks and Deep Learning. Also see [awesome-deep-learning](https://github.com/ChristosChristofidis/awesome-deep-learning).*\n\n* [caffe](https://github.com/BVLC/caffe) - A fast open framework for deep learning..\n* [keras](https://github.com/keras-team/keras) - A high-level neural networks library and capable of running on top of either TensorFlow or Theano.\n* [mxnet](https://github.com/dmlc/mxnet) - A deep learning framework designed for both efficiency and flexibility.\n* [pytorch](https://github.com/pytorch/pytorch) - Tensors and Dynamic neural networks in Python with strong GPU acceleration.\n* [SerpentAI](https://github.com/SerpentAI/SerpentAI) - Game agent framework. Use any video game as a deep learning sandbox.\n* [tensorflow](https://github.com/tensorflow/tensorflow) - The most popular Deep Learning framework created by Google.\n* [Theano](https://github.com/Theano/Theano) - A library for fast numerical computation.\n* [lightning](https://github.com/Lightning-AI/lightning) - Deep learning framework to train, deploy, and ship AI products Lightning fast.\n\n## DevOps Tools\n\n*Software and libraries for DevOps.*\n\n* Configuration Management\n    * [ansible](https://github.com/ansible/ansible) - A radically simple IT automation platform.\n    * [cloudinit](https://cloudinit.readthedocs.io/en/latest/) - A multi-distribution package that handles early initialization of a cloud instance.\n    * [OpenStack](https://www.openstack.org/) - Open source software for building private and public clouds.\n    * [pyinfra](https://github.com/Fizzadar/pyinfra) - A versatile CLI tools and python libraries to automate infrastructure.\n    * [saltstack](https://github.com/saltstack/salt) - Infrastructure automation and management system.\n* SSH-style Deployment\n    * [cuisine](https://github.com/sebastien/cuisine) - Chef-like functionality for Fabric.\n    * [fabric](https://github.com/fabric/fabric) - A simple, Pythonic tool for remote execution and deployment.\n    * [fabtools](https://github.com/fabtools/fabtools) - Tools for writing awesome Fabric files.\n* Process Management\n    * [honcho](https://github.com/nickstenning/honcho) - A Python clone of [Foreman](https://github.com/ddollar/foreman), for managing Procfile-based applications.\n    * [supervisor](https://github.com/Supervisor/supervisor) - Supervisor process control system for UNIX.\n* Monitoring\n    * [psutil](https://github.com/giampaolo/psutil) - A cross-platform process and system utilities module.\n* Backup\n    * [BorgBackup](https://www.borgbackup.org/) - A deduplicating archiver with compression and encryption.\n* Others\n    * [docker-compose](https://docs.docker.com/compose/) - Fast, isolated development environments using [Docker](https://www.docker.com/).\n\n## Distributed Computing\n\n*Frameworks and libraries for Distributed Computing.*\n\n* Batch Processing\n    * [dask](https://github.com/dask/dask) - A flexible parallel computing library for analytic computing.\n    * [luigi](https://github.com/spotify/luigi) - A module that helps you build complex pipelines of batch jobs.\n    * [mrjob](https://github.com/Yelp/mrjob) - Run MapReduce jobs on Hadoop or Amazon Web Services.\n    * [PySpark](https://pypi.org/project/pyspark/) - [Apache Spark](https://spark.apache.org/) Python API.\n    * [Ray](https://github.com/ray-project/ray/) - A system for parallel and distributed Python that unifies the machine learning ecosystem.\n* Stream Processing\n    * [faust](https://github.com/robinhood/faust) - A stream processing library, porting the ideas from [Kafka Streams](https://kafka.apache.org/documentation/streams/) to Python.\n    * [streamparse](https://github.com/Parsely/streamparse) - Run Python code against real-time streams of data via [Apache Storm](http://storm.apache.org/).\n\n## Distribution\n\n*Libraries to create packaged executables for release distribution.*\n\n* [dh-virtualenv](https://github.com/spotify/dh-virtualenv) - Build and distribute a virtualenv as a Debian package.\n* [Nuitka](http://nuitka.net/) - Compile scripts, modules, packages to an executable or extension module.\n* [py2app](http://pythonhosted.org/py2app/) - Freezes Python scripts (Mac OS X).\n* [py2exe](http://www.py2exe.org/) - Freezes Python scripts (Windows).\n* [pyarmor](https://github.com/dashingsoft/pyarmor) - A tool used to obfuscate python scripts, bind obfuscated scripts to fixed machine or expire obfuscated scripts.\n* [PyInstaller](https://github.com/pyinstaller/pyinstaller) - Converts Python programs into stand-alone executables (cross-platform).\n* [pynsist](http://pynsist.readthedocs.io/en/latest/) - A tool to build Windows installers, installers bundle Python itself.\n* [shiv](https://github.com/linkedin/shiv) - A command line utility for building fully self-contained zipapps (PEP 441), but with all their dependencies included.\n\n## Documentation\n\n*Libraries for generating project documentation.*\n\n* [sphinx](https://github.com/sphinx-doc/sphinx/) - Python Documentation generator.\n    * [awesome-sphinxdoc](https://github.com/yoloseem/awesome-sphinxdoc)\n* [pdoc](https://github.com/mitmproxy/pdoc) - Epydoc replacement to auto generate API documentation for Python libraries.\n* [pycco](https://github.com/pycco-docs/pycco) - The literate-programming-style documentation generator.\n\n## Downloader\n\n*Libraries for downloading.*\n\n* [akshare](https://github.com/jindaxiang/akshare) - A financial data interface library, built for human beings!\n* [s3cmd](https://github.com/s3tools/s3cmd) - A command line tool for managing Amazon S3 and CloudFront.\n* [s4cmd](https://github.com/bloomreach/s4cmd) - Super S3 command line tool, good for higher performance.\n* [you-get](https://you-get.org/) - A YouTube/Youku/Niconico video downloader written in Python 3.\n* [youtube-dl](https://rg3.github.io/youtube-dl/) - A small command-line program to download videos from YouTube.\n\n## E-commerce\n\n*Frameworks and libraries for e-commerce and payments.*\n\n* [alipay](https://github.com/lxneng/alipay) - Unofficial Alipay API for Python.\n* [Cartridge](https://github.com/stephenmcd/cartridge) - A shopping cart app built using the Mezzanine.\n* [django-oscar](http://oscarcommerce.com/) - An open-source e-commerce framework for Django.\n* [django-shop](https://github.com/awesto/django-shop) - A Django based shop system.\n* [forex-python](https://github.com/MicroPyramid/forex-python) - Foreign exchange rates, Bitcoin price index and currency conversion.\n* [merchant](https://github.com/agiliq/merchant) - A Django app to accept payments from various payment processors.\n* [money](https://github.com/carlospalol/money) - `Money` class with optional CLDR-backed locale-aware formatting and an extensible currency exchange.\n* [python-currencies](https://github.com/Alir3z4/python-currencies) - Display money format and its filthy currencies.\n* [saleor](https://saleor.io/) - Headless open-source e-commerce platform.\n* [shoop](https://www.shuup.com/en/) - An open source E-Commerce platform based on Django.\n\n## Editor Plugins and IDEs\n\n* Emacs\n    * [elpy](https://github.com/jorgenschaefer/elpy) - Emacs Python Development Environment.\n* Sublime Text\n    * [anaconda](https://github.com/DamnWidget/anaconda) - Anaconda turns your Sublime Text 3 in a full featured Python development IDE.\n    * [SublimeJEDI](https://github.com/srusskih/SublimeJEDI) - A Sublime Text plugin to the awesome auto-complete library Jedi.\n* Vim\n    * [jedi-vim](https://github.com/davidhalter/jedi-vim) - Vim bindings for the Jedi auto-completion library for Python.\n    * [python-mode](https://github.com/python-mode/python-mode) - An all in one plugin for turning Vim into a Python IDE.\n    * [YouCompleteMe](https://github.com/Valloric/YouCompleteMe) - Includes [Jedi](https://github.com/davidhalter/jedi)-based completion engine for Python.\n* Visual Studio\n    * [PTVS](https://github.com/Microsoft/PTVS) - Python Tools for Visual Studio.\n* Visual Studio Code\n    * [Python](https://marketplace.visualstudio.com/items?itemName=ms-python.python) - The official VSCode extension with rich support for Python.\n* IDE\n    * [PyCharm](https://www.jetbrains.com/pycharm/) - Commercial Python IDE by JetBrains. Has free community edition available.\n    * [spyder](https://github.com/spyder-ide/spyder) - Open Source Python IDE.\n\n## Email\n\n*Libraries for sending and parsing email.*\n\n* Mail Servers\n    * [modoboa](https://github.com/modoboa/modoboa) - A mail hosting and management platform including a modern Web UI.\n    * [salmon](https://github.com/moggers87/salmon) - A Python Mail Server.\n* Clients\n    * [imbox](https://github.com/martinrusev/imbox) - Python IMAP for Humans.\n    * [yagmail](https://github.com/kootenpv/yagmail) - Yet another Gmail/SMTP client.\n* Others\n    * [flanker](https://github.com/mailgun/flanker) - An email address and Mime parsing library.\n    * [mailer](https://github.com/marrow/mailer) - High-performance extensible mail delivery framework.\n\n## Enterprise Application Integrations\n\n*Platforms and tools for systems integrations in enterprise environments*\n\n* [Zato](https://zato.io) - ESB, SOA, REST, APIs and Cloud Integrations in Python.\n\n## Environment Management\n\n*Libraries for Python version and virtual environment management.*\n\n* [pyenv](https://github.com/pyenv/pyenv) - Simple Python version management.\n* [virtualenv](https://github.com/pypa/virtualenv) - A tool to create isolated Python environments.\n\n## File\n\n*Libraries for file manipulation and MIME type detection.*\n\n* [mimetypes](https://docs.python.org/3/library/mimetypes.html) - (Python standard library) Map filenames to MIME types.\n* [path.py](https://github.com/jaraco/path.py) - A module wrapper for [os.path](https://docs.python.org/3/library/os.path.html).\n* [pathlib](https://docs.python.org/3/library/pathlib.html) - (Python standard library) An cross-platform, object-oriented path library.\n* [PyFilesystem2](https://github.com/pyfilesystem/pyfilesystem2) - Python's filesystem abstraction layer.\n* [python-magic](https://github.com/ahupp/python-magic) - A Python interface to the libmagic file type identification library.\n* [Unipath](https://github.com/mikeorr/Unipath) - An object-oriented approach to file/directory operations.\n* [watchdog](https://github.com/gorakhargosh/watchdog) - API and shell utilities to monitor file system events.\n\n## Foreign Function Interface\n\n*Libraries for providing foreign function interface.*\n\n* [cffi](https://pypi.org/project/cffi/) - Foreign Function Interface for Python calling C code.\n* [ctypes](https://docs.python.org/3/library/ctypes.html) - (Python standard library) Foreign Function Interface for Python calling C code.\n* [PyCUDA](https://mathema.tician.de/software/pycuda/) - A Python wrapper for Nvidia's CUDA API.\n* [SWIG](http://www.swig.org/Doc1.3/Python.html) - Simplified Wrapper and Interface Generator.\n\n## Forms\n\n*Libraries for working with forms.*\n\n* [Deform](https://github.com/Pylons/deform) - Python HTML form generation library influenced by the formish form generation library.\n* [django-bootstrap3](https://github.com/dyve/django-bootstrap3) - Bootstrap 3 integration with Django.\n* [django-bootstrap4](https://github.com/zostera/django-bootstrap4) - Bootstrap 4 integration with Django.\n* [django-crispy-forms](https://github.com/django-crispy-forms/django-crispy-forms) - A Django app which lets you create beautiful forms in a very elegant and DRY way.\n* [django-remote-forms](https://github.com/WiserTogether/django-remote-forms) - A platform independent Django form serializer.\n* [WTForms](https://github.com/wtforms/wtforms) - A flexible forms validation and rendering library.\n\n## Functional Programming\n\n*Functional Programming with Python.*\n\n* [Coconut](https://github.com/evhub/coconut) - A variant of Python built for simple, elegant, Pythonic functional programming.\n* [CyToolz](https://github.com/pytoolz/cytoolz/) - Cython implementation of `Toolz`: High performance functional utilities.\n* [fn.py](https://github.com/kachayev/fn.py) - Functional programming in Python: implementation of missing features to enjoy FP.\n* [funcy](https://github.com/Suor/funcy) - A fancy and practical functional tools.\n* [more-itertools](https://github.com/erikrose/more-itertools) - More routines for operating on iterables, beyond `itertools`.\n* [returns](https://github.com/dry-python/returns) - A set of type-safe monads, transformers, and composition utilities.\n* [Toolz](https://github.com/pytoolz/toolz) - A collection of functional utilities for iterators, functions, and dictionaries.\n\n## GUI Development\n\n*Libraries for working with graphical user interface applications.*\n\n* [curses](https://docs.python.org/3/library/curses.html) - Built-in wrapper for [ncurses](http://www.gnu.org/software/ncurses/) used to create terminal GUI applications.\n* [Eel](https://github.com/ChrisKnott/Eel) - A library for making simple Electron-like offline HTML/JS GUI apps.\n* [enaml](https://github.com/nucleic/enaml) - Creating beautiful user-interfaces with Declarative Syntax like QML.\n* [Flexx](https://github.com/zoofIO/flexx) - Flexx is a pure Python toolkit for creating GUI's, that uses web technology for its rendering.\n* [Gooey](https://github.com/chriskiehl/Gooey) - Turn command line programs into a full GUI application with one line.\n* [kivy](https://kivy.org/) - A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS.\n* [pyglet](https://github.com/pyglet/pyglet) - A cross-platform windowing and multimedia library for Python.\n* [PyGObject](https://wiki.gnome.org/Projects/PyGObject) - Python Bindings for GLib/GObject/GIO/GTK+ (GTK+3).\n* [PyQt](https://doc.qt.io/qtforpython/) - Python bindings for the [Qt](https://www.qt.io/) cross-platform application and UI framework.\n* [PySimpleGUI](https://github.com/PySimpleGUI/PySimpleGUI) - Wrapper for tkinter, Qt, WxPython and Remi.\n* [pywebview](https://github.com/r0x0r/pywebview/) - A lightweight cross-platform native wrapper around a webview component.\n* [Tkinter](https://wiki.python.org/moin/TkInter) - Tkinter is Python's de-facto standard GUI package.\n* [Toga](https://github.com/pybee/toga) - A Python native, OS native GUI toolkit.\n* [urwid](http://urwid.org/) - A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc.\n* [wxPython](https://wxpython.org/) - A blending of the wxWidgets C++ class library with the Python.\n* [DearPyGui](https://github.com/RaylockLLC/DearPyGui/) - A Simple GPU accelerated Python GUI framework\n\n## GraphQL\n\n*Libraries for working with GraphQL.*\n\n* [graphene](https://github.com/graphql-python/graphene/) - GraphQL framework for Python.\n* [tartiflette-aiohttp](https://github.com/tartiflette/tartiflette-aiohttp/) - An `aiohttp`-based wrapper for Tartiflette to expose GraphQL APIs over HTTP.\n* [tartiflette-asgi](https://github.com/tartiflette/tartiflette-asgi/) - ASGI support for the Tartiflette GraphQL engine.\n* [tartiflette](https://tartiflette.io) - SDL-first GraphQL engine implementation for Python 3.6+ and asyncio.\n\n## Game Development\n\n*Awesome game development libraries.*\n\n* [Arcade](https://api.arcade.academy/en/latest/) - Arcade is a modern Python framework for crafting games with compelling graphics and sound.\n* [Cocos2d](http://cocos2d.org/) - cocos2d is a framework for building 2D games, demos, and other graphical/interactive applications.\n* [Harfang3D](http://www.harfang3d.com) - Python framework for 3D, VR and game development.\n* [Panda3D](https://www.panda3d.org/) - 3D game engine developed by Disney.\n* [Pygame](http://www.pygame.org/news.html) - Pygame is a set of Python modules designed for writing games.\n* [PyOgre](http://www.ogre3d.org/tikiwiki/PyOgre) - Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D.\n* [PyOpenGL](http://pyopengl.sourceforge.net/) - Python ctypes bindings for OpenGL and it's related APIs.\n* [PySDL2](https://pysdl2.readthedocs.io) - A ctypes based wrapper for the SDL2 library.\n* [RenPy](https://www.renpy.org/) - A Visual Novel engine.\n\n## Geolocation\n\n*Libraries for geocoding addresses and working with latitudes and longitudes.*\n\n* [django-countries](https://github.com/SmileyChris/django-countries) - A Django app that provides a country field for models and forms.\n* [GeoDjango](https://docs.djangoproject.com/en/dev/ref/contrib/gis/) - A world-class geographic web framework.\n* [GeoIP](https://github.com/maxmind/geoip-api-python) - Python API for MaxMind GeoIP Legacy Database.\n* [geojson](https://github.com/frewsxcv/python-geojson) - Python bindings and utilities for GeoJSON.\n* [geopy](https://github.com/geopy/geopy) - Python Geocoding Toolbox.\n\n## HTML Manipulation\n\n*Libraries for working with HTML and XML.*\n\n* [BeautifulSoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/) - Providing Pythonic idioms for iterating, searching, and modifying HTML or XML.\n* [bleach](https://github.com/mozilla/bleach) - A whitelist-based HTML sanitization and text linkification library.\n* [cssutils](https://pypi.org/project/cssutils/) - A CSS library for Python.\n* [html5lib](https://github.com/html5lib/html5lib-python) - A standards-compliant library for parsing and serializing HTML documents and fragments.\n* [lxml](http://lxml.de/) - A very fast, easy-to-use and versatile library for handling HTML and XML.\n* [MarkupSafe](https://github.com/pallets/markupsafe) - Implements a XML/HTML/XHTML Markup safe string for Python.\n* [pyquery](https://github.com/gawel/pyquery) - A jQuery-like library for parsing HTML.\n* [untangle](https://github.com/stchris/untangle) - Converts XML documents to Python objects for easy access.\n* [WeasyPrint](http://weasyprint.org) - A visual rendering engine for HTML and CSS that can export to PDF.\n* [xmldataset](https://xmldataset.readthedocs.io/en/latest/) - Simple XML Parsing.\n* [xmltodict](https://github.com/martinblech/xmltodict) - Working with XML feel like you are working with JSON.\n\n## HTTP Clients\n\n*Libraries for working with HTTP.*\n\n* [grequests](https://github.com/spyoungtech/grequests) - requests + gevent for asynchronous HTTP requests.\n* [httplib2](https://github.com/httplib2/httplib2) - Comprehensive HTTP client library.\n* [httpx](https://github.com/encode/httpx) - A next generation HTTP client for Python.\n* [requests](https://github.com/psf/requests) - HTTP Requests for Humans.\n* [treq](https://github.com/twisted/treq) - Python requests like API built on top of Twisted's HTTP client.\n* [urllib3](https://github.com/shazow/urllib3) - A HTTP library with thread-safe connection pooling, file post support, sanity friendly.\n\n## Hardware\n\n*Libraries for programming with hardware.*\n\n* [ino](http://inotool.org/) - Command line toolkit for working with [Arduino](https://www.arduino.cc/).\n* [keyboard](https://github.com/boppreh/keyboard) - Hook and simulate global keyboard events on Windows and Linux.\n* [mouse](https://github.com/boppreh/mouse) - Hook and simulate global mouse events on Windows and Linux.\n* [Pingo](http://www.pingo.io/) - Pingo provides a uniform API to program devices like the Raspberry Pi, pcDuino, Intel Galileo, etc.\n* [PyUserInput](https://github.com/SavinaRoja/PyUserInput) - A module for cross-platform control of the mouse and keyboard.\n* [scapy](https://github.com/secdev/scapy) - A brilliant packet manipulation library.\n\n## Image Processing\n\n*Libraries for manipulating images.*\n\n* [hmap](https://github.com/rossgoodwin/hmap) - Image histogram remapping.\n* [imgSeek](https://sourceforge.net/projects/imgseek/) - A project for searching a collection of images using visual similarity.\n* [nude.py](https://github.com/hhatto/nude.py) - Nudity detection.\n* [pagan](https://github.com/daboth/pagan) - Retro identicon (Avatar) generation based on input string and hash.\n* [pillow](https://github.com/python-pillow/Pillow) - Pillow is the friendly [PIL](http://www.pythonware.com/products/pil/) fork.\n* [python-barcode](https://github.com/WhyNotHugo/python-barcode) - Create barcodes in Python with no extra dependencies.\n* [pygram](https://github.com/ajkumar25/pygram) - Instagram-like image filters.\n* [PyMatting](http://github.com/pymatting/pymatting) - A library for alpha matting.\n* [python-qrcode](https://github.com/lincolnloop/python-qrcode) - A pure Python QR Code generator.\n* [pywal](https://github.com/dylanaraps/pywal) - A tool that generates color schemes from images.\n* [pyvips](https://github.com/libvips/pyvips) - A fast image processing library with low memory needs.\n* [Quads](https://github.com/fogleman/Quads) - Computer art based on quadtrees.\n* [scikit-image](http://scikit-image.org/) - A Python library for (scientific) image processing.\n* [thumbor](https://github.com/thumbor/thumbor) - A smart imaging service. It enables on-demand crop, re-sizing and flipping of images.\n* [wand](https://github.com/dahlia/wand) - Python bindings for [MagickWand](http://www.imagemagick.org/script/magick-wand.php), C API for ImageMagick.\n\n## Implementations\n\n*Implementations of Python.*\n\n* [CLPython](https://github.com/metawilm/cl-python) - Implementation of the Python programming language written in Common Lisp.\n* [CPython](https://github.com/python/cpython) - **Default, most widely used implementation of the Python programming language written in C.**\n* [Cython](http://cython.org/) - Optimizing Static Compiler for Python.\n* [Grumpy](https://github.com/google/grumpy) - More compiler than interpreter as more powerful CPython2.7 replacement (alpha).\n* [IronPython](https://github.com/IronLanguages/ironpython3) - Implementation of the Python programming language written in C#.\n* [Jython](https://hg.python.org/jython) - Implementation of Python programming language written in Java for the JVM.\n* [MicroPython](https://github.com/micropython/micropython) - A lean and efficient Python programming language implementation.\n* [Numba](http://numba.pydata.org/) - Python JIT compiler to LLVM aimed at scientific Python.\n* [PeachPy](https://github.com/Maratyszcza/PeachPy) - x86-64 assembler embedded in Python.\n* [Pyjion](https://github.com/Microsoft/Pyjion) - A JIT for Python based upon CoreCLR.\n* [PyPy](https://foss.heptapod.net/pypy/pypy) - A very fast and compliant implementation of the Python language.\n* [Pyston](https://github.com/pyston/pyston/) - A Python implementation using JIT techniques.\n* [Stackless Python](https://github.com/stackless-dev/stackless) - An enhanced version of the Python programming language.\n\n## Interactive Interpreter\n\n*Interactive Python interpreters (REPL).*\n\n* [bpython](https://github.com/bpython/bpython) - A fancy interface to the Python interpreter.\n* [Jupyter Notebook (IPython)](https://jupyter.org) - A rich toolkit to help you make the most out of using Python interactively.\n    * [awesome-jupyter](https://github.com/markusschanta/awesome-jupyter)\n* [ptpython](https://github.com/jonathanslenders/ptpython) - Advanced Python REPL built on top of the [python-prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit).\n\n## Internationalization\n\n*Libraries for working with i18n.*\n\n* [Babel](http://babel.pocoo.org/en/latest/) - An internationalization library for Python.\n* [PyICU](https://github.com/ovalhub/pyicu) - A wrapper of International Components for Unicode C++ library ([ICU](http://site.icu-project.org/)).\n\n## Job Scheduler\n\n*Libraries for scheduling jobs.*\n\n* [Airflow](https://airflow.apache.org/) - Airflow is a platform to programmatically author, schedule and monitor workflows.\n* [APScheduler](http://apscheduler.readthedocs.io/en/latest/) - A light but powerful in-process task scheduler that lets you schedule functions.\n* [django-schedule](https://github.com/thauber/django-schedule) - A calendaring app for Django.\n* [doit](http://pydoit.org/) - A task runner and build tool.\n* [gunnery](https://github.com/gunnery/gunnery) - Multipurpose task execution tool for distributed systems with web-based interface.\n* [Joblib](https://joblib.readthedocs.io/) - A set of tools to provide lightweight pipelining in Python.\n* [Plan](https://github.com/fengsp/plan) - Writing crontab file in Python like a charm.\n* [Prefect](https://github.com/PrefectHQ/prefect) - A modern workflow orchestration framework that makes it easy to build, schedule and monitor robust data pipelines.\n* [schedule](https://github.com/dbader/schedule) - Python job scheduling for humans.\n* [Spiff](https://github.com/knipknap/SpiffWorkflow) - A powerful workflow engine implemented in pure Python.\n* [TaskFlow](https://docs.openstack.org/developer/taskflow/) - A Python library that helps to make task execution easy, consistent and reliable.\n\n## Logging\n\n*Libraries for generating and working with logs.*\n\n* [logbook](http://logbook.readthedocs.io/en/stable/) - Logging replacement for Python.\n* [logging](https://docs.python.org/3/library/logging.html) - (Python standard library) Logging facility for Python.\n* [loguru](https://github.com/Delgan/loguru) - Library which aims to bring enjoyable logging in Python.\n* [sentry-python](https://github.com/getsentry/sentry-python) - Sentry SDK for Python.\n* [structlog](https://www.structlog.org/en/stable/) - Structured logging made easy.\n\n## Machine Learning\n\n*Libraries for Machine Learning. Also see [awesome-machine-learning](https://github.com/josephmisiti/awesome-machine-learning#python).*\n\n* [gym](https://github.com/openai/gym) - A toolkit for developing and comparing reinforcement learning algorithms.\n* [H2O](https://github.com/h2oai/h2o-3) - Open Source Fast Scalable Machine Learning Platform.\n* [Metrics](https://github.com/benhamner/Metrics) - Machine learning evaluation metrics.\n* [NuPIC](https://github.com/numenta/nupic) - Numenta Platform for Intelligent Computing.\n* [scikit-learn](http://scikit-learn.org/) - The most popular Python library for Machine Learning.\n* [Spark ML](http://spark.apache.org/docs/latest/ml-guide.html) - [Apache Spark](http://spark.apache.org/)'s scalable Machine Learning library.\n* [vowpal_porpoise](https://github.com/josephreisinger/vowpal_porpoise) - A lightweight Python wrapper for [Vowpal Wabbit](https://github.com/JohnLangford/vowpal_wabbit/).\n* [xgboost](https://github.com/dmlc/xgboost) - A scalable, portable, and distributed gradient boosting library.\n* [MindsDB](https://github.com/mindsdb/mindsdb) - MindsDB is an open source AI layer for existing databases that allows you to effortlessly develop, train and deploy state-of-the-art machine learning models using standard queries.\n\n## Microsoft Windows\n\n*Python programming on Microsoft Windows.*\n\n* [Python(x,y)](http://python-xy.github.io/) - Scientific-applications-oriented Python Distribution based on Qt and Spyder.\n* [pythonlibs](http://www.lfd.uci.edu/~gohlke/pythonlibs/) - Unofficial Windows binaries for Python extension packages.\n* [PythonNet](https://github.com/pythonnet/pythonnet) - Python Integration with the .NET Common Language Runtime (CLR).\n* [PyWin32](https://github.com/mhammond/pywin32) - Python Extensions for Windows.\n* [WinPython](https://winpython.github.io/) - Portable development environment for Windows 7/8.\n\n## Miscellaneous\n\n*Useful libraries or tools that don't fit in the categories above.*\n\n* [blinker](https://github.com/jek/blinker) - A fast Python in-process signal/event dispatching system.\n* [boltons](https://github.com/mahmoud/boltons) - A set of pure-Python utilities.\n* [itsdangerous](https://github.com/pallets/itsdangerous) - Various helpers to pass trusted data to untrusted environments.\n* [magenta](https://github.com/magenta/magenta) - A tool to generate music and art using artificial intelligence.\n* [pluginbase](https://github.com/mitsuhiko/pluginbase) - A simple but flexible plugin system for Python.\n* [tryton](http://www.tryton.org/) - A general purpose business framework.\n\n## Natural Language Processing\n\n*Libraries for working with human languages.*\n\n- General\n    * [gensim](https://github.com/RaRe-Technologies/gensim) - Topic Modeling for Humans.\n    * [langid.py](https://github.com/saffsd/langid.py) - Stand-alone language identification system.\n    * [nltk](http://www.nltk.org/) - A leading platform for building Python programs to work with human language data.\n    * [pattern](https://github.com/clips/pattern) - A web mining module.\n    * [polyglot](https://github.com/aboSamoor/polyglot) - Natural language pipeline supporting hundreds of languages.\n    * [pytext](https://github.com/facebookresearch/pytext) - A natural language modeling framework based on PyTorch.\n    * [PyTorch-NLP](https://github.com/PetrochukM/PyTorch-NLP) - A toolkit enabling rapid deep learning NLP prototyping for research.\n    * [spacy](https://spacy.io/) - A library for industrial-strength natural language processing in Python and Cython.\n    * [Stanza](https://github.com/stanfordnlp/stanza) - The Stanford NLP Group's official Python library, supporting 60+ languages.\n- Chinese\n    * [funNLP](https://github.com/fighting41love/funNLP) - A collection of tools and datasets for Chinese NLP.\n    * [jieba](https://github.com/fxsjy/jieba) - The most popular Chinese text segmentation library.\n    * [pkuseg-python](https://github.com/lancopku/pkuseg-python) - A toolkit for Chinese word segmentation in various domains.\n    * [snownlp](https://github.com/isnowfy/snownlp) - A library for processing Chinese text.\n\n## Network Virtualization\n\n*Tools and libraries for Virtual Networking and SDN (Software Defined Networking).*\n\n* [mininet](https://github.com/mininet/mininet) - A popular network emulator and API written in Python.\n* [napalm](https://github.com/napalm-automation/napalm) - Cross-vendor API to manipulate network devices.\n* [pox](https://github.com/noxrepo/pox) - A Python-based SDN control applications, such as OpenFlow SDN controllers.\n\n## News Feed\n\n*Libraries for building user's activities.*\n\n* [django-activity-stream](https://github.com/justquick/django-activity-stream) - Generating generic activity streams from the actions on your site.\n* [Stream Framework](https://github.com/tschellenbach/Stream-Framework) - Building news feed and notification systems using Cassandra and Redis.\n\n## ORM\n\n*Libraries that implement Object-Relational Mapping or data mapping techniques.*\n\n* Relational Databases\n    * [Django Models](https://docs.djangoproject.com/en/dev/topics/db/models/) - The Django ORM.\n    * [SQLAlchemy](https://www.sqlalchemy.org/) - The Python SQL Toolkit and Object Relational Mapper.\n        * [awesome-sqlalchemy](https://github.com/dahlia/awesome-sqlalchemy)\n    * [dataset](https://github.com/pudo/dataset) - Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL.\n    * [orator](https://github.com/sdispater/orator) -  The Orator ORM provides a simple yet beautiful ActiveRecord implementation.\n    * [orm](https://github.com/encode/orm) - An async ORM.\n    * [peewee](https://github.com/coleifer/peewee) - A small, expressive ORM.\n    * [pony](https://github.com/ponyorm/pony/) - ORM that provides a generator-oriented interface to SQL.\n    * [pydal](https://github.com/web2py/pydal/) - A pure Python Database Abstraction Layer.\n* NoSQL Databases\n    * [hot-redis](https://github.com/stephenmcd/hot-redis) - Rich Python data types for Redis.\n    * [mongoengine](https://github.com/MongoEngine/mongoengine) - A Python Object-Document-Mapper for working with MongoDB.\n    * [PynamoDB](https://github.com/pynamodb/PynamoDB) - A Pythonic interface for [Amazon DynamoDB](https://aws.amazon.com/dynamodb/).\n    * [redisco](https://github.com/kiddouk/redisco) - A Python Library for Simple Models and Containers Persisted in Redis.\n\n## Package Management\n\n*Libraries for package and dependency management.*\n\n* [pip](https://pip.pypa.io/en/stable/) - The package installer for Python.\n    * [pip-tools](https://github.com/jazzband/pip-tools) - A set of tools to keep your pinned Python dependencies fresh.\n    * [PyPI](https://pypi.org/)\n* [conda](https://github.com/conda/conda/) - Cross-platform, Python-agnostic binary package manager.\n* [poetry](https://github.com/sdispater/poetry) - Python dependency management and packaging made easy.\n\n## Package Repositories\n\n*Local PyPI repository server and proxies.*\n\n* [bandersnatch](https://github.com/pypa/bandersnatch/) - PyPI mirroring tool provided by Python Packaging Authority (PyPA).\n* [devpi](https://github.com/devpi/devpi) - PyPI server and packaging/testing/release tool.\n* [localshop](https://github.com/jazzband/localshop) - Local PyPI server (custom packages and auto-mirroring of pypi).\n* [warehouse](https://github.com/pypa/warehouse) - Next generation Python Package Repository (PyPI).\n\n## Penetration Testing\n\n*Frameworks and tools for penetration testing.*\n\n* [fsociety](https://github.com/Manisso/fsociety) - A Penetration testing framework.\n* [setoolkit](https://github.com/trustedsec/social-engineer-toolkit) - A toolkit for social engineering.\n* [sqlmap](https://github.com/sqlmapproject/sqlmap) - Automatic SQL injection and database takeover tool.\n\n## Permissions\n\n*Libraries that allow or deny users access to data or functionality.*\n\n* [django-guardian](https://github.com/django-guardian/django-guardian) - Implementation of per object permissions for Django 1.2+\n* [django-rules](https://github.com/dfunckt/django-rules) - A tiny but powerful app providing object-level permissions to Django, without requiring a database.\n\n## Processes\n\n*Libraries for starting and communicating with OS processes.*\n\n* [delegator.py](https://github.com/amitt001/delegator.py) - [Subprocesses](https://docs.python.org/3/library/subprocess.html) for Humans 2.0.\n* [sarge](https://sarge.readthedocs.io/en/latest/) - Yet another wrapper for subprocess.\n* [sh](https://github.com/amoffat/sh) - A full-fledged subprocess replacement for Python.\n\n## Recommender Systems\n\n*Libraries for building recommender systems.*\n\n* [annoy](https://github.com/spotify/annoy) - Approximate Nearest Neighbors in C++/Python optimized for memory usage.\n* [fastFM](https://github.com/ibayer/fastFM) - A library for Factorization Machines.\n* [implicit](https://github.com/benfred/implicit) - A fast Python implementation of collaborative filtering for implicit datasets.\n* [libffm](https://github.com/guestwalk/libffm) - A library for Field-aware Factorization Machine (FFM).\n* [lightfm](https://github.com/lyst/lightfm) - A Python implementation of a number of popular recommendation algorithms.\n* [spotlight](https://github.com/maciejkula/spotlight) - Deep recommender models using PyTorch.\n* [Surprise](https://github.com/NicolasHug/Surprise) - A scikit for building and analyzing recommender systems.\n* [tensorrec](https://github.com/jfkirk/tensorrec) - A Recommendation Engine Framework in TensorFlow.\n\n## Refactoring\n\n*Refactoring tools and libraries for Python*\n\n * [Bicycle Repair Man](http://bicyclerepair.sourceforge.net/) - Bicycle Repair Man, a refactoring tool for Python.\n * [Bowler](https://pybowler.io/) - Safe code refactoring for modern Python.\n * [Rope](https://github.com/python-rope/rope) -  Rope is a python refactoring library.\n\n## RESTful API\n\n*Libraries for building RESTful APIs.*\n\n* Django\n    * [django-rest-framework](http://www.django-rest-framework.org/) - A powerful and flexible toolkit to build web APIs.\n    * [django-tastypie](http://tastypieapi.org/) - Creating delicious APIs for Django apps.\n* Flask\n    * [eve](https://github.com/pyeve/eve) - REST API framework powered by Flask, MongoDB and good intentions.\n    * [flask-api](https://github.com/flask-api/flask-api) - Browsable Web APIs for Flask.\n    * [flask-restful](https://github.com/flask-restful/flask-restful) - Quickly building REST APIs for Flask.\n* Pyramid\n    * [cornice](https://github.com/Cornices/cornice) - A RESTful framework for Pyramid.\n* Framework agnostic\n    * [apistar](https://github.com/encode/apistar) - A smart Web API framework, designed for Python 3.\n    * [falcon](https://github.com/falconry/falcon) - A high-performance framework for building cloud APIs and web app backends.\n    * [fastapi](https://github.com/tiangolo/fastapi) - A modern, fast, web framework for building APIs with Python 3.6+ based on standard Python type hints.\n    * [hug](https://github.com/hugapi/hug) - A Python 3 framework for cleanly exposing APIs.\n    * [sandman2](https://github.com/jeffknupp/sandman2) - Automated REST APIs for existing database-driven systems.\n    * [sanic](https://github.com/huge-success/sanic) - A Python 3.6+ web server and web framework that's written to go fast.\n    * [vibora](https://vibora.io/) - Fast, efficient and asynchronous Web framework inspired by Flask.\n\n## Robotics\n\n*Libraries for robotics.*\n\n* [PythonRobotics](https://github.com/AtsushiSakai/PythonRobotics) - This is a compilation of various robotics algorithms with visualizations.\n* [rospy](http://wiki.ros.org/rospy) - This is a library for ROS (Robot Operating System).\n\n## RPC Servers\n\n*RPC-compatible servers.*\n\n* [RPyC](https://github.com/tomerfiliba/rpyc) (Remote Python Call) - A transparent and symmetric RPC library for Python\n* [zeroRPC](https://github.com/0rpc/zerorpc-python) - zerorpc is a flexible RPC implementation based on [ZeroMQ](http://zeromq.org/) and [MessagePack](http://msgpack.org/).\n\n## Science\n\n*Libraries for scientific computing. Also see [Python-for-Scientists](https://github.com/TomNicholas/Python-for-Scientists).*\n\n* [astropy](http://www.astropy.org/) - A community Python library for Astronomy.\n* [bcbio-nextgen](https://github.com/chapmanb/bcbio-nextgen) - Providing best-practice pipelines for fully automated high throughput sequencing analysis.\n* [bccb](https://github.com/chapmanb/bcbb) - Collection of useful code related to biological analysis.\n* [Biopython](http://biopython.org/wiki/Main_Page) - Biopython is a set of freely available tools for biological computation.\n* [cclib](http://cclib.github.io/) - A library for parsing and interpreting the results of computational chemistry packages.\n* [Colour](http://colour-science.org/) - Implementing a comprehensive number of colour theory transformations and algorithms.\n* [Karate Club](https://github.com/benedekrozemberczki/karateclub) - Unsupervised machine learning toolbox for graph structured data.\n* [NetworkX](https://networkx.github.io/) - A high-productivity software for complex networks.\n* [NIPY](http://nipy.org) - A collection of neuroimaging toolkits.\n* [NumPy](http://www.numpy.org/) - A fundamental package for scientific computing with Python.\n* [ObsPy](https://github.com/obspy/obspy/wiki/) - A Python toolbox for seismology.\n* [Open Babel](http://openbabel.org/wiki/Main_Page) - A chemical toolbox designed to speak the many languages of chemical data.\n* [PyDy](http://www.pydy.org/) - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion.\n* [PyMC](https://github.com/pymc-devs/pymc3) - Markov Chain Monte Carlo sampling toolkit.\n* [QuTiP](http://qutip.org/) - Quantum Toolbox in Python.\n* [RDKit](http://www.rdkit.org/) - Cheminformatics and Machine Learning Software.\n* [SciPy](https://www.scipy.org/) - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\n* [SimPy](https://gitlab.com/team-simpy/simpy) -  A process-based discrete-event simulation framework.\n* [statsmodels](https://github.com/statsmodels/statsmodels) - Statistical modeling and econometrics in Python.\n* [SymPy](https://github.com/sympy/sympy) - A Python library for symbolic mathematics.\n* [Zipline](https://github.com/quantopian/zipline) - A Pythonic algorithmic trading library.\n\n## Search\n\n*Libraries and software for indexing and performing search queries on data.*\n\n* [django-haystack](https://github.com/django-haystack/django-haystack) - Modular search for Django.\n* [elasticsearch-dsl-py](https://github.com/elastic/elasticsearch-dsl-py) - The official high-level Python client for Elasticsearch.\n* [elasticsearch-py](https://www.elastic.co/guide/en/elasticsearch/client/python-api/current/index.html) - The official low-level Python client for [Elasticsearch](https://www.elastic.co/products/elasticsearch).\n* [pysolr](https://github.com/django-haystack/pysolr) - A lightweight Python wrapper for [Apache Solr](https://lucene.apache.org/solr/).\n* [whoosh](http://whoosh.readthedocs.io/en/latest/) - A fast, pure Python search engine library.\n\n## Serialization\n\n*Libraries for serializing complex data types*\n\n* [marshmallow](https://github.com/marshmallow-code/marshmallow) - A lightweight library for converting complex objects to and from simple Python datatypes.\n* [pysimdjson](https://github.com/TkTech/pysimdjson) - A Python bindings for [simdjson](https://github.com/lemire/simdjson).\n* [python-rapidjson](https://github.com/python-rapidjson/python-rapidjson) - A Python wrapper around [RapidJSON](https://github.com/Tencent/rapidjson).\n* [ultrajson](https://github.com/esnme/ultrajson) - A fast JSON decoder and encoder written in C with Python bindings.\n\n## Serverless Frameworks\n\n*Frameworks for developing serverless Python code.*\n\n* [python-lambda](https://github.com/nficano/python-lambda) - A toolkit for developing and deploying Python code in AWS Lambda.\n* [Zappa](https://github.com/zappa/Zappa) - A tool for deploying WSGI applications on AWS Lambda and API Gateway.\n\n## Shell\n\n*Shells based on Python.*\n\n* [xonsh](https://github.com/xonsh/xonsh/) - A Python-powered, cross-platform, Unix-gazing shell language and command prompt.\n\n## Specific Formats Processing\n\n*Libraries for parsing and manipulating specific text formats.*\n\n* General\n    * [tablib](https://github.com/jazzband/tablib) - A module for Tabular Datasets in XLS, CSV, JSON, YAML.\n* Office\n    * [docxtpl](https://github.com/elapouya/python-docx-template) - Editing a docx document by jinja2 template\n    * [openpyxl](https://openpyxl.readthedocs.io/en/stable/) - A library for reading and writing Excel 2010 xlsx/xlsm/xltx/xltm files.\n    * [pyexcel](https://github.com/pyexcel/pyexcel) - Providing one API for reading, manipulating and writing csv, ods, xls, xlsx and xlsm files.\n    * [python-docx](https://github.com/python-openxml/python-docx) - Reads, queries and modifies Microsoft Word 2007/2008 docx files.\n    * [python-pptx](https://github.com/scanny/python-pptx) - Python library for creating and updating PowerPoint (.pptx) files.\n    * [unoconv](https://github.com/unoconv/unoconv) - Convert between any document format supported by LibreOffice/OpenOffice.\n    * [XlsxWriter](https://github.com/jmcnamara/XlsxWriter) - A Python module for creating Excel .xlsx files.\n    * [xlwings](https://github.com/ZoomerAnalytics/xlwings) - A BSD-licensed library that makes it easy to call Python from Excel and vice versa.\n    * [xlwt](https://github.com/python-excel/xlwt) / [xlrd](https://github.com/python-excel/xlrd) - Writing and reading data and formatting information from Excel files.\n* PDF\n    * [PDFMiner](https://github.com/euske/pdfminer) - A tool for extracting information from PDF documents.\n    * [PyPDF2](https://github.com/mstamy2/PyPDF2) - A library capable of splitting, merging and transforming PDF pages.\n    * [ReportLab](https://www.reportlab.com/opensource/) - Allowing Rapid creation of rich PDF documents.\n* Markdown\n    * [Mistune](https://github.com/lepture/mistune) - Fastest and full featured pure Python parsers of Markdown.\n    * [Python-Markdown](https://github.com/waylan/Python-Markdown) - A Python implementation of John Gruber\u2019s Markdown.\n* YAML\n    * [PyYAML](http://pyyaml.org/) - YAML implementations for Python.\n* CSV\n    * [csvkit](https://github.com/wireservice/csvkit) - Utilities for converting to and working with CSV.\n* Archive\n    * [unp](https://github.com/mitsuhiko/unp) - A command line tool that can unpack archives easily.\n\n## Static Site Generator\n\n*Static site generator is a software that takes some text + templates as input and produces HTML files on the output.*\n\n* [lektor](https://github.com/lektor/lektor) - An easy to use static CMS and blog engine.\n* [mkdocs](https://github.com/mkdocs/mkdocs/) - Markdown friendly documentation generator.\n* [makesite](https://github.com/sunainapai/makesite) - Simple, lightweight, and magic-free static site/blog generator (< 130 lines).\n* [nikola](https://github.com/getnikola/nikola) - A static website and blog generator.\n* [pelican](https://github.com/getpelican/pelican) - Static site generator that supports Markdown and reST syntax.\n\n## Tagging\n\n*Libraries for tagging items.*\n\n* [django-taggit](https://github.com/jazzband/django-taggit) - Simple tagging for Django.\n\n## Task Queues\n\n*Libraries for working with task queues.*\n\n* [celery](https://docs.celeryproject.org/en/stable/) - An asynchronous task queue/job queue based on distributed message passing.\n* [dramatiq](https://github.com/Bogdanp/dramatiq) - A fast and reliable background task processing library for Python 3.\n* [huey](https://github.com/coleifer/huey) - Little multi-threaded task queue.\n* [mrq](https://github.com/pricingassistant/mrq) - A distributed worker task queue in Python using Redis & gevent.\n* [rq](https://github.com/rq/rq) - Simple job queues for Python.\n\n## Template Engine\n\n*Libraries and tools for templating and lexing.*\n\n* [Genshi](https://genshi.edgewall.org/) - Python templating toolkit for generation of web-aware output.\n* [Jinja2](https://github.com/pallets/jinja) - A modern and designer friendly templating language.\n* [Mako](http://www.makotemplates.org/) - Hyperfast and lightweight templating for the Python platform.\n\n## Testing\n\n*Libraries for testing codebases and generating test data.*\n\n* Testing Frameworks\n    * [hypothesis](https://github.com/HypothesisWorks/hypothesis) - Hypothesis is an advanced Quickcheck style property based testing library.\n    * [nose2](https://github.com/nose-devs/nose2) - The successor to `nose`, based on `unittest2.\n    * [pytest](https://docs.pytest.org/en/latest/) - A mature full-featured Python testing tool.\n    * [Robot Framework](https://github.com/robotframework/robotframework) - A generic test automation framework.\n    * [unittest](https://docs.python.org/3/library/unittest.html) - (Python standard library) Unit testing framework.\n* Test Runners\n    * [green](https://github.com/CleanCut/green) - A clean, colorful test runner.\n    * [mamba](http://nestorsalceda.github.io/mamba/) - The definitive testing tool for Python. Born under the banner of BDD.\n    * [tox](https://tox.readthedocs.io/en/latest/) - Auto builds and tests distributions in multiple Python versions\n* GUI / Web Testing\n    * [locust](https://github.com/locustio/locust) - Scalable user load testing tool written in Python.\n    * [PyAutoGUI](https://github.com/asweigart/pyautogui) - PyAutoGUI is a cross-platform GUI automation Python module for human beings.\n    * [Schemathesis](https://github.com/kiwicom/schemathesis) - A tool for automatic property-based testing of web applications built with Open API / Swagger specifications.\n    * [Selenium](https://pypi.org/project/selenium/) - Python bindings for [Selenium](http://www.seleniumhq.org/) WebDriver.\n    * [sixpack](https://github.com/seatgeek/sixpack) - A language-agnostic A/B Testing framework.\n    * [splinter](https://github.com/cobrateam/splinter) - Open source tool for testing web applications.\n* Mock\n    * [doublex](https://pypi.org/project/doublex/) - Powerful test doubles framework for Python.\n    * [freezegun](https://github.com/spulec/freezegun) - Travel through time by mocking the datetime module.\n    * [httmock](https://github.com/patrys/httmock) - A mocking library for requests for Python 2.6+ and 3.2+.\n    * [httpretty](https://github.com/gabrielfalcao/HTTPretty) - HTTP request mock tool for Python.\n    * [mock](https://docs.python.org/3/library/unittest.mock.html) - (Python standard library) A mocking and patching library.\n    * [mocket](https://github.com/mindflayer/python-mocket) - A socket mock framework with gevent/asyncio/SSL support.\n    * [responses](https://github.com/getsentry/responses) - A utility library for mocking out the requests Python library.\n    * [VCR.py](https://github.com/kevin1024/vcrpy) - Record and replay HTTP interactions on your tests.\n* Object Factories\n    * [factory_boy](https://github.com/FactoryBoy/factory_boy) - A test fixtures replacement for Python.\n    * [mixer](https://github.com/klen/mixer) - Another fixtures replacement. Supports Django, Flask, SQLAlchemy, Peewee and etc.\n    * [model_mommy](https://github.com/vandersonmota/model_mommy) - Creating random fixtures for testing in Django.\n* Code Coverage\n    * [coverage](https://pypi.org/project/coverage/) - Code coverage measurement.\n* Fake Data\n    * [fake2db](https://github.com/emirozer/fake2db) - Fake database generator.\n    * [faker](https://github.com/joke2k/faker) - A Python package that generates fake data.\n    * [mimesis](https://github.com/lk-geimfari/mimesis) - is a Python library that help you generate fake data.\n    * [radar](https://pypi.org/project/radar/) - Generate random datetime / time.\n\n## Text Processing\n\n*Libraries for parsing and manipulating plain texts.*\n\n* General\n    * [chardet](https://github.com/chardet/chardet) - Python 2/3 compatible character encoding detector.\n    * [difflib](https://docs.python.org/3/library/difflib.html) - (Python standard library) Helpers for computing deltas.\n    * [ftfy](https://github.com/LuminosoInsight/python-ftfy) - Makes Unicode text less broken and more consistent automagically.\n    * [fuzzywuzzy](https://github.com/seatgeek/fuzzywuzzy) - Fuzzy String Matching.\n    * [Levenshtein](https://github.com/ztane/python-Levenshtein/) - Fast computation of Levenshtein distance and string similarity.\n    * [pangu.py](https://github.com/vinta/pangu.py) - Paranoid text spacing.\n    * [pyfiglet](https://github.com/pwaller/pyfiglet) - An implementation of figlet written in Python.\n    * [pypinyin](https://github.com/mozillazg/python-pinyin) - Convert Chinese hanzi (\u6f22\u5b57) to pinyin (\u62fc\u97f3).\n    * [textdistance](https://github.com/orsinium/textdistance) - Compute distance between sequences with 30+ algorithms.\n    * [unidecode](https://pypi.org/project/Unidecode/) - ASCII transliterations of Unicode text.\n* Slugify\n    * [awesome-slugify](https://github.com/dimka665/awesome-slugify) - A Python slugify library that can preserve unicode.\n    * [python-slugify](https://github.com/un33k/python-slugify) - A Python slugify library that translates unicode to ASCII.\n    * [unicode-slugify](https://github.com/mozilla/unicode-slugify) - A slugifier that generates unicode slugs with Django as a dependency.\n* Unique identifiers\n    * [hashids](https://github.com/davidaurelio/hashids-python) - Implementation of [hashids](http://hashids.org) in Python.\n    * [shortuuid](https://github.com/skorokithakis/shortuuid) - A generator library for concise, unambiguous and URL-safe UUIDs.\n* Parser\n    * [ply](https://github.com/dabeaz/ply) - Implementation of lex and yacc parsing tools for Python.\n    * [pygments](http://pygments.org/) - A generic syntax highlighter.\n    * [pyparsing](https://github.com/pyparsing/pyparsing) - A general purpose framework for generating parsers.\n    * [python-nameparser](https://github.com/derek73/python-nameparser) - Parsing human names into their individual components.\n    * [python-phonenumbers](https://github.com/daviddrysdale/python-phonenumbers) - Parsing, formatting, storing and validating international phone numbers.\n    * [python-user-agents](https://github.com/selwin/python-user-agents) - Browser user agent parser.\n    * [sqlparse](https://github.com/andialbrecht/sqlparse) - A non-validating SQL parser.\n\n## Third-party APIs\n\n*Libraries for accessing third party services APIs. Also see [List of Python API Wrappers and Libraries](https://github.com/realpython/list-of-python-api-wrappers).*\n\n* [apache-libcloud](https://libcloud.apache.org/) - One Python library for all clouds.\n* [boto3](https://github.com/boto/boto3) - Python interface to Amazon Web Services.\n* [django-wordpress](https://github.com/istrategylabs/django-wordpress) - WordPress models and views for Django.\n* [facebook-sdk](https://github.com/mobolic/facebook-sdk) - Facebook Platform Python SDK.\n* [google-api-python-client](https://github.com/google/google-api-python-client) - Google APIs Client Library for Python.\n* [gspread](https://github.com/burnash/gspread) - Google Spreadsheets Python API.\n* [twython](https://github.com/ryanmcgrath/twython) - A Python wrapper for the Twitter API.\n\n## URL Manipulation\n\n*Libraries for parsing URLs.*\n\n* [furl](https://github.com/gruns/furl) - A small Python library that makes parsing and manipulating URLs easy.\n* [purl](https://github.com/codeinthehole/purl) - A simple, immutable URL class with a clean API for interrogation and manipulation.\n* [pyshorteners](https://github.com/ellisonleao/pyshorteners) - A pure Python URL shortening lib.\n* [webargs](https://github.com/marshmallow-code/webargs) - A friendly library for parsing HTTP request arguments with built-in support for popular web frameworks.\n\n## Video\n\n*Libraries for manipulating video and GIFs.*\n\n* [moviepy](https://zulko.github.io/moviepy/) - A module for script-based movie editing with many formats, including animated GIFs.\n* [scikit-video](https://github.com/aizvorski/scikit-video) - Video processing routines for SciPy.\n* [vidgear](https://github.com/abhiTronix/vidgear) - Most Powerful multi-threaded Video Processing framework.\n\n## Web Asset Management\n\n*Tools for managing, compressing and minifying website assets.*\n\n* [django-compressor](https://github.com/django-compressor/django-compressor) - Compresses linked and inline JavaScript or CSS into a single cached file.\n* [django-pipeline](https://github.com/jazzband/django-pipeline) - An asset packaging library for Django.\n* [django-storages](https://github.com/jschneier/django-storages) - A collection of custom storage back ends for Django.\n* [fanstatic](http://www.fanstatic.org/en/latest/) - Packages, optimizes, and serves static file dependencies as Python packages.\n* [fileconveyor](http://wimleers.com/fileconveyor) - A daemon to detect and sync files to CDNs, S3 and FTP.\n* [flask-assets](https://github.com/miracle2k/flask-assets) - Helps you integrate webassets into your Flask app.\n* [webassets](https://github.com/miracle2k/webassets) - Bundles, optimizes, and manages unique cache-busting URLs for static resources.\n\n## Web Content Extracting\n\n*Libraries for extracting web contents.*\n\n* [html2text](https://github.com/Alir3z4/html2text) - Convert HTML to Markdown-formatted text.\n* [lassie](https://github.com/michaelhelmick/lassie) - Web Content Retrieval for Humans.\n* [micawber](https://github.com/coleifer/micawber) - A small library for extracting rich content from URLs.\n* [newspaper](https://github.com/codelucas/newspaper) - News extraction, article extraction and content curation in Python.\n* [python-readability](https://github.com/buriy/python-readability) - Fast Python port of arc90's readability tool.\n* [requests-html](https://github.com/psf/requests-html) - Pythonic HTML Parsing for Humans.\n* [sumy](https://github.com/miso-belica/sumy) - A module for automatic summarization of text documents and HTML pages.\n* [textract](https://github.com/deanmalmgren/textract) - Extract text from any document, Word, PowerPoint, PDFs, etc.\n* [toapi](https://github.com/gaojiuli/toapi) - Every web site provides APIs.\n\n## Web Crawling\n\n*Libraries to automate web scraping.*\n\n* [cola](https://github.com/chineking/cola) - A distributed crawling framework.\n* [feedparser](https://pythonhosted.org/feedparser/) - Universal feed parser.\n* [grab](https://github.com/lorien/grab) - Site scraping framework.\n* [MechanicalSoup](https://github.com/MechanicalSoup/MechanicalSoup) - A Python library for automating interaction with websites.\n* [portia](https://github.com/scrapinghub/portia) - Visual scraping for Scrapy.\n* [pyspider](https://github.com/binux/pyspider) - A powerful spider system.\n* [robobrowser](https://github.com/jmcarp/robobrowser) - A simple, Pythonic library for browsing the web without a standalone web browser.\n* [scrapy](https://scrapy.org/) - A fast high-level screen scraping and web crawling framework.\n\n## Web Frameworks\n\n*Traditional full stack web frameworks. Also see [RESTful API](https://github.com/vinta/awesome-python#restful-api).*\n\n* Synchronous\n    * [Django](https://www.djangoproject.com/) - The most popular web framework in Python.\n        * [awesome-django](https://github.com/shahraizali/awesome-django)\n        * [awesome-django](https://github.com/wsvincent/awesome-django)\n    * [Flask](http://flask.pocoo.org/) - A microframework for Python.\n        * [awesome-flask](https://github.com/humiaozuzu/awesome-flask)\n    * [Pyramid](https://pylonsproject.org/) - A small, fast, down-to-earth, open source Python web framework.\n        * [awesome-pyramid](https://github.com/uralbash/awesome-pyramid)\n    * [Masonite](https://github.com/MasoniteFramework/masonite) - The modern and developer centric Python web framework.\n* Asynchronous\n    * [Tornado](http://www.tornadoweb.org/en/latest/) - A web framework and asynchronous networking library.\n\n## WebSocket\n\n*Libraries for working with WebSocket.*\n\n* [autobahn-python](https://github.com/crossbario/autobahn-python) - WebSocket & WAMP for Python on Twisted and [asyncio](https://docs.python.org/3/library/asyncio.html).\n* [channels](https://github.com/django/channels) - Developer-friendly asynchrony for Django.\n* [websockets](https://github.com/aaugustin/websockets) - A library for building WebSocket servers and clients with a focus on correctness and simplicity.\n\n## WSGI Servers\n\n*WSGI-compatible web servers.*\n\n* [bjoern](https://github.com/jonashaag/bjoern) - Asynchronous, very fast and written in C.\n* [gunicorn](https://github.com/benoitc/gunicorn) - Pre-forked, ported from Ruby's Unicorn project.\n* [uWSGI](https://uwsgi-docs.readthedocs.io/en/latest/) - A project aims at developing a full stack for building hosting services, written in C.\n* [waitress](https://github.com/Pylons/waitress) - Multi-threaded, powers Pyramid.\n* [werkzeug](https://github.com/pallets/werkzeug) - A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects.\n\n# Resources\n\nWhere to discover learning resources or new Python libraries.\n\n## Books\n\n- [Fluent Python](https://www.oreilly.com/library/view/fluent-python/9781491946237/)\n- [Think Python](https://greenteapress.com/wp/think-python-2e/)\n\n## Websites\n\n* Tutorials\n    * [Full Stack Python](https://www.fullstackpython.com/)\n    * [Python Cheatsheet](https://www.pythoncheatsheet.org/)\n    * [Real Python](https://realpython.com)\n    * [The Hitchhiker\u2019s Guide to Python](https://docs.python-guide.org/)\n    * [Ultimate Python study guide](https://github.com/huangsam/ultimate-python)\n* Libraries\n    * [Awesome Python @LibHunt](https://python.libhunt.com/)\n* Others\n    * [Python ZEEF](https://python.zeef.com/alan.richmond)\n    * [Pythonic News](https://news.python.sc/)\n    * [What the f*ck Python!](https://github.com/satwikkansal/wtfpython)\n\n## Newsletters\n\n* [Awesome Python Newsletter](http://python.libhunt.com/newsletter)\n* [Pycoder's Weekly](http://pycoders.com/)\n* [Python Tricks](https://realpython.com/python-tricks/)\n* [Python Weekly](http://www.pythonweekly.com/)\n\n## Podcasts\n\n* [Django Chat](https://djangochat.com/)\n* [Podcast.\\_\\_init__](https://podcastinit.com/)\n* [Python Bytes](https://pythonbytes.fm)\n* [Running in Production](https://runninginproduction.com/)\n* [Talk Python To Me](https://talkpython.fm/)\n* [Test and Code](https://testandcode.com/)\n* [The Real Python Podcast](https://realpython.com/podcasts/rpp/)\n\n# Contributing\n\nYour contributions are always welcome! Please take a look at the [contribution guidelines](https://github.com/vinta/awesome-python/blob/master/CONTRIBUTING.md) first.\n\nI will keep some pull requests open if I'm not sure whether those libraries are awesome, you could [vote for them](https://github.com/vinta/awesome-python/pulls) by adding :+1: to them. Pull requests will be merged when their votes reach **20**.\n\n- - -\n\nIf you have any question about this opinionated list, do not hesitate to contact me [@VintaChen](https://twitter.com/VintaChen) on Twitter or open an issue on GitHub.\n\n"
}